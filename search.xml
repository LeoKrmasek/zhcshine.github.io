<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>音视频基础</title>
      <link href="/2019/12/16/%E9%9F%B3%E8%A7%86%E9%A2%91%E5%9F%BA%E7%A1%80/"/>
      <url>/2019/12/16/%E9%9F%B3%E8%A7%86%E9%A2%91%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<h2 id="音频基础">音频基础</h2><h3 id="声音的本质">声音的本质</h3><blockquote><p>声音其实是一种能量波，因此也有频率和振幅的特征，频率对应于时间轴线，振幅对应于电平轴线。波是无限光滑的，弦线可以看成由无数点组成，由于存储空间是相对有限的，数字编码过程中，必须对弦线的点进行采样。</p></blockquote><p><a href="https://baike.baidu.com/item/%E5%A3%B0%E9%9F%B3%E5%90%AC%E8%A7%89" target="_blank" rel="noopener">声音三要素</a></p><ul><li>音高/音调/音频： 客观上音高大小主要取决于声波基频的高低，频率高则音调高，反之则低，单位用赫兹(Hz）表示。儿童(高音区)-&gt;女生(高音区)-&gt;男生（低音区）</li><li>音量/响度/声强：常说的声音大小，主要取决于声波振幅的大小。</li><li>音色/音品：和材质相关（比如钢琴等），本质是谐波。</li></ul><p>音量和声调 <img src="https://zhuohc-com.oss-cn-hangzhou.aliyuncs.com/%E9%9F%B3%E9%87%8F%E5%92%8C%E5%A3%B0%E8%B0%83.png"></p><blockquote><p>人类的听觉范围：20Hz-20kHz</p></blockquote><h3 id="音频量化过程">音频量化过程</h3><p>音频量化过程 <img src="https://zhuohc-com.oss-cn-hangzhou.aliyuncs.com/%E9%9F%B3%E9%A2%91%E9%87%8F%E5%8C%96%E8%BF%87%E7%A8%8B.png"></p><ol type="1"><li>按横轴时间进行切割</li><li>按纵轴振幅(决定音量)进行切割</li><li>编码转成数字信号</li></ol><ul><li><em><font color="#2bbc8a">采样大小</font></em> 一个采样用多个bit存放，常用16位(2<sup>16</sup>=65535)，振幅</li><li><em><font color="#2bbc8a">采样率</font></em> 采样频率8k、16k、32k、44.1k、48k等 <a href="https://baike.baidu.com/item/音频采样率" target="_blank" rel="noopener">采样率概念</a></li><li><em><font color="#2bbc8a">声道数</font></em> 单声道、双声道、多声道</li></ul><p><strong>码率计算</strong></p><ul><li>音频流的码率=采样率×采样大小×声道数</li><li>例如：采样率44.1kHz、采样大小为16bit、双声道的pcm编码wav文件，码率=44.1k×16×2=1411.2kb/s</li></ul><h3 id="音频压缩技术">音频压缩技术</h3><p><strong>消除音频冗余数据</strong></p><ol type="1"><li>删除人耳听觉范围外的音频信号： 20Hz-20kHz</li><li>被掩避掉的音频信号： 频域遮蔽, 时域遮蔽</li><li>哈夫曼无损编码</li></ol><h3 id="音频编解码器">音频编解码器</h3><p>常见的编解码器</p><ol type="1"><li>OPUS： 开源、rmtp协议不支持</li><li>AAC：收费、适合实时互动项目。</li><li>Vorbis：开源</li><li>Speex：开源、优势：还支持一些回音消除、降噪等处理办法</li><li>iLBC</li><li>AMR</li><li>G.711：与固定电话就行融合</li></ol><p>性能对比</p><ol type="1"><li>OPUS &gt; AAC(常用) &gt; Vorbis</li><li>AAC： advanced audio coding</li><li>常见规格： AAC LC（低复杂度，码流128k）、AAC HE V1（）、 AAC HE V2</li><li>AAC LC + SBR = AAC HE V1</li><li>AAC HE V1 + PS = AAC HE V2</li></ol><p>aac规格 <img src="https://zhuohc-com.oss-cn-hangzhou.aliyuncs.com/aac%E8%A7%84%E6%A0%BC.png"></p><p>AAC格式： * ADIF * ADTS</p><p>AAC编码库： 1. libfdk_aac(常用) 2. ffmpeg aac 3. libfaac 4. libvo_aacenc</p><h2 id="视频基础">视频基础</h2><h3 id="视频编解码器">视频编解码器</h3><ul><li>x264：最流行的</li><li>x265：耗性能</li><li>openH264：支持svc视频技术</li><li>vp8: x264</li><li>vp9: x265</li></ul><h3 id="h264基本概念">H264基本概念</h3><ul><li><p>I帧： 关键帧、采用帧内压缩技术</p></li><li><p>P帧：向前参考帧，采用帧内压缩技术</p></li><li><p>B帧：双向参考帧，采用帧内压缩技术</p></li><li><p>GOF: 一组帧group of frame</p></li><li><p>SPS: Sequence parameter set: 序列参数集：存放一组帧的存放帧数，参考帧数目，解码图像尺寸等</p></li><li><p>PPS： picture parameter set: 图像参数集：存放熵编码模式选择标识、片组数目等</p></li></ul><h3 id="h264压缩技术">H264压缩技术</h3><ul><li>帧内压缩：解决空域数据冗余技术</li><li>帧间压缩：解决时域数据冗余技术</li><li>整数离散余弦变换(DCT)：将空间上的相关性变为频域上无关的数据然后进行量化</li><li>CABAC压缩</li></ul><p>H264结构图 <img src="https://zhuohc-com.oss-cn-hangzhou.aliyuncs.com/H264%E7%BB%93%E6%9E%84%E5%9B%BE.png"></p><h3 id="h264编码分层">H264编码分层</h3><ul><li>NAL层：network abstraction layer 视频数据网络抽象层</li><li>VCL层：video coding layer 视频数据编码层</li></ul><h3 id="码流">码流</h3><ul><li>SODB: string of data bits 原始数据比特流，它是由vcl层产生的</li><li>RBSP: 在SODB最后一位补1，不按字节对其则补0 EBSP NALU *NAL: HEADER + EBSP</li></ul>]]></content>
      
      
      <categories>
          
          <category> 原理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Ffmpeg </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>从前端到&quot;钱&quot;端</title>
      <link href="/2019/12/16/%E4%BB%8E%E5%89%8D%E7%AB%AF%E5%88%B0%E9%92%B1%E7%AB%AF/"/>
      <url>/2019/12/16/%E4%BB%8E%E5%89%8D%E7%AB%AF%E5%88%B0%E9%92%B1%E7%AB%AF/</url>
      
        <content type="html"><![CDATA[<p>转载: InfoQ 二叉树团队</p><blockquote><p>我的心里种下了一颗种子：坚信做前端这件事情是有前途的。</p></blockquote><p>我最早接触前端是在大学的时候，我在中国的黑白棋小圈子里面还是很活跃的，一群棋友经常一起下棋。后来我们的论坛里要有展示棋谱的功能，因为我很擅长，所以就很积极地去研究怎么改进。我花了很长的时间才搞清楚几个带 Java 的技术——Java、JavaScript、Java Applet 都是干嘛用的，然后我就发现 JavaScript 的能力比我想象中的要强得多。</p><p>这时候其实我心里就种下了一颗种子：坚信做前端这件事情是有前途的。这个预判主要是发现了技术的潜力，发现市面上产品跟你预判的技术潜力有差别。后来了解得多了，我发现 W3C 所主导的万维网能力无穷，我就变成了 Web 的信徒。在我看来，这种开放性的东西才是人类软件的未来，私有技术终究会逐渐被标准化，而标准化会越来越强大。</p><p>后来我就开始有意识地去参与一些前端的社区、论坛，我其实是一个很会混社区的人，我在社区基本上是如鱼得水，我很会交“技术大牛”的朋友。比如接触月影、周爱民老师，我一点也不害羞。其实大部分社区中看起来高高在上的大牛，他们都是比较 nice 的。</p><blockquote><p>过去十年，是前端觉醒的十年。</p></blockquote><p>前端这个行业很年轻，更早时候其实是有前端工作但是没有前端岗位。大家觉得这个东西程序员做也行，设计师做也行。前端工作一直存在，但是没有人认为它是一个独立的工种和岗位，也没有人去发展它的工程体系，更没有人去找它的核心价值。<strong>所以如果说过去十年前端是什么样的十年，我认为是觉醒的十年。</strong></p><p>在过去十年中，前端技术的发展大致经历了三个阶段：</p><p>首先是青铜时代，就是 2008 年前后那段时间，前端圈子里流行的是各种特效，比如鼠标跟随、Flash，当时觉得非常炫酷，今天看来有点 low。</p><p>其次是白银时代，大约是 2009 年到 2011 年这段时间。大家的观念开始转变了，从单纯的说我要做一个什么样的效果，开始关注我怎么样做这个效果能够更方便。如果回头来看，jQuery 抓的两个点是很准的：第一点叫做 API 的应用性；第二点叫做浏览器的兼容性。jQuery 以这两点为核心，打造了一套这样的开发框架，白银时代其实就是最终以 jQuery 大获全胜落幕。</p><p>另外就是黄金时代，其实也是我加入手淘的时间点，也是移动前端开始抬头的时间点。这个时候不管是移动前端还是桌面开发前端，都开始进入到了一个正规化阶段，开始关注工程体系，开始关注自身价值，开始关注质量与效率，同时这个时期也是 Node.js 崛起的时期。</p><blockquote><p>加入手机淘宝，它看起来不像是一个会死的产品。</p></blockquote><p>我在毕业找工作的时候，就有意识地去看前端岗位，但是因为那个时候前端岗位级别不高、工资跟客户端也有差距，所以我就“曲线救国”，去做浏览器开发。这段经历让我了解了很多的底层知识。另外很有意思的一点，无论第一份工作在微软，还是后来在盛大，我都是阴差阳错跟移动开发结下不解之缘。</p><p>遗憾的是，我在上两个公司做的产品都不算成功，后来我就在想，我一定要找一个成功的产品。找来找去，发现阿里不错——手机淘宝，这个东西听起来就不像是一个会死的产品，后来我就加入手机淘宝，成为了手机淘宝前端负责人，正式进入前端领域。</p><blockquote><p>前端Leader的焦虑感：为什么没了你不行，有了你一定能有什么东西？</p></blockquote><p>在阿里有几个大的前端团队，我们这些大的前端团队的 Leader，其实内心的焦虑感是很强的——前端作为一个新生职能，怎么才能够像服务端、客户端一样，给团队找到核心价值？如果你的团队只是接需求、做需求，技术再好的人，最后也会变成一个“看摊儿”的人。</p><p>这个里面有一定的必要性，就是说没了你不行；当然还要有一定的充分性，就是有了你就有了什么东西。所以说前端团队其实可以分成两条线，一条是对内的工程上面的一些操作和一些设施的建设，这样能够提升效率，你工程上做得越深越好，结构越合理，你最后的产出就越多，这个是针对必要性的；还有一条线就是充分性，我们做性能、做跟客户端的融合，这些能够给公司带来新的价值。</p><blockquote><p>工程思想在大公司萌芽，仅靠管理方法吃不开。</p></blockquote><p>其实相对于大公司来说，社区产生的还是一些工具的思想，工程的思想还是在大公司产生，主要是因为会有一个大型团队协作上的需求倒逼你一定要这么做，而社区其实是通过规则来保证团队协作的。</p><p>靠规则建立协作，太慢，大公司是接受不了的，它一定需要强有力的推动。比如说我们今天用的东西版本太旧，是不是大家要统一升个级？如果我们用纯粹的管理方法，我写一封邮件要求大家都升级，不升级的今年没有奖金，这是管理的思想。但是其实我们工程团队还有更好的办法，干脆就是对你用的旧版本给你提示，甚至强行推荐你在网上下载最新版本。这个工程思想对于前端行业来说意义深远，但其实前端行业在这个上面已经有点太晚了。另外，未来伴随项目复杂性的提升，工程思想一定还会再进化，再去衍生出更多新的想法。</p><blockquote><p>全栈不是把别人的东西抢过来，而是把自己的东西赋能出去。</p></blockquote><p>工程之后，还有一块比较重要，就是全栈。其实全栈这个想法也是从社区逐渐渗透到公司里的，一开始大家对全栈的理解是很狭隘的，一些前端同学觉得现在有 Node.js，他们也能写服务端的东西。后来发现出现了不可调和的矛盾，尤其是在阿里这样的公司，服务端这么多年下来有很多很重要的基础设施，你去 Node.js 体系下再发展一遍，一是没有必要，二是没有资源，阿里有很多中间件团队，你不管怎么做，都不可能有他们的深度。</p><p>另外这也是我当时犯的一个很基础的错误：前端本来就缺人，你把前端转成全栈去做服务端的事情，你前端更缺人了。后来发现逐渐有人探索出一条路：全栈不是说把自己的能力堆上去，而是你要把自己强势的东西给它赋能出去，让别人具有全栈的能力。</p><p>我们就开始尝试着在这种类型的业务上面，把前端技术工作交给服务端同学去做。我们提供基础设施、组件、工具，又提供培训。一开始服务端的同学都不太高兴，说你们前端就是想偷懒，后来他们发现不对，这是好事情，以前我只能做一部分，我还得跟前端去做一些联调，现在我自己全都做了：一是业绩上好看，二是省去沟通成本，三是个人能力提升了。服务端同学越来越支持这件事，后来淘宝的中后台业务都转向了这种模式。</p><p>而服务端同学也做了很多 API 平台，提供定制 API 的能力，其他部门不需要找服务端去开发新的接口，只需要少量的服务端同学参与。最后大家发现其实全栈不是把别人的东西抢过来，而是把自己的东西赋能、输出出去。其实在企业里面，不能永远是零和游戏（非合作博弈），但是这种赋能输出，是能够把零和变成正和（双赢）的。</p><blockquote><p>从前端到”钱“端：我并不把钱当做工作的目标，但是钱从来也没有亏待我。</p></blockquote><p>圈儿里很多人开玩笑说你们现在都是“钱“端了，因为挣钱多。实际上现在看一个同等水平的前端，他的价格还是略低于服务端的，不过前端最近可以说是涨得快，而且前端胜在竞争少。虽然前端基数大，但是实际上真正懂技术、会写代码的前端非常少。大部分前端就是市场上的前端，基本上是切个图，做一些机械性劳动，对于大企业来讲，是不要那种单纯只会去做机械性劳动的前端的。</p><p>今天我们很多人其实是在尝试把“钱端”的天花板弄得再高一点。其实我更愿意这样看：其实 前端本身不是你的天花板，你的个人能力才是你的天花板。</p><p>今天很多前端同学其实就是关注如何把设计师的设计稿变成一个用代码写出来的样子，那么你对业务的介入是浅的，你也就这样了。其实工程师应该做什么？从工程方面来讲，你怎么样能让更多的团队、更大规模的团队一起去协作？怎么样做出来更大规模的产品？其实还是需要我们把视角转一下——你能够真正以公司利益、以公司业务为导向，去思考你应该做什么，才能真正有晋升机会。</p><p>过去十年对我个人来说，我工作就是两个目标，一个是自我个人成长，一个是自我价值的实现。在这个过程中它必然会产生收入，我并不把钱当做工作的目标，但是钱从来也没有亏待我。我过去的经历都是在大公司，从微软到盛大到阿里，一毕业，拿到的就是差不多国内最好的 offer，后边基本上每换一个工作，工资就涨 50%，工资是其次，说明其实成长是没有耽误的。</p><p>当然 2018 年对我来说会是一个分界线，我希望把目标从自我成长切换到自我价值上来，我要去做教育这件事儿，能不能做成还不知道，但是我愿意去尝试。</p><blockquote><p>前端未来：没有什么东西是做不了的。</p></blockquote><p>如果让我来展望前端发展的话，我认为有两个方面不容忽视：</p><p>一是 AI 与前端的结合，智能研发是我非常看好的领域。我们技术圈里有一个比较流行的观点：一切机械劳动最终都是可以被计算机替代的。</p><p>另一个我比较看好的发展领域就是图形学。因为前端相对来说是一个在封装好的环境下去工作的一个代码环境，所以我认为前端未来应该会更下沉，跟图形学有更多的结合。今天我们前端还是有很多东西说我做不了，当你能够去从更底层去做的时候，就没有什么东西是你真正做不了的。我们就不会看到一个 C++ 的程序员说这个东西我做不了，因为理论上讲它可以操作计算机的所有部件，而且能以非常高的性能去做。</p><blockquote><p>前端很有意思，它充满着工程上面妥协的味道。</p></blockquote><p>说实话我觉得前端领域今天不完美和不满意的地方太多了。前端很有意思，它充满着工程上面的妥协的味道。你做技术总是希望尽善尽美，希望把每个细节都做到最好，但其实 前端是一个建立在标准之上的工作，标准本身又是工业化之后的一个妥协的产物，所以前端的 API 也好，语言也好，包括今天很流行的一些开源实践项目也好，里面有大量今天去看非常差的设计。</p><p>这些比较遗憾的东西，将来始终会作为一个包袱让我们背负着前进，这是前端的一个无奈。我们为了一些事情去付出这样的代价，但是大家还是会尝试逐步去解决这些陈旧的问题，今天我们已经看到很多旧的问题不是说把旧的改掉，而是设计一些新的东西来逐步替代它，它是一个很漫长的过程。所以有人说前端程序员喜新厌旧，说前端同学追新追的很厉害，新框架基本上隔个 4、5 年就出一个新的工具，所以很多人抱怨学不过来了。</p><p>虽然有很多不完美，但是前端也带来了很多新机遇。怎么说呢，这就是前端了。</p>]]></content>
      
      
      <categories>
          
          <category> 职业 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mongodb入门基础</title>
      <link href="/2019/12/03/Mongodb%E5%85%A5%E9%97%A8%E5%9F%BA%E7%A1%80/"/>
      <url>/2019/12/03/Mongodb%E5%85%A5%E9%97%A8%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<h2 id="安装mongodb">安装Mongodb</h2><h3 id="arch-linux">arch linux</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> aur</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git <span class="built_in">clone</span> https://aur.archlinux.org/mongodb-bin.git</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> mongodb-bin</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> makepkg -si</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo systemctl <span class="built_in">enable</span> mongodb.service</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo systemctl start mongodb.service</span></span><br></pre></td></tr></table></figure><h2 id="基础命令">基础命令</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 进入终端</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> mongo</span></span><br><span class="line">MongoDB shell version v4.2.1</span><br><span class="line">connecting to: mongodb://127.0.0.1:27017/?compressors=disabled&amp;gssapiServiceName=mongodb</span><br><span class="line">Implicit session: session &#123; "id" : UUID("5ae8192f-e4b1-408f-9795-ea731610d5ad") &#125;</span><br><span class="line">MongoDB server version: 4.2.1</span><br><span class="line">Welcome to the MongoDB shell.</span><br><span class="line">For interactive help, type "help".</span><br><span class="line">For more comprehensive documentation, see</span><br><span class="line">        http://docs.mongodb.org/</span><br><span class="line">Questions? Try the support group</span><br><span class="line">        http://groups.google.com/group/mongodb-user</span><br><span class="line">Server has startup warnings: </span><br><span class="line">2019-12-03T15:18:28.142+0800 I  STORAGE  [initandlisten] </span><br><span class="line">2019-12-03T15:18:28.142+0800 I  STORAGE  [initandlisten] ** WARNING: Using the XFS filesystem is strongly recommended with the WiredTiger storage engine</span><br><span class="line">2019-12-03T15:18:28.142+0800 I  STORAGE  [initandlisten] **          See http://dochub.mongodb.org/core/prodnotes-filesystem</span><br><span class="line">2019-12-03T15:18:28.728+0800 I  CONTROL  [initandlisten] </span><br><span class="line">2019-12-03T15:18:28.728+0800 I  CONTROL  [initandlisten] ** WARNING: Access control is not enabled for the database.</span><br><span class="line">2019-12-03T15:18:28.728+0800 I  CONTROL  [initandlisten] **          Read and write access to data and configuration is unrestricted.</span><br><span class="line">2019-12-03T15:18:28.728+0800 I  CONTROL  [initandlisten] </span><br><span class="line">2019-12-03T15:18:28.728+0800 I  CONTROL  [initandlisten] </span><br><span class="line">2019-12-03T15:18:28.728+0800 I  CONTROL  [initandlisten] ** WARNING: soft rlimits too low. rlimits set to 95847 processes, 1048576 files. Number of processes should be at least 524288 : 0.5 times number of files.</span><br><span class="line">---</span><br><span class="line">Enable MongoDB's free cloud-based monitoring service, which will then receive and display</span><br><span class="line">metrics about your deployment (disk utilization, CPU, operation statistics, etc).</span><br><span class="line"></span><br><span class="line">The monitoring data will be available on a MongoDB website with a unique URL accessible to you</span><br><span class="line">and anyone you share the URL with. MongoDB may use this information to make product</span><br><span class="line">improvements and to suggest MongoDB products and deployment options to you.</span><br><span class="line"></span><br><span class="line">To enable free monitoring, run the following command: db.enableFreeMonitoring()</span><br><span class="line">To permanently disable this reminder, run the following command: db.disableFreeMonitoring()</span><br><span class="line">---</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 打印当前数据库</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> db</span></span><br><span class="line"><span class="meta">-&gt;</span><span class="bash"> <span class="built_in">test</span></span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据库 </tag>
            
            <tag> 非关系型数据库 </tag>
            
            <tag> Mongodb </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Webpack入门基础</title>
      <link href="/2019/11/08/Webpack%E5%85%A5%E9%97%A8%E5%9F%BA%E7%A1%80/"/>
      <url>/2019/11/08/Webpack%E5%85%A5%E9%97%A8%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<h2 id="安装">安装</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> cnpm install webpack -g</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> cnpm install webpack-cli -g</span></span><br></pre></td></tr></table></figure><h2 id="基础命令">基础命令</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"># 目录结构</span><br><span class="line">.</span><br><span class="line">├── node_modules</span><br><span class="line">├── package.json</span><br><span class="line">└── src</span><br><span class="line">    ├── index.html</span><br><span class="line">    ├── js</span><br><span class="line">    │   ├── app.js</span><br><span class="line">    │   ├── module1.js</span><br><span class="line">    │   ├── module2.js</span><br><span class="line">    │   └── module3.js</span><br><span class="line">    └── json</span><br><span class="line">        └── data.json</span><br><span class="line"></span><br><span class="line">4 directories, 7 files</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 测试环境</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> webpack src/js/app.js -o dist/js/app.js --mode=development</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 生产环境</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> webpack src/js/app.js -o dist/js/app.js --mode=production</span></span><br></pre></td></tr></table></figure><p><strong>webpack命令能：</strong></p><ul><li>够编译打包js和json文件</li><li>能将es6的模块化语法转换成浏览器能识别的语法</li><li>能压缩代码</li></ul><p><strong>webpack命令不能：</strong></p><ul><li>不能编译打包css、img等文件</li><li>不能将js的es6基本语法转化为es5以下语法</li></ul><h2 id="配置">配置</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// webpack.config.js</span></span><br><span class="line"><span class="keyword">const</span> &#123;resolve&#125; = <span class="built_in">require</span>(<span class="string">'path'</span>);  <span class="comment">//node内置核心模块，用来设置路径。</span></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    entry: <span class="string">'./src/js/app.js'</span>,   <span class="comment">// 入口文件</span></span><br><span class="line">    output: &#123;                     <span class="comment">// 输出配置</span></span><br><span class="line">        filename: <span class="string">'./js/bundle.js'</span>,      <span class="comment">// 输出文件名</span></span><br><span class="line">        path: resolve(__dirname, <span class="string">'dist'</span>)   <span class="comment">//输出文件路径配置</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="built_in">module</span>: &#123;</span><br><span class="line">        rules: []</span><br><span class="line">    &#125;,</span><br><span class="line">    mode: <span class="string">'development'</span>   <span class="comment">// development, production 二选一</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> webpack</span></span><br></pre></td></tr></table></figure><h3 id="语法检查">语法检查</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 安装loader</span></span><br><span class="line">cnpm install eslint-loader eslint --save-dev</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// webpack.config.js 配置loader</span></span><br><span class="line"><span class="keyword">const</span> &#123;resolve&#125; = <span class="built_in">require</span>(<span class="string">'path'</span>);  <span class="comment">//node内置核心模块，用来设置路径。</span></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    entry: <span class="string">'./src/js/app.js'</span>,   <span class="comment">// 入口文件</span></span><br><span class="line">    output: &#123;                     <span class="comment">// 输出配置</span></span><br><span class="line">        filename: <span class="string">'./js/bundle.js'</span>,      <span class="comment">// 输出文件名</span></span><br><span class="line">        path: resolve(__dirname, <span class="string">'dist'</span>)   <span class="comment">//输出文件路径配置</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="built_in">module</span>: &#123;</span><br><span class="line">        rules: [</span><br><span class="line">            &#123;</span><br><span class="line">                test: <span class="regexp">/\.js$/</span>,  <span class="comment">//只检测js文件</span></span><br><span class="line">                exclude: <span class="regexp">/node_modules/</span>,  <span class="comment">//排除node_modules文件夹</span></span><br><span class="line">                enforce: <span class="string">"pre"</span>,  <span class="comment">//提前加载使用</span></span><br><span class="line">                use: &#123; <span class="comment">//使用eslint-loader解析</span></span><br><span class="line">                    loader: <span class="string">"eslint-loader"</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;,</span><br><span class="line">    mode: <span class="string">'development'</span>   <span class="comment">// development, production 二选一</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p><strong>package.json 添加eslintConfig</strong></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"name"</span>: <span class="string">"nodelearn"</span>,</span><br><span class="line">  <span class="attr">"version"</span>: <span class="string">"1.0.0"</span>,</span><br><span class="line">  <span class="attr">"description"</span>: <span class="string">"测试"</span>,</span><br><span class="line">  <span class="attr">"main"</span>: <span class="string">"1.js"</span>,</span><br><span class="line">  <span class="attr">"scripts"</span>: &#123;</span><br><span class="line">    <span class="attr">"test"</span>: <span class="string">"echo \"Error: no test specified\" &amp;&amp; exit 1"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"author"</span>: <span class="string">""</span>,</span><br><span class="line">  <span class="attr">"license"</span>: <span class="string">"ISC"</span>,</span><br><span class="line">  <span class="attr">"devDependencies"</span>: &#123;</span><br><span class="line">    <span class="attr">"eslint"</span>: <span class="string">"^6.6.0"</span>,</span><br><span class="line">    <span class="attr">"eslint-loader"</span>: <span class="string">"^3.0.2"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"eslintConfig"</span>: &#123;</span><br><span class="line">    <span class="attr">"parserOptions"</span>: &#123;</span><br><span class="line">      <span class="attr">"ecmaVersion"</span>: <span class="number">8</span>,</span><br><span class="line">      <span class="attr">"sourceType"</span>: <span class="string">"module"</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="语法转换">语法转换</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> cnpm install babel-loader @babel/core @babel/preset-env --save-dev</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> &#123;resolve&#125; = <span class="built_in">require</span>(<span class="string">'path'</span>);  <span class="comment">//node内置核心模块，用来设置路径。</span></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    entry: <span class="string">'./src/js/app.js'</span>,   <span class="comment">// 入口文件</span></span><br><span class="line">    output: &#123;                     <span class="comment">// 输出配置</span></span><br><span class="line">        filename: <span class="string">'./js/bundle.js'</span>,      <span class="comment">// 输出文件名</span></span><br><span class="line">        path: resolve(__dirname, <span class="string">'dist'</span>)   <span class="comment">//输出文件路径配置</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="built_in">module</span>: &#123;</span><br><span class="line">        rules: [</span><br><span class="line">            &#123;</span><br><span class="line">                test: <span class="regexp">/\.js$/</span>,  <span class="comment">//只检测js文件</span></span><br><span class="line">                exclude: <span class="regexp">/node_modules/</span>,  <span class="comment">//排除node_modules文件夹</span></span><br><span class="line">                enforce: <span class="string">"pre"</span>,  <span class="comment">//提前加载使用</span></span><br><span class="line">                use: &#123; <span class="comment">//使用eslint-loader解析</span></span><br><span class="line">                    loader: <span class="string">"eslint-loader"</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                test: <span class="regexp">/\.js$/</span>,</span><br><span class="line">                exclude: <span class="regexp">/node_modules/</span>,</span><br><span class="line">                use: &#123;</span><br><span class="line">                    loader: <span class="string">"babel-loader"</span>,</span><br><span class="line">                    options: &#123;</span><br><span class="line">                        presets: [<span class="string">'@babel/preset-env'</span>]</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;,</span><br><span class="line">    mode: <span class="string">'development'</span>   <span class="comment">// development, production 二选一</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="打包html文件">打包html文件</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> cnpm install html-webpack-plugin --save-dev</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> cnpm install clean-webpack-plugin --save-dev</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> cnpm install html-loader --save-dev</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// webpack.config.js</span></span><br><span class="line"><span class="comment">// 引入webpack</span></span><br><span class="line"><span class="keyword">const</span> webpack = <span class="built_in">require</span>(<span class="string">'webpack'</span>);</span><br><span class="line"><span class="comment">// 配置插件</span></span><br><span class="line"><span class="keyword">const</span> HtmlWebpackPlugin = <span class="built_in">require</span>(<span class="string">'html-webpack-plugin'</span>); <span class="comment">//引入插件html-webpack-plugin</span></span><br><span class="line"><span class="keyword">const</span> &#123;CleanWebpackPlugin&#125; = <span class="built_in">require</span>(<span class="string">'clean-webpack-plugin'</span>);  <span class="comment">//引入清除文件插件</span></span><br><span class="line"><span class="keyword">const</span> &#123;resolve&#125; = <span class="built_in">require</span>(<span class="string">'path'</span>);  <span class="comment">//node内置核心模块，用来设置路径。</span></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    entry: <span class="string">'./src/js/app.js'</span>,   <span class="comment">// 入口文件</span></span><br><span class="line">    output: &#123;                     <span class="comment">// 输出配置</span></span><br><span class="line">        filename: <span class="string">'./js/bundle.js'</span>,      <span class="comment">// 输出文件名</span></span><br><span class="line">        path: resolve(__dirname, <span class="string">'dist'</span>)   <span class="comment">//输出文件路径配置</span></span><br><span class="line">    &#125;,</span><br><span class="line">    plugins: [</span><br><span class="line">        <span class="keyword">new</span> HtmlWebpackPlugin(&#123;</span><br><span class="line">            template: <span class="string">'./src/index.html'</span>,</span><br><span class="line">            filename: <span class="string">'index.html'</span>,<span class="comment">// 默认情况下生成的 html 文件叫 index.html</span></span><br><span class="line">            minify: &#123;</span><br><span class="line">                collapseWhitespace: <span class="literal">true</span>, <span class="comment">//把生成的 index.html 文件的内容的没用空格去掉，减少空间</span></span><br><span class="line">            &#125;,</span><br><span class="line">            hash: <span class="literal">true</span>, <span class="comment">//为了更好的 cache，可以在文件名后加个 hash。</span></span><br><span class="line">        &#125;),</span><br><span class="line">        <span class="keyword">new</span> CleanWebpackPlugin(), <span class="comment">//实例化，参数为目录</span></span><br><span class="line">    ],</span><br><span class="line">    <span class="built_in">module</span>: &#123;</span><br><span class="line">        rules: [</span><br><span class="line">            &#123;</span><br><span class="line">                test: <span class="regexp">/\.js$/</span>,  <span class="comment">//只检测js文件</span></span><br><span class="line">                exclude: <span class="regexp">/node_modules/</span>,  <span class="comment">//排除node_modules文件夹</span></span><br><span class="line">                enforce: <span class="string">"pre"</span>,  <span class="comment">//提前加载使用</span></span><br><span class="line">                use: &#123; <span class="comment">//使用eslint-loader解析</span></span><br><span class="line">                    loader: <span class="string">"eslint-loader"</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                test: <span class="regexp">/\.js$/</span>,</span><br><span class="line">                exclude: <span class="regexp">/node_modules/</span>,</span><br><span class="line">                use: &#123;</span><br><span class="line">                    loader: <span class="string">"babel-loader"</span>,</span><br><span class="line">                    options: &#123;</span><br><span class="line">                        presets: [<span class="string">'@babel/preset-env'</span>]</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;,</span><br><span class="line">    mode: <span class="string">'development'</span>   <span class="comment">// development, production 二选一</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="自动编译打包运行">自动编译打包运行</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> cnpm install webpack --save-dev</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> cnpm install webpack-dev-server --save-dev</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> cnpm install webpack-cli --save-dev</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// webpack.config.js 添加devtool, devServer, plugins</span></span><br><span class="line"><span class="comment">// 引入webpack</span></span><br><span class="line"><span class="comment">// 引入webpack</span></span><br><span class="line"><span class="keyword">const</span> webpack = <span class="built_in">require</span>(<span class="string">'webpack'</span>);</span><br><span class="line"><span class="comment">// 配置插件</span></span><br><span class="line"><span class="keyword">const</span> HtmlWebpackPlugin = <span class="built_in">require</span>(<span class="string">'html-webpack-plugin'</span>); <span class="comment">//引入插件html-webpack-plugin</span></span><br><span class="line"><span class="keyword">const</span> &#123;CleanWebpackPlugin&#125; = <span class="built_in">require</span>(<span class="string">'clean-webpack-plugin'</span>);  <span class="comment">//引入清除文件插件</span></span><br><span class="line"><span class="keyword">const</span> &#123;resolve&#125; = <span class="built_in">require</span>(<span class="string">'path'</span>);  <span class="comment">//node内置核心模块，用来设置路径。</span></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    entry: <span class="string">'./src/js/app.js'</span>,   <span class="comment">// 入口文件</span></span><br><span class="line">    output: &#123;                     <span class="comment">// 输出配置</span></span><br><span class="line">        filename: <span class="string">'./js/bundle.js'</span>,      <span class="comment">// 输出文件名</span></span><br><span class="line">        path: resolve(__dirname, <span class="string">'dist'</span>)   <span class="comment">//输出文件路径配置</span></span><br><span class="line">    &#125;,</span><br><span class="line">    devtool: <span class="string">'inline-source-map'</span>,  <span class="comment">// 将编译后的代码映射回原始源代码，更容易地追踪错误和警告</span></span><br><span class="line">    devServer: &#123;</span><br><span class="line">        contentBase: <span class="string">'./dist'</span>,  <span class="comment">//项目根路径</span></span><br><span class="line">        hot: <span class="literal">true</span>,  <span class="comment">//开启热模替换功能</span></span><br><span class="line">        open: <span class="literal">true</span>  <span class="comment">//自动打开浏览器</span></span><br><span class="line">    &#125;,</span><br><span class="line">    plugins: [</span><br><span class="line">        <span class="keyword">new</span> HtmlWebpackPlugin(&#123;</span><br><span class="line">            template: <span class="string">'./src/index.html'</span>,</span><br><span class="line">            filename: <span class="string">'index.html'</span>,<span class="comment">// 默认情况下生成的 html 文件叫 index.html</span></span><br><span class="line">            minify: &#123;</span><br><span class="line">                collapseWhitespace: <span class="literal">true</span>, <span class="comment">//把生成的 index.html 文件的内容的没用空格去掉，减少空间</span></span><br><span class="line">            &#125;,</span><br><span class="line">            hash: <span class="literal">true</span>, <span class="comment">//为了更好的 cache，可以在文件名后加个 hash。</span></span><br><span class="line">        &#125;),</span><br><span class="line">        <span class="keyword">new</span> CleanWebpackPlugin(), <span class="comment">//实例化，参数为目录</span></span><br><span class="line">        <span class="keyword">new</span> webpack.NamedModulesPlugin(),</span><br><span class="line">        <span class="keyword">new</span> webpack.HotModuleReplacementPlugin()</span><br><span class="line">    ],</span><br><span class="line">    <span class="built_in">module</span>: &#123;</span><br><span class="line">        rules: [</span><br><span class="line">            &#123;</span><br><span class="line">                test: <span class="regexp">/\.js$/</span>,  <span class="comment">//只检测js文件</span></span><br><span class="line">                exclude: <span class="regexp">/node_modules/</span>,  <span class="comment">//排除node_modules文件夹</span></span><br><span class="line">                enforce: <span class="string">"pre"</span>,  <span class="comment">//提前加载使用</span></span><br><span class="line">                use: &#123; <span class="comment">//使用eslint-loader解析</span></span><br><span class="line">                    loader: <span class="string">"eslint-loader"</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                test: <span class="regexp">/\.js$/</span>,</span><br><span class="line">                exclude: <span class="regexp">/node_modules/</span>,</span><br><span class="line">                use: &#123;</span><br><span class="line">                    loader: <span class="string">"babel-loader"</span>,</span><br><span class="line">                    options: &#123;</span><br><span class="line">                        presets: [<span class="string">'@babel/preset-env'</span>]</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;,</span><br><span class="line">    mode: <span class="string">'development'</span>   <span class="comment">// development, production 二选一</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p><strong>package.json添加start，dev命令</strong></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"name"</span>: <span class="string">"nodelearn"</span>,</span><br><span class="line">  <span class="attr">"version"</span>: <span class="string">"1.0.0"</span>,</span><br><span class="line">  <span class="attr">"description"</span>: <span class="string">"测试"</span>,</span><br><span class="line">  <span class="attr">"main"</span>: <span class="string">"1.js"</span>,</span><br><span class="line">  <span class="attr">"scripts"</span>: &#123;</span><br><span class="line">    <span class="attr">"test"</span>: <span class="string">"echo \"Error: no test specified\" &amp;&amp; exit 1"</span>,</span><br><span class="line">    <span class="attr">"start"</span>: <span class="string">"webpack-dev-server"</span>,</span><br><span class="line">    <span class="attr">"dev"</span>: <span class="string">"webpack-dev-server"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"author"</span>: <span class="string">""</span>,</span><br><span class="line">  <span class="attr">"license"</span>: <span class="string">"ISC"</span>,</span><br><span class="line">  <span class="attr">"devDependencies"</span>: &#123;</span><br><span class="line">    <span class="attr">"@babel/core"</span>: <span class="string">"^7.7.2"</span>,</span><br><span class="line">    <span class="attr">"@babel/preset-env"</span>: <span class="string">"^7.7.1"</span>,</span><br><span class="line">    <span class="attr">"babel-loader"</span>: <span class="string">"^8.0.6"</span>,</span><br><span class="line">    <span class="attr">"eslint"</span>: <span class="string">"^6.6.0"</span>,</span><br><span class="line">    <span class="attr">"eslint-loader"</span>: <span class="string">"^3.0.2"</span>,</span><br><span class="line">    <span class="attr">"webpack-dev-server"</span>: <span class="string">"^3.9.0"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"eslintConfig"</span>: &#123;</span><br><span class="line">    <span class="attr">"parserOptions"</span>: &#123;</span><br><span class="line">      <span class="attr">"ecmaVersion"</span>: <span class="number">8</span>,</span><br><span class="line">      <span class="attr">"sourceType"</span>: <span class="string">"module"</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="生产环境">生产环境</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">项目目录下新建config/webpack.dev.js, config/webpack.prod.js, 删除webpack.config.js</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// webpack.dev.js</span></span><br><span class="line"><span class="comment">// 引入webpack</span></span><br><span class="line"><span class="keyword">const</span> webpack = <span class="built_in">require</span>(<span class="string">'webpack'</span>);</span><br><span class="line"><span class="comment">// 配置插件</span></span><br><span class="line"><span class="keyword">const</span> HtmlWebpackPlugin = <span class="built_in">require</span>(<span class="string">'html-webpack-plugin'</span>); <span class="comment">//引入插件html-webpack-plugin</span></span><br><span class="line"><span class="keyword">const</span> &#123;CleanWebpackPlugin&#125; = <span class="built_in">require</span>(<span class="string">'clean-webpack-plugin'</span>);  <span class="comment">//引入清除文件插件</span></span><br><span class="line"><span class="keyword">const</span> &#123;resolve&#125; = <span class="built_in">require</span>(<span class="string">'path'</span>);  <span class="comment">//node内置核心模块，用来设置路径。</span></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    entry: <span class="string">'./src/js/app.js'</span>,   <span class="comment">// 入口文件</span></span><br><span class="line">    output: &#123;                     <span class="comment">// 输出配置</span></span><br><span class="line">        filename: <span class="string">'./js/bundle.js'</span>,      <span class="comment">// 输出文件名</span></span><br><span class="line">        path: resolve(__dirname, <span class="string">'../dist'</span>)   <span class="comment">//输出文件路径配置</span></span><br><span class="line">    &#125;,</span><br><span class="line">    devtool: <span class="string">'inline-source-map'</span>,  <span class="comment">// 将编译后的代码映射回原始源代码，更容易地追踪错误和警告</span></span><br><span class="line">    devServer: &#123;</span><br><span class="line">        contentBase: <span class="string">'./dist'</span>,  <span class="comment">//项目根路径</span></span><br><span class="line">        hot: <span class="literal">true</span>,  <span class="comment">//开启热模替换功能</span></span><br><span class="line">        open: <span class="literal">true</span>  <span class="comment">//自动打开浏览器</span></span><br><span class="line">    &#125;,</span><br><span class="line">    plugins: [</span><br><span class="line">        <span class="keyword">new</span> HtmlWebpackPlugin(&#123;</span><br><span class="line">            template: <span class="string">'./src/index.html'</span>,</span><br><span class="line">            filename: <span class="string">'index.html'</span>,<span class="comment">// 默认情况下生成的 html 文件叫 index.html</span></span><br><span class="line">            minify: &#123;</span><br><span class="line">                collapseWhitespace: <span class="literal">true</span>, <span class="comment">//把生成的 index.html 文件的内容的没用空格去掉，减少空间</span></span><br><span class="line">            &#125;,</span><br><span class="line">            hash: <span class="literal">true</span>, <span class="comment">//为了更好的 cache，可以在文件名后加个 hash。</span></span><br><span class="line">        &#125;),</span><br><span class="line">        <span class="keyword">new</span> CleanWebpackPlugin(),</span><br><span class="line">        <span class="keyword">new</span> webpack.NamedModulesPlugin(),</span><br><span class="line">        <span class="keyword">new</span> webpack.HotModuleReplacementPlugin()</span><br><span class="line">    ],</span><br><span class="line">    <span class="built_in">module</span>: &#123;</span><br><span class="line">        rules: [</span><br><span class="line">            &#123;</span><br><span class="line">                test: <span class="regexp">/\.js$/</span>,  <span class="comment">//只检测js文件</span></span><br><span class="line">                exclude: <span class="regexp">/node_modules/</span>,  <span class="comment">//排除node_modules文件夹</span></span><br><span class="line">                enforce: <span class="string">"pre"</span>,  <span class="comment">//提前加载使用</span></span><br><span class="line">                use: &#123; <span class="comment">//使用eslint-loader解析</span></span><br><span class="line">                    loader: <span class="string">"eslint-loader"</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                test: <span class="regexp">/\.js$/</span>,</span><br><span class="line">                exclude: <span class="regexp">/node_modules/</span>,</span><br><span class="line">                use: &#123;</span><br><span class="line">                    loader: <span class="string">"babel-loader"</span>,</span><br><span class="line">                    options: &#123;</span><br><span class="line">                        presets: [<span class="string">'@babel/preset-env'</span>]</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;,</span><br><span class="line">    mode: <span class="string">'development'</span>   <span class="comment">// development, production 二选一</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 引入webpack</span></span><br><span class="line"><span class="comment">// webpack.prod.js</span></span><br><span class="line"><span class="keyword">const</span> webpack = <span class="built_in">require</span>(<span class="string">'webpack'</span>);</span><br><span class="line"><span class="comment">// 配置插件</span></span><br><span class="line"><span class="keyword">const</span> HtmlWebpackPlugin = <span class="built_in">require</span>(<span class="string">'html-webpack-plugin'</span>); <span class="comment">//引入插件html-webpack-plugin</span></span><br><span class="line"><span class="keyword">const</span> &#123;CleanWebpackPlugin&#125; = <span class="built_in">require</span>(<span class="string">'clean-webpack-plugin'</span>);  <span class="comment">//引入清除文件插件</span></span><br><span class="line"><span class="keyword">const</span> &#123;resolve&#125; = <span class="built_in">require</span>(<span class="string">'path'</span>);  <span class="comment">//node内置核心模块，用来设置路径。</span></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    entry: <span class="string">'./src/js/app.js'</span>,   <span class="comment">// 入口文件</span></span><br><span class="line">    output: &#123;                     <span class="comment">// 输出配置</span></span><br><span class="line">        filename: <span class="string">'./js/[name].[hash:8].js'</span>,      <span class="comment">// 输出文件名</span></span><br><span class="line">        path: resolve(__dirname, <span class="string">'../dist'</span>)   <span class="comment">//输出文件路径配置</span></span><br><span class="line">    &#125;,</span><br><span class="line">    devtool: <span class="string">'inline-source-map'</span>,  <span class="comment">// 将编译后的代码映射回原始源代码，更容易地追踪错误和警告</span></span><br><span class="line">    plugins: [</span><br><span class="line">        <span class="keyword">new</span> HtmlWebpackPlugin(&#123;</span><br><span class="line">            template: <span class="string">'./src/index.html'</span>,</span><br><span class="line">            filename: <span class="string">'index.html'</span>,<span class="comment">// 默认情况下生成的 html 文件叫 index.html</span></span><br><span class="line">            minify: &#123;</span><br><span class="line">                collapseWhitespace: <span class="literal">true</span>, <span class="comment">//把生成的 index.html 文件的内容的没用空格去掉，减少空间</span></span><br><span class="line">            &#125;,</span><br><span class="line">            hash: <span class="literal">true</span>, <span class="comment">//为了更好的 cache，可以在文件名后加个 hash。</span></span><br><span class="line">        &#125;),</span><br><span class="line">        <span class="keyword">new</span> CleanWebpackPlugin(),</span><br><span class="line">        <span class="keyword">new</span> webpack.NamedModulesPlugin(),</span><br><span class="line">        <span class="keyword">new</span> webpack.HotModuleReplacementPlugin()</span><br><span class="line">    ],</span><br><span class="line">    <span class="built_in">module</span>: &#123;</span><br><span class="line">        rules: [</span><br><span class="line">            &#123;</span><br><span class="line">                test: <span class="regexp">/\.js$/</span>,  <span class="comment">//只检测js文件</span></span><br><span class="line">                exclude: <span class="regexp">/node_modules/</span>,  <span class="comment">//排除node_modules文件夹</span></span><br><span class="line">                enforce: <span class="string">"pre"</span>,  <span class="comment">//提前加载使用</span></span><br><span class="line">                use: &#123; <span class="comment">//使用eslint-loader解析</span></span><br><span class="line">                    loader: <span class="string">"eslint-loader"</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                test: <span class="regexp">/\.js$/</span>,</span><br><span class="line">                exclude: <span class="regexp">/node_modules/</span>,</span><br><span class="line">                use: &#123;</span><br><span class="line">                    loader: <span class="string">"babel-loader"</span>,</span><br><span class="line">                    options: &#123;</span><br><span class="line">                        presets: [<span class="string">'@babel/preset-env'</span>]</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;,</span><br><span class="line">    mode: <span class="string">'production'</span>   <span class="comment">// development, production 二选一</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p><strong>package.json</strong></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"name"</span>: <span class="string">"nodelearn"</span>,</span><br><span class="line">  <span class="attr">"version"</span>: <span class="string">"1.0.0"</span>,</span><br><span class="line">  <span class="attr">"description"</span>: <span class="string">"测试"</span>,</span><br><span class="line">  <span class="attr">"main"</span>: <span class="string">"1.js"</span>,</span><br><span class="line">  <span class="attr">"scripts"</span>: &#123;</span><br><span class="line">    <span class="attr">"test"</span>: <span class="string">"echo \"Error: no test specified\" &amp;&amp; exit 1"</span>,</span><br><span class="line">    <span class="attr">"start"</span>: <span class="string">"webpack-dev-server --config ./config/webpack.dev.js"</span>,</span><br><span class="line">    <span class="attr">"dev"</span>: <span class="string">"webpack-dev-server --config ./config/webpack.dev.js"</span>,</span><br><span class="line">    <span class="attr">"build"</span>: <span class="string">"webpack --config ./config/webpack.prod.js"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"author"</span>: <span class="string">""</span>,</span><br><span class="line">  <span class="attr">"license"</span>: <span class="string">"ISC"</span>,</span><br><span class="line">  <span class="attr">"devDependencies"</span>: &#123;</span><br><span class="line">    <span class="attr">"@babel/core"</span>: <span class="string">"^7.7.2"</span>,</span><br><span class="line">    <span class="attr">"@babel/preset-env"</span>: <span class="string">"^7.7.1"</span>,</span><br><span class="line">    <span class="attr">"babel-loader"</span>: <span class="string">"^8.0.6"</span>,</span><br><span class="line">    <span class="attr">"clean-webpack-plugin"</span>: <span class="string">"^3.0.0"</span>,</span><br><span class="line">    <span class="attr">"eslint"</span>: <span class="string">"^6.6.0"</span>,</span><br><span class="line">    <span class="attr">"eslint-loader"</span>: <span class="string">"^3.0.2"</span>,</span><br><span class="line">    <span class="attr">"html-loader"</span>: <span class="string">"^0.5.5"</span>,</span><br><span class="line">    <span class="attr">"html-webpack-plugin"</span>: <span class="string">"^3.2.0"</span>,</span><br><span class="line">    <span class="attr">"webpack"</span>: <span class="string">"^4.41.2"</span>,</span><br><span class="line">    <span class="attr">"webpack-cli"</span>: <span class="string">"^3.3.10"</span>,</span><br><span class="line">    <span class="attr">"webpack-dev-server"</span>: <span class="string">"^3.9.0"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"eslintConfig"</span>: &#123;</span><br><span class="line">    <span class="attr">"parserOptions"</span>: &#123;</span><br><span class="line">      <span class="attr">"ecmaVersion"</span>: <span class="number">8</span>,</span><br><span class="line">      <span class="attr">"sourceType"</span>: <span class="string">"module"</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>项目目录</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">├── config</span><br><span class="line">│   ├── webpack.dev.js</span><br><span class="line">│   └── webpack.prod.js</span><br><span class="line">├── package.json</span><br><span class="line">└── src</span><br><span class="line">    ├── index.html</span><br><span class="line">    ├── js</span><br><span class="line">    │   ├── app.js</span><br><span class="line">    │   ├── module1.js</span><br><span class="line">    │   ├── module2.js</span><br><span class="line">    │   └── module3.js</span><br><span class="line">    └── json</span><br><span class="line">        └── data.json</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Webpack </tag>
            
            <tag> Nodejs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Anaconda入门基础</title>
      <link href="/2019/11/06/Anaconda%E5%85%A5%E9%97%A8%E5%9F%BA%E7%A1%80/"/>
      <url>/2019/11/06/Anaconda%E5%85%A5%E9%97%A8%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<h2 id="安装">安装</h2><h3 id="官方安装">官方安装</h3><p><a href="https://www.anaconda.com/distribution/" target="_blank" rel="noopener">官方下载地址</a></p><h3 id="archlinux安装">archlinux安装</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">➜ sudo pacman -S anaconda</span><br></pre></td></tr></table></figure><p><strong>验证</strong> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">➜ conda --version</span><br><span class="line">conda 4.7.10</span><br></pre></td></tr></table></figure></p><h2 id="虚拟环境">虚拟环境</h2><h3 id="创建">创建</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> conda create --name &lt;env_name&gt; &lt;package_names&gt; &lt;package_names&gt; ....</span></span><br><span class="line">➜ conda create --name ml python=3.7.3 numpy pandas</span><br></pre></td></tr></table></figure><h3 id="进入退出">进入/退出</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">➜ conda activate ml</span><br><span class="line">➜ conda deactivate</span><br></pre></td></tr></table></figure><h3 id="列表">列表</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">(ml)$</span><span class="bash"> conda info --envs</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> conda environments:</span></span><br><span class="line"><span class="meta">#</span><span class="bash"></span></span><br><span class="line">ml                    *  /home/zhc/.conda/envs/ml</span><br><span class="line">base                     /opt/anaconda</span><br><span class="line"><span class="meta">#</span><span class="bash"> 或者</span></span><br><span class="line"><span class="meta">(ml)$</span><span class="bash"> conda env list</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> conda environments:</span></span><br><span class="line"><span class="meta">#</span><span class="bash"></span></span><br><span class="line">ml                    *  /home/zhc/.conda/envs/ml</span><br><span class="line">base                     /opt/anaconda</span><br></pre></td></tr></table></figure><h3 id="删除">删除</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda remove --name &lt;env_name&gt; --all</span><br></pre></td></tr></table></figure><h2 id="包管理">包管理</h2><h3 id="当期环境包列表">当期环境包列表</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">(ml)$</span><span class="bash"> conda list</span></span><br></pre></td></tr></table></figure><h3 id="当期环境安装包">当期环境安装包</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> (ml)$ conda install &lt;package_name&gt;</span></span><br><span class="line"><span class="meta">(ml)$</span><span class="bash"> conda install jupyter notebook  <span class="comment"># 安装jupyter notebook编辑器</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> jupter notebook  <span class="comment"># 打开编辑器</span></span></span><br></pre></td></tr></table></figure><h3 id="卸载包">卸载包</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">(ml)$</span><span class="bash"> conda remove &lt;package_name&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>机器学习入门基础</title>
      <link href="/2019/11/06/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E5%85%A5%E9%97%A8%E5%9F%BA%E7%A1%80/"/>
      <url>/2019/11/06/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E5%85%A5%E9%97%A8%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<h1 id="概念">概念</h1><h3 id="机器学习方式">机器学习方式</h3><blockquote><p>监督式学习: 给一组数据一个对应的输出结果。从数据中挖掘相关性</p></blockquote><blockquote><p>非监督式学习: 通过预先引入的优化准则进行模型训练</p></blockquote><blockquote><p>强化学习/半监督式学习</p></blockquote><h3 id="机器学习目标">机器学习目标</h3><blockquote><p>分类(监督式学习)</p></blockquote><blockquote><p>根据数据集目标的特征或者属性，划分到已有的分类中</p></blockquote><h1 id="算法">算法</h1><h3 id="常用算法">常用算法</h3><blockquote><p>K近邻(KNN), 逻辑回归， 决策树， 朴素贝叶斯</p></blockquote><h3 id="knn算法">KNN算法</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># https://www.imooc.com/video/20172</span></span><br><span class="line"><span class="comment"># 图像展示</span></span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">from</span> sklearn <span class="keyword">import</span> datasets</span><br><span class="line"><span class="comment"># 调用knn模型</span></span><br><span class="line"><span class="keyword">from</span> sklearn.neighbors <span class="keyword">import</span> KNeighborsClassifier</span><br><span class="line"><span class="comment"># 引入准确率</span></span><br><span class="line"><span class="keyword">from</span> sklearn.metrics <span class="keyword">import</span> accuracy_score</span><br><span class="line"><span class="comment"># 引入数据分离</span></span><br><span class="line"><span class="keyword">from</span> sklearn.model_selection <span class="keyword">import</span> train_test_split</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">load_data</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="comment"># 区分属性数据和结果数据</span></span><br><span class="line">    <span class="comment"># 加载iris数据</span></span><br><span class="line">    iris = datasets.load_iris()</span><br><span class="line">    <span class="comment"># 属性数据</span></span><br><span class="line">    <span class="comment"># print(iris.data)</span></span><br><span class="line">    <span class="comment"># 属性数据含义</span></span><br><span class="line">    <span class="comment"># print(iris.feature_names)</span></span><br><span class="line">    <span class="comment"># 结果数据</span></span><br><span class="line">    <span class="comment"># print(iris.target)</span></span><br><span class="line">    <span class="comment"># 结果数据含义</span></span><br><span class="line">    <span class="comment"># print(iris.target_names)</span></span><br><span class="line">    <span class="comment"># 确认属性/结果数据类型</span></span><br><span class="line">    <span class="comment"># print(type(iris.data), type(iris.target))</span></span><br><span class="line">    <span class="comment"># 确认行数一致</span></span><br><span class="line">    <span class="comment"># print(iris.data.shape, iris.target.shape)</span></span><br><span class="line">    <span class="keyword">return</span> iris.data, iris.target</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 预测</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">knn_predict</span><span class="params">(data)</span>:</span></span><br><span class="line">    <span class="comment"># X输入数据赋值 y输出数据赋值</span></span><br><span class="line">    x = data[<span class="number">0</span>]</span><br><span class="line">    y = data[<span class="number">1</span>]</span><br><span class="line">    <span class="comment"># knn临近值的设置</span></span><br><span class="line">    k = <span class="number">5</span></span><br><span class="line">    <span class="comment"># 创建实例</span></span><br><span class="line">    knn = KNeighborsClassifier(n_neighbors=k)</span><br><span class="line">    <span class="comment"># 模型训练</span></span><br><span class="line">    knn.fit(X=x, y=y)</span><br><span class="line">    <span class="comment"># 开始预测</span></span><br><span class="line">    x_test = [[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>], [<span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>], [<span class="number">2</span>, <span class="number">4</span>, <span class="number">1</span>, <span class="number">2</span>]]</span><br><span class="line">    results = knn.predict(x_test)</span><br><span class="line">    print(results)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">knn_pred</span><span class="params">(data)</span>:</span></span><br><span class="line">    x = data[<span class="number">0</span>]</span><br><span class="line">    y = data[<span class="number">1</span>]</span><br><span class="line">    <span class="comment"># knn临近值的设置</span></span><br><span class="line">    k = <span class="number">5</span></span><br><span class="line">    <span class="comment"># 创建实例</span></span><br><span class="line">    knn = KNeighborsClassifier(n_neighbors=k)</span><br><span class="line">    <span class="comment"># 模型训练</span></span><br><span class="line">    knn.fit(X=x, y=y)</span><br><span class="line">    y_pred = knn.predict(x)</span><br><span class="line">    print(y_pred)</span><br><span class="line">    print(y_pred.shape)</span><br><span class="line">    <span class="comment"># 准确率计算</span></span><br><span class="line">    print(accuracy_score(y, y_pred))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 训练集与预测集 计算准确率</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">knn_test_data</span><span class="params">(data)</span>:</span></span><br><span class="line">    <span class="comment"># X输入数据赋值 y输出数据赋值</span></span><br><span class="line">    x = data[<span class="number">0</span>]</span><br><span class="line">    y = data[<span class="number">1</span>]</span><br><span class="line">    print(x.shape)</span><br><span class="line">    print(y.shape)</span><br><span class="line">    x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=<span class="number">0.4</span>)</span><br><span class="line">    print(x_train.shape, x_test.shape, y_train.shape, y_test.shape)</span><br><span class="line">    k = <span class="number">5</span></span><br><span class="line">    knn = KNeighborsClassifier(n_neighbors=k)</span><br><span class="line">    knn.fit(x_train, y_train)</span><br><span class="line">    <span class="comment"># 训练集预测</span></span><br><span class="line">    y_train_pred = knn.predict(x_train)</span><br><span class="line">    print(accuracy_score(y_train, y_train_pred))</span><br><span class="line">    <span class="comment"># 测试集预测</span></span><br><span class="line">    y_test_pred = knn.predict(x_test)</span><br><span class="line">    print(accuracy_score(y_test, y_test_pred))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 获得最高准确率的k值</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">knn_n_neighbors</span><span class="params">(data)</span>:</span></span><br><span class="line">    <span class="comment"># X输入数据赋值 y输出数据赋值</span></span><br><span class="line">    x = data[<span class="number">0</span>]</span><br><span class="line">    y = data[<span class="number">1</span>]</span><br><span class="line">    k_range = list(range(<span class="number">1</span>, <span class="number">26</span>))</span><br><span class="line">    score_train = []</span><br><span class="line">    score_test = []</span><br><span class="line">    x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=<span class="number">0.4</span>)</span><br><span class="line">    <span class="keyword">for</span> k <span class="keyword">in</span> k_range:</span><br><span class="line">        knn = KNeighborsClassifier(n_neighbors=k)</span><br><span class="line">        knn.fit(x_train, y_train)</span><br><span class="line">        <span class="comment"># 训练集预测</span></span><br><span class="line">        y_train_pred = knn.predict(x_train)</span><br><span class="line">        score_train.append(accuracy_score(y_train, y_train_pred))</span><br><span class="line">        <span class="comment"># 测试集预测</span></span><br><span class="line">        y_test_pred = knn.predict(x_test)</span><br><span class="line">        score_test.append(accuracy_score(y_test, y_test_pred))</span><br><span class="line">    <span class="comment"># 展示k值与训练集测试集准确率关系</span></span><br><span class="line">    <span class="comment"># plt.plot(k_range, score_train)</span></span><br><span class="line">    <span class="comment"># plt.xlabel('K(KNN MODEL)')</span></span><br><span class="line">    <span class="comment"># plt.ylabel('Training Accuracy')</span></span><br><span class="line">    <span class="comment"># plt.show()</span></span><br><span class="line">    plt.plot(k_range, score_test)</span><br><span class="line">    plt.xlabel(<span class="string">'K(KNN MODEL)'</span>)</span><br><span class="line">    plt.ylabel(<span class="string">'Test Accuracy'</span>)</span><br><span class="line">    plt.show()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">()</span>:</span></span><br><span class="line">    data = load_data()</span><br><span class="line">    <span class="comment"># knn_predict(data)</span></span><br><span class="line">    <span class="comment"># knn_pred(data)</span></span><br><span class="line">    <span class="comment"># knn_test_data(data)</span></span><br><span class="line">    knn_n_neighbors(data)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    index()</span><br></pre></td></tr></table></figure><h3 id="逻辑回归算法">逻辑回归算法</h3><blockquote><p>用于解决分类问题的一种模型，计算其归属于某一类别的概率P(X), 常用与二分类问题，例如是否是垃圾邮件，是否是猫等等</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">from</span> sklearn.model_selection <span class="keyword">import</span> train_test_split</span><br><span class="line"><span class="comment"># 逻辑回归模型</span></span><br><span class="line"><span class="keyword">from</span> sklearn.linear_model <span class="keyword">import</span> LogisticRegression</span><br><span class="line"><span class="keyword">from</span> sklearn <span class="keyword">import</span> metrics</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">()</span>:</span></span><br><span class="line">    path = <span class="string">'diabetes.csv'</span></span><br><span class="line">    pima = pd.read_csv(path)</span><br><span class="line">    print(pima.head())</span><br><span class="line">    <span class="comment"># 怀孕次数， 胰岛素水平， 体重指数， 年龄</span></span><br><span class="line">    feature_names = [<span class="string">'Pregnancies'</span>, <span class="string">'Insulin'</span>, <span class="string">'BMI'</span>, <span class="string">'Age'</span>]</span><br><span class="line">    <span class="comment"># x, y赋值</span></span><br><span class="line">    x = pima[feature_names]</span><br><span class="line">    y = pima.Outcome</span><br><span class="line">    <span class="comment"># 维度确认</span></span><br><span class="line">    print(x.shape)</span><br><span class="line">    print(y.shape)</span><br><span class="line">    <span class="comment"># 数据分离  random_state=0表示每次都是相同的分离</span></span><br><span class="line">    x_train, x_test, y_train, y_test = train_test_split(x, y, random_state=<span class="number">0</span>)</span><br><span class="line">    <span class="comment"># 创建模型实例</span></span><br><span class="line">    logeg = LogisticRegression()</span><br><span class="line">    logeg.fit(x_train, y_train)</span><br><span class="line">    <span class="comment"># 基于测试数据集的预测</span></span><br><span class="line">    y_pred = logeg.predict(x_test)</span><br><span class="line">    <span class="comment"># 使用准确率进行评估</span></span><br><span class="line">    print(metrics.accuracy_score(y_test, y_pred))</span><br><span class="line">    <span class="comment"># 确认正负样本数据量</span></span><br><span class="line">    print(y_test.value_counts())</span><br><span class="line">    <span class="comment"># 1的比例, 0的比例</span></span><br><span class="line">    print(y_test.mean(), <span class="number">1</span>-y_test.mean())</span><br><span class="line">    <span class="comment"># 空准确率</span></span><br><span class="line">    print(max(y_test.mean(), <span class="number">1</span>-y_test.mean()))</span><br><span class="line">    <span class="comment"># 以上发现训练后的模型准确率基本等同与空准确率</span></span><br><span class="line">    <span class="comment"># 引入混淆矩阵</span></span><br><span class="line">    <span class="comment"># 计算混淆矩阵</span></span><br><span class="line">    confusion = metrics.confusion_matrix(y_test, y_pred)</span><br><span class="line">    print(confusion)</span><br><span class="line">    <span class="comment"># 展示部分实际结果与预测结果(25组)</span></span><br><span class="line">    print(<span class="string">"true:"</span>, y_test.values[<span class="number">0</span>:<span class="number">25</span>])</span><br><span class="line">    print(<span class="string">"pred:"</span>, y_pred[<span class="number">0</span>:<span class="number">25</span>])</span><br><span class="line">    <span class="comment"># 四个因子赋值</span></span><br><span class="line">    tn = confusion[<span class="number">0</span>][<span class="number">0</span>]  <span class="comment"># True Negatives 预测准备 实际为负样本的数量</span></span><br><span class="line">    fp = confusion[<span class="number">0</span>][<span class="number">1</span>]  <span class="comment"># False Positives 预测错误 实际为父样本的数量</span></span><br><span class="line">    fn = confusion[<span class="number">1</span>][<span class="number">0</span>]  <span class="comment"># False Negatives 预测错误 实际为正样本的数量</span></span><br><span class="line">    tp = confusion[<span class="number">1</span>][<span class="number">1</span>]  <span class="comment"># True Positives 预测准确 实际为正样本的数量</span></span><br><span class="line">    print(tn, fp, fn, tp)</span><br><span class="line">    print(<span class="string">'准确率Accuracy: 所有样本中，预测正确的比例'</span>)</span><br><span class="line">    print((tp + tn) / (tp + tn + fp + fn))</span><br><span class="line">    print(<span class="string">'错误率Misclassification Rate： 所有样本中，预测错误的比例'</span>)</span><br><span class="line">    print((fp + fn) / (tp + tn + fp + fn))</span><br><span class="line">    print(<span class="string">'灵敏度(召回率)Sensitivity： 正样本中，预测正确的比例'</span>)</span><br><span class="line">    recall = tp / (tp + fn)</span><br><span class="line">    print(recall)</span><br><span class="line">    print(<span class="string">'特异性Specificity: 负样本中，预测正确的比例'</span>)</span><br><span class="line">    print(tn / (tn + fp))</span><br><span class="line">    print(<span class="string">'精确率Precision: 预测结果为正样本中， 预测正确的比例'</span>)</span><br><span class="line">    precision = tp / (tp + fp)</span><br><span class="line">    print(precision)</span><br><span class="line">    print(<span class="string">'F1分数Score: 综合判断指标'</span>)</span><br><span class="line">    print((<span class="number">2</span>*precision*recall) / (precision+recall))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    index()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Docker入门基础</title>
      <link href="/2019/09/27/Docker%E5%85%A5%E9%97%A8%E5%9F%BA%E7%A1%80/"/>
      <url>/2019/09/27/Docker%E5%85%A5%E9%97%A8%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<h2 id="安装">安装</h2><h3 id="centos7.2">Centos7.2</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> https://docs.docker.com/install/linux/docker-ce/centos/<span class="comment">#install-docker-ce</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 卸载旧版本</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo yum remove docker docker-client docker-client-latest docker-common docker-latest docker-latest-logrotate docker-logrotate docker-selinux docker-engine-selinux docker-engine</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 安装依赖包</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo yum install -y yum-utils device-mapper-persistent-data lvm2</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 安装源</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo yum-config-manager  --add-repo https://download.docker.com/linux/centos/docker-ce.repo</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 安装</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo yum install docker-ce</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 启动</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo systemctl start docker</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo systemctl <span class="built_in">enable</span> docker</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 测试</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo docker run hello-world</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 加入用户组(记得退出重新登录) https://docs.docker.com/install/linux/linux-postinstall/<span class="comment">#manage-docker-as-a-non-root-user</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 安装docker-compose</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo yum install epel-release</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo yum install python-pip</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo pip install docker-compose</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 换源https://lug.ustc.edu.cn/wiki/mirrors/<span class="built_in">help</span>/docker</span></span><br></pre></td></tr></table></figure><h3 id="ubuntu">Ubuntu</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 删除旧版本</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo apt-get remove docker docker-engine docker.io</span></span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 安装</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo apt-get update</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 安装依赖</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo apt-get install  apt-transport-https ca-certificates curl software-properties-common</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 添加官方key</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查找key</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo apt-key fingerprint 0EBFCD88</span></span><br><span class="line">pub   4096R/0EBFCD88 2017-02-22</span><br><span class="line">      Key fingerprint = 9DC8 5822 9FC7 DD38 854A  E2D8 8D81 803C 0EBF CD88</span><br><span class="line">uid                  Docker Release (CE deb) &lt;docker@docker.com&gt;</span><br><span class="line">sub   4096R/F273FCD8 2017-02-22</span><br><span class="line"><span class="meta">#</span><span class="bash"> 获取资源</span></span><br><span class="line">sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"</span><br><span class="line"><span class="meta">#</span><span class="bash"> 查找合适的版本</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> apt-cache madison docker-ce</span></span><br><span class="line">docker-ce | 17.09.0~ce-0~ubuntu | https://download.docker.com/linux/ubuntu xenial/stable amd64 Packages</span><br><span class="line"><span class="meta">#</span><span class="bash"> 安装</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo apt-get install docker-ce=&lt;VERSION&gt;</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 打印安装结果</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo docker version</span></span><br><span class="line">Client:</span><br><span class="line"> Version:      17.09.0-ce</span><br><span class="line"> API version:  1.32</span><br><span class="line"> Go version:   go1.8.3</span><br><span class="line"> Git commit:   afdb6d4</span><br><span class="line"> Built:        Tue Sep 26 22:42:18 2017</span><br><span class="line"> OS/Arch:      linux/amd64</span><br><span class="line"></span><br><span class="line">Server:</span><br><span class="line"> Version:      17.09.0-ce</span><br><span class="line"> API version:  1.32 (minimum version 1.12)</span><br><span class="line"> Go version:   go1.8.3</span><br><span class="line"> Git commit:   afdb6d4</span><br><span class="line"> Built:        Tue Sep 26 22:40:56 2017</span><br><span class="line"> OS/Arch:      linux/amd64</span><br><span class="line"> Experimental: false</span><br></pre></td></tr></table></figure><p>将用户加入docker用户组，这样不需要输入sudo <figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>. sudo <span class="keyword">cat</span> /etc/group | <span class="keyword">grep</span> docker </span><br><span class="line"><span class="number">2</span>. 如果不存在docker组，可以添加sudo groupadd docker </span><br><span class="line"><span class="number">3</span>. 添加当前用户到docker组，sudo usermod -aG  docker $USER </span><br><span class="line"><span class="number">4</span>. 重启docker服务,sudo systemctl restart docker </span><br><span class="line"><span class="number">5</span>. 如果权限不够，sudo chmod <span class="keyword">a</span>+rw /var/run/docker.sock　</span><br><span class="line"><span class="number">6</span>. sudo chown -R $USER ~/.docker</span><br></pre></td></tr></table></figure></p><h3 id="配置国内镜像源">配置国内镜像源</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo vim /etc/docker/daemon.json</span></span><br></pre></td></tr></table></figure><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"registry-mirrors"</span>: [<span class="string">"http://hub-mirror.c.163.com"</span>]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 重启</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo systemctl restart docker.service</span></span><br></pre></td></tr></table></figure><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">常见国内源:</span><br><span class="line"></span><br><span class="line">Docker中国 https://registry.docker-cn.com</span><br><span class="line">网易 http://hub-mirror.c.163.com</span><br><span class="line">ustc  https://docker.mirrors.ustc.edu.cn</span><br><span class="line">中国科技大学 https://docker.mirrors.ustc.edu.cn</span><br><span class="line">阿里云 https://cr.console.aliyun.com/</span><br></pre></td></tr></table></figure><h3 id="安装ctop查看容器状态">安装ctop查看容器状态</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> https://github.com/bcicen/ctop</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo wget https://github.com/bcicen/ctop/releases/download/v0.6.1/ctop-0.6.1-linux-amd64 -O /usr/<span class="built_in">local</span>/bin/ctop</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo chmod +x /usr/<span class="built_in">local</span>/bin/ctop</span></span><br></pre></td></tr></table></figure><h2 id="概念">概念</h2><h3 id="container-容器">container 容器</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 查看全部运行的容器</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo docker ps</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 删除容器</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo docker rm container_id</span></span><br></pre></td></tr></table></figure><h3 id="image-镜像">image 镜像</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 查看安装的镜像</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo docker images</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 删除镜像</span></span><br><span class="line">sudo docker rmi iamge_id</span><br></pre></td></tr></table></figure><h2 id="基本命令">基本命令</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo docker run -h container -i -t debian /bin/bash <span class="comment">#-h表示主机名称</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo docker ps  <span class="comment"># 查看当前运行的主机</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo docker ps -a <span class="comment"># 查看全部的主机</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo docker events  <span class="comment"># 查看守护进程</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo docker inspect HOST_NAME 　<span class="comment"># 查看HOST_NAME的信息</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo docker port HOST_NAME <span class="comment"># 查看端口映射信息</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo docker diff HOST_NAME　<span class="comment"># 查看更改的信息</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo docker logs HOST_NAME   <span class="comment"># 打印log信息</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo docker rm HOST_NAME  <span class="comment"># 删除</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo docker pull redis  <span class="comment"># 拉取镜像</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo docker create redis <span class="comment"># 创建容器</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo docker start zen_brown <span class="comment"># 开启容器（kitematic是绿色波浪线）</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo docker stop zen_brown <span class="comment"># 停止容器（kitematic是灰色直线）</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo docker pause zen_brown  <span class="comment"># 暂停容器kitematic是灰色波浪线）</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo docker commit zen_brown <span class="comment"># 将容器变成镜像</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo docker run redis /bin/bash</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo docker attach zen_brown <span class="comment"># 查看容器内进程</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo docker cp <span class="comment"># 在容器和主机之间复制内容</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo docker <span class="built_in">exec</span> <span class="comment"># 在容器中运行命令</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo docker <span class="built_in">kill</span> <span class="comment"># 容器立即退出</span></span></span><br></pre></td></tr></table></figure><h2 id="dockerfile">Dockerfile</h2><h3 id="编辑dockerfile文件">编辑dockerfile文件</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 创建项目</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> mkdir cowsay</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> cowsay</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> vim Dockerfile</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">FROM debian:wheezy</span><br><span class="line">RUN apt-get update &amp;&amp; apt-get install -y cowsay fortune</span><br></pre></td></tr></table></figure><h3 id="创建镜像">创建镜像</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 创建</span><br><span class="line">$ sudo docker build -t test/cowsay-dockerfile . </span><br><span class="line">Sending build content to Docker .....</span><br><span class="line">....</span><br><span class="line"># 运行</span><br><span class="line">$ sudo docker run test/cowsay-dockerfile /usr/games/cowsay &apos;Moo&apos;</span><br></pre></td></tr></table></figure><h3 id="entrypoint指令">entrypoint指令</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> vim Dockerfile</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">FROM debian:wheezy</span><br><span class="line">RUN apt-get update &amp;&amp; apt-get install -y cowsay fortune</span><br><span class="line">ENTRYPOINTER [&quot;/usr/games/cowsay&quot;]</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo docker build -t <span class="built_in">test</span>/cowsay-dockerfile . </span></span><br><span class="line">Sending build content to Docker .....</span><br><span class="line">....</span><br><span class="line"><span class="meta">#</span><span class="bash"> 运行</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo docker run <span class="built_in">test</span>/cowsay-dockerfile  <span class="string">'Moo'</span></span></span><br></pre></td></tr></table></figure><h3 id="使用脚本解决entrypoint">使用脚本解决entrypoint</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> vim entrypoint.sh</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#! /bin/bash</span><br><span class="line">if [ $# -eq 0 ]; then</span><br><span class="line">  /usr/games/fortune | /usr/games/cowsay</span><br><span class="line">else</span><br><span class="line">  /usr/games/cowsay &quot;$@&quot;</span><br><span class="line">fi</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> chmod +x entrypoint.sh</span></span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> vim Dockerfile</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">FROM debian:wheezy</span><br><span class="line">RUN apt-get update &amp;&amp; apt-get install -y cowsay fortune</span><br><span class="line">COPY entrypoint.sh /</span><br><span class="line">ENTRYPOINTER [&quot;/entrypoint.sh&quot;]</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 创建</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo docker build -t <span class="built_in">test</span>/cowsay-dockerfile . </span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> Sending build content to Docker .....</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> ....</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 运行</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo docker run <span class="built_in">test</span>/cowsay-dockerfile <span class="string">'Moo'</span></span></span><br><span class="line">```    </span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># 在线仓库</span></span></span><br><span class="line"></span><br><span class="line">在线注册地址：　https://cloud.docker.com</span><br><span class="line">```shell</span><br><span class="line"><span class="meta">#</span><span class="bash"> 登陆</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo docker login</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> username:</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> password:</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 填写作者信息</span></span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> vim Dockerfile</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">FROM debian:wheezy</span><br><span class="line">MAINTAINER username &lt;username@mail.com&gt;</span><br><span class="line">RUN apt-get update &amp;&amp; apt-get install -y cowsay fortune</span><br><span class="line">COPY entrypoint.sh /</span><br><span class="line">ENTRYPOINTER [&quot;/entrypoint.sh&quot;]</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 创建</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo docker build -t username/cowsay-dockerfile . </span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> Sending build content to Docker .....</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 运行</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo docker run username/cowsay-dockerfile  <span class="string">'Moo'</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 上传</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo docker push</span></span><br></pre></td></tr></table></figure><h2 id="容器的备份">容器的备份</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 查看所有的容器</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> docker ps -a</span></span><br><span class="line">CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS               NAMES</span><br><span class="line">a1696406326a        redis               "docker-entrypoint..."   13 minutes ago      Up 13 minutes       6379/tcp            myredis</span><br><span class="line"><span class="meta">#</span><span class="bash"> 备份指定的id</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> docker commit -p a1696406326a redis-backup</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看镜像</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> docker images</span></span><br><span class="line">REPOSITORY                   TAG                 IMAGE ID            CREATED             SIZE</span><br><span class="line">redis-backup                 latest              fb9d896b3a39        11 seconds ago      107MB</span><br><span class="line"><span class="meta">#</span><span class="bash"> 上传镜像(docker login &amp;&amp; docker push)</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 或者打包</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> docker save -o ./redis-backup.tar redis-backup</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 恢复容器</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> docker pull ****</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 或者使用包</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> docker load -i ./redis-backup.tar</span></span><br></pre></td></tr></table></figure><h2 id="docker容器连接互联网">docker容器连接互联网</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> -p 8000:80 表示将主机的8000端口转发至容器的80端口</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> docker run -d -p 8000:80 nginx </span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 容器互联</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> docker run -d --name myredis redis</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> docker run --link myredis:redis debian env  <span class="comment"># --link 目标容器:目标容器在主容器内的简称</span></span></span><br><span class="line">~ PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin</span><br><span class="line">~ HOSTNAME=69df45e6f92d</span><br><span class="line">~ REDIS_PORT=tcp://172.17.0.2:6379</span><br><span class="line">~ REDIS_PORT_6379_TCP=tcp://172.17.0.2:6379</span><br><span class="line">~ REDIS_PORT_6379_TCP_ADDR=172.17.0.2</span><br><span class="line">~ REDIS_PORT_6379_TCP_PORT=6379</span><br><span class="line">~ REDIS_PORT_6379_TCP_PROTO=tcp</span><br><span class="line">~ REDIS_NAME=/stupefied_chandrasekhar/redis</span><br><span class="line">~ REDIS_ENV_GOSU_VERSION=1.10</span><br><span class="line">~ REDIS_ENV_REDIS_VERSION=4.0.2</span><br><span class="line">~ REDIS_ENV_REDIS_DOWNLOAD_URL=http://download.redis.io/releases/redis-4.0.2.tar.gz</span><br><span class="line">~ REDIS_ENV_REDIS_DOWNLOAD_SHA=b1a0915dbc91b979d06df1977fe594c3fa9b189f1f3d38743a2948c9f7634813</span><br><span class="line">~ HOME=/root</span><br></pre></td></tr></table></figure><h2 id="示例">示例</h2><h3 id="如何在开发中使用docker以python-flask为例">如何在开发中使用docker,以python flask为例</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 创建项目</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> tree identidock</span></span><br><span class="line">.</span><br><span class="line">├── app</span><br><span class="line">│   └── identidock.py</span><br><span class="line">└── Dockerfile</span><br></pre></td></tr></table></figure><p>编辑flask文件 <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> vim app/identidock.py</span></span><br></pre></td></tr></table></figure></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask</span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hello_world</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">'hello world'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    app.run(debug=<span class="literal">True</span>, host=<span class="string">'0.0.0.0'</span>)</span><br></pre></td></tr></table></figure><p>编辑dockerfile文件 <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> vim Dockerfile</span></span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">FROM python:3.4</span><br><span class="line"></span><br><span class="line">RUN pip install Flask==0.10.1</span><br><span class="line">WORKDIR /app</span><br><span class="line">COPY app /app</span><br><span class="line">CMD [&quot;python&quot;, &quot;identidock.py&quot;]</span><br></pre></td></tr></table></figure><p>创建镜像并使用容器 <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> docker build -t identidock .</span></span><br><span class="line">...</span><br><span class="line"><span class="meta">$</span><span class="bash"> docker run -d -p 5000:5000 identidock <span class="comment"># 后台运行并将主机的5000端口转发到docker</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> curl localhost:5000</span></span><br><span class="line">~ hello world</span><br></pre></td></tr></table></figure></p><p>将开发的代码目录挂载到docker上，这样就不必每次更改代码都需要重新bulid一次． <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> docker run -d -p 5000:5000 -v <span class="string">"<span class="variable">$PWD</span>"</span>/app:/app identidock  </span></span><br><span class="line"><span class="meta">#</span><span class="bash"> -v <span class="string">"<span class="variable">$PWD</span>"</span>/app:/app把位于主机的./app目录挂载到容器内，覆盖容器/app目录下的内容</span></span><br></pre></td></tr></table></figure></p><p>以wsgi服务器运行flask并且修改设置用户 <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> vim Dockerfile</span></span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">FROM python:3.4</span><br><span class="line"></span><br><span class="line">RUN groupadd -r uwsgi &amp;&amp; useradd -r -g uwsgi uwsgi # 创建用户组和用户</span><br><span class="line">RUN pip install Flask==0.10.1 uWSGI==2.0.8</span><br><span class="line">WORKDIR /app</span><br><span class="line">COPY app /app</span><br><span class="line"></span><br><span class="line">EXPOSE 9090 9191  # 声明主机和其他容器可以访问的端口号</span><br><span class="line">USER uwsgi #使用用户运行以下代码，默认docker是以root用户运行的，不安全</span><br><span class="line">CMD [&quot;uwsgi&quot;, &quot;--http&quot;, &quot;0.0.0.0:9090&quot;, &quot;--wsgi-file&quot;, &quot;/app/identidock.py&quot;, &quot;--callable&quot;, &quot;app&quot;, &quot;--stats&quot;, &quot;0.0.0.0:9191&quot;]</span><br></pre></td></tr></table></figure><h3 id="使用配置文件配置开发环境和生产环境">使用配置文件配置开发环境和生产环境</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 创建脚本文件cmd.sh</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> tree</span></span><br><span class="line">.</span><br><span class="line">├── app</span><br><span class="line">│   └── identidock.py</span><br><span class="line">├── cmd.sh</span><br><span class="line">└── Dockerfile</span><br><span class="line"></span><br><span class="line"><span class="meta">$</span><span class="bash"> vim cmd.sh</span></span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">! /bin/bash</span></span><br><span class="line">set -e</span><br><span class="line"></span><br><span class="line">if [ "$ENV" = 'DEV' ]; then</span><br><span class="line">  echo "Running Development Server"</span><br><span class="line">  exec python "identidock.py"</span><br><span class="line">else</span><br><span class="line">  echo "Running Production Server"</span><br><span class="line">  exec uwsgi --http 0.0.0.0:9090 --wsgi-file /app/identidock.py --callable app --stats 0.0.0.0:9191</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line"><span class="meta">$</span><span class="bash"> chmod +x cmd.sh</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> vim Dockerfile</span></span><br><span class="line">FROM python:3.4</span><br><span class="line"></span><br><span class="line">RUN groupadd -r uwsgi &amp;&amp; useradd -r -g uwsgi uwsgi</span><br><span class="line">RUN pip install Flask==0.10.1 uWSGI==2.0.8</span><br><span class="line">WORKDIR /app</span><br><span class="line">COPY app /app</span><br><span class="line">COPY cmd.sh /</span><br><span class="line"></span><br><span class="line">EXPOSE 9090 9191</span><br><span class="line">USER uwsgi</span><br><span class="line">CMD ["/cmd.sh"]</span><br><span class="line"></span><br><span class="line"><span class="meta">$</span><span class="bash"> docker build -t identidock .</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> docker run -e <span class="string">"ENV=DEV"</span> -p 5000:5000 identidock <span class="comment"># 开发环境</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> docker run -d -P identidock</span></span><br></pre></td></tr></table></figure><h3 id="使用compose自动化安装创建运行docker环境">使用compose自动化安装创建运行docker环境</h3><p>安装环境 <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> https://docs.docker.com/compose/install/</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo curl -L https://github.com/docker/compose/releases/download/1.17.0/docker-compose-`uname -s`-`uname -m` -o /usr/<span class="built_in">local</span>/bin/docker-compose</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo chmod +x /usr/<span class="built_in">local</span>/bin/docker-compose</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> docker-compose --version</span></span><br></pre></td></tr></table></figure></p><p>配置文件 <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">tree</span><br><span class="line">.</span><br><span class="line">├── app</span><br><span class="line">│   └── identidock.py</span><br><span class="line">├── cmd.sh</span><br><span class="line">├── docker-compose.yml</span><br><span class="line">└── Dockerfile</span><br></pre></td></tr></table></figure></p><p>编辑docker-compose文件 <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> vim docker-compose.yml</span></span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">identidock:</span><br><span class="line">  build: .</span><br><span class="line">  ports:</span><br><span class="line">    - &quot;5000:5000&quot;</span><br><span class="line">  environment:</span><br><span class="line">    ENV: DEV</span><br><span class="line">  volumes:</span><br><span class="line">    - ./app:/app</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 使用方法</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> docker-compose up <span class="comment"># 如果有镜像则直接运行，如果没有镜像则先build</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> docker-compose build <span class="comment"># 重新构建镜像</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> docker-compose ps 获取由compose管理的容器状态</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> docker-compose logs 输出日志</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> docker-stop 停止容器，但不会删除他们</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Svn入门基础</title>
      <link href="/2019/09/09/Svn%E5%85%A5%E9%97%A8%E5%9F%BA%E7%A1%80/"/>
      <url>/2019/09/09/Svn%E5%85%A5%E9%97%A8%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<h2 id="安装">安装</h2><h3 id="服务器端anzhaung">服务器端anzhaung</h3><p><a href="https://help.ubuntu.com/lts/serverguide/subversion.html.en/" target="_blank" rel="noopener">官方推荐</a></p><h3 id="ubuntu安装">Ubuntu安装</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 安装包</span></span><br><span class="line">sudo apt install subversion apache2 libapache2-svn</span><br></pre></td></tr></table></figure><h3 id="archlinux安装">ArchLinux安装</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 安装</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo yum install subversion</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看svn目录</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">which</span> svnserve</span></span><br></pre></td></tr></table></figure><h3 id="重启">重启</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 关闭并重启</span></span><br><span class="line">sudo killall svnserve</span><br><span class="line">svnserve -d -r ~/svn</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">svn --username=username co svn://svn.xxxx.com/repo0  # 克隆项目</span><br></pre></td></tr></table></figure><h2 id="仓库">仓库</h2><h3 id="创建">创建</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> mkdir ~/svn</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> svnadmin create ~/svn/repo0  <span class="comment"># 创建repo0仓库</span></span></span><br></pre></td></tr></table></figure><h3 id="配置">配置</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 配置repo0</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> vim ~/svn/repo0/conf/svnserve.conf</span></span><br><span class="line">anon-access = none</span><br><span class="line">auth-access = write</span><br><span class="line">password-db = ../../passwd  # 密码文件地址</span><br><span class="line">authz-db = ../../authz      # 权限认证文件地址</span><br></pre></td></tr></table></figure><h3 id="密码">密码</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 配置密码文件</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> vim ~/svn/passwd</span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">## This file is an example password file for svnserve.</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">## Its format is similar to that of svnserve.conf. As shown in the</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">## example below it contains one section labelled [users].</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">## The name and password for each user follow, one account per line.</span></span></span><br><span class="line">[users]</span><br><span class="line">test = testpassword</span><br><span class="line">dev = devpassword</span><br><span class="line">product = productpassword</span><br><span class="line">ui = uipassword</span><br></pre></td></tr></table></figure><h3 id="权限">权限</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 配置权限认证文件</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> vim ~/svn/authz</span></span><br><span class="line"></span><br><span class="line">[aliases]</span><br><span class="line"><span class="meta">#</span><span class="bash"> joe = /C=XZ/ST=Dessert/L=Snake City/O=Snake Oil, Ltd./OU=Research Institute/CN=Joe Average</span></span><br><span class="line"></span><br><span class="line">[groups]</span><br><span class="line"><span class="meta">#</span><span class="bash"> harry_and_sally = harry,sally</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> harry_sally_and_joe = harry,sally,&amp;joe</span></span><br><span class="line">dev = dev</span><br><span class="line">ui = ui</span><br><span class="line">product = product</span><br><span class="line">test = test</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> [/foo/bar]</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> harry = rw</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> &amp;joe = r</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> * =</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> [repository:/baz/fuz]</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> @harry_and_sally = rw</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> * = r</span></span><br><span class="line"></span><br><span class="line">[repo0:/]</span><br><span class="line">dev = r</span><br><span class="line">test = r</span><br><span class="line">product = wr</span><br><span class="line">ui = wr</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Svn </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Android开发入门基础</title>
      <link href="/2019/08/21/Android%E5%BC%80%E5%8F%91%E5%85%A5%E9%97%A8%E5%9F%BA%E7%A1%80/"/>
      <url>/2019/08/21/Android%E5%BC%80%E5%8F%91%E5%85%A5%E9%97%A8%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<h2 id="linux安装环境">linux安装环境</h2><h3 id="安装android-studio">安装android-studio</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> archlinux</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git <span class="built_in">clone</span> https://aur.archlinux.org/android-studio.git</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> makepkg -si</span></span><br></pre></td></tr></table></figure><h3 id="安装sdk">安装sdk</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> https://www.androiddevtools.cn/</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 下载 SDK Tools并解压</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> tar -zxvf android-sdk_r24.4.1-linux.tar</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> mv android-sdk-linux ~/android</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 下载 SDK并解压</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> mv android-5.0 ~/android/android-sdk-linux/platforms</span></span><br></pre></td></tr></table></figure><h3 id="安装maven">安装maven</h3><h3 id="安装maven私服">安装maven私服</h3><p><a href="https://www.sonatype.com/download-oss-sonatype" target="_blank" rel="noopener">Nexus的下载地址</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 解压后/home/zhc/nexus</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> ./nexus/nexus-3.19.1-01/bin/nexus run  <span class="comment"># 启动nexus</span></span></span><br></pre></td></tr></table></figure><p>如果出现以下错误, 按提示安装java jdk <figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">No suitable Java Virtual Machine could be found on your system.</span><br></pre></td></tr></table></figure></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 访问地址</span></span><br><span class="line">http://127.0.0.1:8081/</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Android </tag>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo博客搭建</title>
      <link href="/2019/08/19/Hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
      <url>/2019/08/19/Hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<h2 id="安装">安装</h2><h3 id="基础环境">基础环境</h3><p><a href="/2019/07/26/Node入门基础/" title="Node入门基础">Node入门基础</a></p><h3 id="安装hexo">安装Hexo</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><h3 id="部署配置">部署配置</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim _config.yml</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: https://github.com/zhcshine/zhcshine.github.io.git  # 在github上新建一个page项目</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><h2 id="命令">命令</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">hexo init blog  # 初始化博客</span><br><span class="line">hexo n test_my_site  # 创建一篇博客文章</span><br><span class="line">hexo g  # 打包</span><br><span class="line">hexo s  # 预览 http://localhost:4000</span><br><span class="line">hexo d  # 发布到线上</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>密码学入门基础</title>
      <link href="/2019/08/19/%E5%AF%86%E7%A0%81%E5%AD%A6%E5%85%A5%E9%97%A8%E5%9F%BA%E7%A1%80/"/>
      <url>/2019/08/19/%E5%AF%86%E7%A0%81%E5%AD%A6%E5%85%A5%E9%97%A8%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<h1 id="古典密码-替换式密码或移项式密码">古典密码： 替换式密码或移项式密码</h1><h2 id="凯撒密码">凯撒密码</h2><blockquote><p>凯撒密码的替换方法是通过排列明文和密文字母表，密文字母表示通过将明文字母表向左或向右移动一个固定数目的位置。例如，当偏移量是左移3的时候（解密时的密钥就是3）：</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">明文字母表：ABCDEFGHIJKLMNOPQRSTUVWXYZ</span><br><span class="line">密文字母表：DEFGHIJKLMNOPQRSTUVWXYZABC</span><br></pre></td></tr></table></figure><h2 id="替换式密码缺点">替换式密码缺点</h2><p>暴力破解，密码本的安全性</p><h1 id="现代密码学hash-散列函数">现代密码学：Hash （散列函数）</h1><blockquote><p>Hash，一般翻译做散列、杂凑，或音译为哈希，是把任意长度的输入（又叫做预映射pre-image）通过散列算法变换成固定长度的输出，该输出就是散列值。这种转换是一种压缩映射，也就是，散列值的空间通常远小于输入的空间，不同的输入可能会散列成相同的输出，所以不可能从散列值来确定唯一的输入值。简单的说就是一种将任意长度的消息压缩到某一固定长度的消息摘要的函数。</p></blockquote><blockquote><p>Hash算法可以将一个数据转换为一个标志，这个标志和源数据的每一个字节都有十分紧密的关系。Hash算法还具有一个特点，就是很难找到逆向规律。</p></blockquote><blockquote><p>Hash算法是一个广义的算法，也可以认为是一种思想，使用Hash算法可以提高存储空间的利用率，可以提高数据的查询效率，也可以做数字签名来保障数据传递的安全性。所以Hash算法被广泛地应用在互联网应用中。</p></blockquote><blockquote><p>Hash算法也被称为散列算法，Hash算法虽然被称为算法，但实际上它更像是一种思想。Hash算法没有一个固定的公式，只要符合散列思想的算法都可以被称为是Hash算法。</p></blockquote><h2 id="md5">MD5</h2><h2 id="sha">SHA</h2><ul><li>SHA-1算法的哈希值大小为160位，其计算输出长度为40位。(SHA-1不再推荐使用)</li><li>SHA-224算法的哈希值大小为224位，其计算输出长度为56位。</li><li>SHA-256算法的哈希值大小为256位，其计算输出长度为64位。</li><li>SHA-384算法的哈希值大小为384位，其计算输出长度为96位。</li><li>SHA-512算法的哈希值大小为384位，其计算输出长度为128位。</li></ul><h1 id="现代密码学对称加密">现代密码学：对称加密</h1><blockquote><p>对称加密算法是应用较早的加密算法，技术成熟。在对称加密算法中，数据发信方将明文（原始数据）和加密密钥（mi yao）一起经过特殊加密算法处理后，使其变成复杂的加密密文发送出去。收信方收到密文后，若想解读原文，则需要使用加密用过的密钥及相同算法的逆算法对密文进行解密，才能使其恢复成可读明文。在对称加密算法中，使用的密钥只有一个，发收信双方都使用这个密钥对数据进行加密和解密，这就要求解密方事先必须知道加密密钥。</p></blockquote><h2 id="des">DES</h2><blockquote><p>数据加密标准（英语：Data Encryption Standard，缩写为 DES）是一种对称密钥加密块密码算法，1976年被美国联邦政府的国家标准局确定为联邦资料处理标准（FIPS），随后在国际上广泛流传开来</p></blockquote><blockquote><p>DES现在已经不是一种安全的加密方法，主要因为它使用的56位密钥过短。</p></blockquote><blockquote><p>1999年1月，distributed.net与电子前哨基金会合作，在22小时15分钟内即公开破解了一个DES密钥。</p></blockquote><blockquote><p>美国国家标准局倡导的AES即将作为新标准取代DES。</p></blockquote><h2 id="aes">AES</h2><h2 id="对称加密的缺点">对称加密的缺点</h2><p>甲方必须把加密规则告诉乙方，否则无法解密。保存和传递密钥，就成了最头疼的问题。</p><h1 id="现代密码学非对称加密">现代密码学：非对称加密</h1><blockquote><p>公钥加密的信息只有私钥解得开，那么只要私钥不泄漏，通信就是安全的</p></blockquote><h2 id="rsa">RSA</h2><h1 id="rsa算法">RSA算法</h1><blockquote><p>1977年，三位数学家Rivest、Shamir 和 Adleman 设计了一种算法，可以实现非对称加密。这种算法用他们三个人的名字命名，叫做RSA算法。 RSA算法基于一个十分简单的数论事实：将两个大质数相乘十分容易，但是想要对其乘积进行因式分解却极其困难，因此可以将乘积公开作为加密密钥。</p></blockquote><p>RSA算法运用的几个数论知识： 互素关系， 欧拉函数， 欧拉定理， 模逆元</p><h2 id="互素关系">互素关系</h2><p>如果没有大于1的正数既是r的因数也是s的因数，则r和s互素。</p><h2 id="欧拉函数">欧拉函数</h2><p>在数论，对正整数m，欧拉函数φ(m)是小于或等于m的正整数中与m互素的数的数目</p><ol type="1"><li>如果m是素数， φ(m)=m-1, 例如φ(3) = 2</li><li>若m = p * q, φ(m) = (p-1) * (q-1)</li></ol><h2 id="欧拉定理">欧拉定理</h2><p>在数论中，欧拉定理是一个关于同余的性质。欧拉定理表明，若n,a为正整数，且n,a互素，则a^φ(n)≡1 (mod n)</p><h2 id="模逆元">模逆元</h2><p>如果两个正整数a和n互质，那么一定可以找到整数b，使得 ab-1 被n整除，或者说ab被n除的余数是1。这时，b就叫做a的"模反元素"。</p><h2 id="rsa公钥密钥生成方法">rsa公钥密钥生成方法</h2><p>公钥，密钥生成方法</p><ol type="1"><li><p>随机取俩个不相等素数p, q; 例如：p=61, q=53 # 实际应用中，这两个质数很大，常常是几百位</p></li><li><p>计算p和q的乘积n， 其中n的长度就是密钥的长度; n=p*q=3233 3233写成二进制是110010100001，一共有12位，所以这个密钥就是12位 # 实际应用中，RSA密钥一般是1024位，重要场合则为2048位</p></li><li><p>计算n的欧拉函数φ(n); φ(n) = (p-1)(q-1) = 60*52 = 3120</p></li><li><p>随机选择一个整数e，条件是1&lt; e &lt; φ(n)，且e与φ(n) 互质; e = 17</p></li><li><p>计算e对于φ(n)的模逆元d</p><ol type="1"><li><p>ed ≡ 1 (mod φ(n)) # 模逆元公式A</p></li><li><p>ed - 1 = kφ(n) # 模逆元公式转换B</p></li><li><p>ed - kφ(n) = 1 # 转换公式</p></li><li><p>ex + φ(n)y = 1 # 转换公式 (e=17, φ(n)=3120, x=d, y=-k)</p></li><li><p>17x + 3120y = 1 # 代入数值</p></li></ol></li><li><p>扩展欧几里得算法求解17x+3120y=1， 一组整数解为 (x,y)=(2753,-15)， 此时计算出d=2753</p></li><li><p>n=3233，e=17，d=2753，所以公钥就是 (3233,17)，私钥就是（3233, 2753）</p></li></ol><p>是否可以破解密钥？</p><ol type="1"><li><p>已知公钥(n, e)</p></li><li><p>已知 ed ≡ 1 (mod φ(n))。只有知道e和φ(n)，才能算出d, 目前只需要算出φ(n)</p></li><li><p>已知 φ(n)=(p-1)(q-1)。只有知道p和q，才能算出φ(n)，目前需要算出p和q</p></li><li><p>已知 n=pq。只有将n因数分解，才能算出p和q，n已知，如果n可以被因数分解，d就可以算出，也就意味着私钥被破解。</p></li><li><p>可是，大整数的因数分解，是一件非常困难的事情。目前，除了暴力破解，还没有发现别的有效方法。</p></li><li><p>维基百科这样写道：</p></li></ol><p>　　"对极大整数做因数分解的难度决定了RSA算法的可靠性。换言之，对一极大整数做因数分解愈困难，RSA算法愈可靠。假如有人找到一种快速因数分解的算法，那么RSA的可靠性就会极度下降。但找到这样的算法的可能性是非常小的。今天只有短的RSA密钥才可能被暴力破解。到2008年为止，世界上还没有任何可靠的攻击RSA算法的方式。只要密钥长度足够长，用RSA加密的信息实际上是不能被解破的。"</p><h2 id="rsa加密和解密">rsa加密和解密</h2><p>加密公钥 (n,e)</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">m^e ≡ c (mod n)  # m是明文， 必须是整数（字符串可以取ascii值或unicode值），且m必须小于n</span><br><span class="line">65^17 ≡ c (mod 3233)  # 本例中n=3233，e=17</span><br><span class="line">c = 2790  # 计算出c=2790, c则是密文</span><br></pre></td></tr></table></figure><p>解密私钥(n,d)</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">c^d ≡ m (mod n)  # 公式一定成立，下面有介绍</span><br><span class="line">2790^2753 ≡ m (mod 3233)  # 本例中c=2790, d=2753</span><br><span class="line">m = 65  # 计算出明文m=65</span><br></pre></td></tr></table></figure><h2 id="rsa私钥解密证明">rsa私钥解密证明</h2><ol type="1"><li><p>c^d ≡ m (mod n) # 要证明的公式A</p></li><li><p>因为 m^e ≡ c (mod n)， 根据模运算的含义，所以 c = m^e - kn</p></li><li><p>将c代入公式A中， (m^e - kn)^d ≡ m (mod n)</p></li><li><p>将上述方程式的左侧用二项式定理展开，会发现都是n的倍数，模运算为0，所以可以简化为 m<sup>e</sup>d ≡ m (mod n) 即 m^(ed) = m (mod n)</p></li><li><p>因为ed ≡ 1 (modφ(n))， 所以ed = 1 + hφ(n)</p></li><li><p>代入公式B中 m^(1 + hφ(n)) ≡ m (mod n) # 公式C</p></li><li><p>当m与n互素时</p><ol type="1"><li><p>根据欧拉定理m^φ(n) ≡ 1 (mod n) 可得m^φ(n) = kn + 1</p></li><li><p>上述公式两边乘以m得到 m * m^φ(n) = m * (kn + 1)</p></li><li><p>上述公式转换 m^(1 + hφ(n)) = m * (kn + 1) = m + mk * n ≡ m (mod n), 公式C得到证明</p></li></ol></li><li><p>当m与n不互素</p><ol type="1"><li><p>由于n等于质数p和q的乘积，所以m必然等于kp或kq。</p></li><li><p>以 m = kp为例，考虑到这时k与q必然互质，则根据欧拉定理，下面的式子成立： (kp)^(q-1) ≡ 1 (mod q)</p></li><li><p>进一步扩展，可得 [(kp)^(q-1)]^(h(p-1)) × kp ≡ kp (mod q)</p></li><li><p>根据上述可得 (kp)^(ed) ≡ kp (mod q)</p></li><li><p>根据上述可得 (kp)^(ed) = kp + tq</p></li><li><p>显然，t能被p整除， 即t=t’p,可以得出 (kp)^(ed) = kp+t′pq</p></li><li><p>因为m=kp, n=pq, 最后得出 m^(ed) ≡ m (mod n) 公式得证</p></li></ol></li></ol><h1 id="补充模算数">补充：模算数</h1><h2 id="同余">同余</h2><h3 id="同余表达式">同余表达式</h3><p>维基百科</p><blockquote><p>数学上，同余（英语：congruence modulo，符号：≡）是数论中的一种等价关系。当两个整数除以同一个正整数，若得相同余数，则二整数同余。同余是抽象代数中的同余关系的原型。最先引用同余的概念与“≡”符号者为德国数学家高斯。</p></blockquote><p>两个整数a， b，若它们除以正整数m所得的余数相等，则称a，b对于模m同余，记作</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a ≡ b (mod m)</span><br></pre></td></tr></table></figure><h3 id="同余换代">同余换代</h3><blockquote><p>在任意一个成立的模同余式中，将任意子表达式替换为一个与其同余的子表达式，所得的模同余式依然成立</p></blockquote><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(12 + 4) * 2 ≡ x + 1 (mod 7)</span><br></pre></td></tr></table></figure><p>(12 + 4)(模7)同余与2，故上同余式可表示为</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2 * 2  ≡ x + 1 (mod 7)</span><br></pre></td></tr></table></figure><h3 id="代表元">代表元</h3><blockquote><p>每个整数恰好和整数0,1,2,...,m-1中的一个模m同余</p></blockquote><p>例如，在模7的情况下，每个整数和整数0,1,2,3,4,5，6中的一个同余</p><h3 id="商和余数">商和余数</h3><p>b被m除时，r为余数，q为商</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">b = mq + r</span><br></pre></td></tr></table></figure><p>余数操作运算符一般使用rem表示，例如25 rem 7 = 4</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">如果a rem m = b rem m, 则 a ≡ b (mod m)</span><br><span class="line">如果 a ≡ b (mod m)， 则a rem m = b rem m</span><br></pre></td></tr></table></figure><h3 id="用rem运算简化模同余数">用rem运算简化模同余数</h3><p>例</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">12 <span class="bullet">* 11 *</span> 10 <span class="bullet">* 9 *</span> 8 * 7 ≡ x (mod 13)</span><br><span class="line">因为</span><br><span class="line">12 * 11 = 132</span><br><span class="line">132 rem 13 = 2</span><br><span class="line">根据同余换代，上式可表示为</span><br><span class="line">2 <span class="bullet">* 10 *</span> 9 <span class="bullet">* 8 *</span> 7 ≡ x (mod 13)</span><br><span class="line">同上，上式可表示为</span><br><span class="line">7 <span class="bullet">* 9 *</span> 8 * 7 ≡ x (mod 13)</span><br><span class="line">11 <span class="bullet">* 8 *</span> 7 ≡ x (mod 13)</span><br><span class="line">10 * 7 ≡ x (mod 13)</span><br><span class="line">5 ≡ x (mod 13)</span><br></pre></td></tr></table></figure><p>现在要求计算 12 * 11 * 10 * 9 * 8 * 7 * 6 rem 13</p><p>上面求出 <figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">12 <span class="bullet">* 11 *</span> 10 <span class="bullet">* 9 *</span> 8 * 7 ≡ 5 (mod 13)</span><br></pre></td></tr></table></figure></p><p>根据商和余数与模的关系</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">如果 a ≡ b (mod m)， 则a rem m = b rem m</span><br></pre></td></tr></table></figure><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">12 <span class="bullet">* 11 *</span> 10 <span class="bullet">* 9 *</span> 8 <span class="bullet">* 7 *</span> 6 rem 13 可转为 5 * 6 rem 13</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>java开发spring入门基础</title>
      <link href="/2019/08/16/Java%E5%BC%80%E5%8F%91Spring%E5%85%A5%E9%97%A8%E5%9F%BA%E7%A1%80/"/>
      <url>/2019/08/16/Java%E5%BC%80%E5%8F%91Spring%E5%85%A5%E9%97%A8%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<h2 id="构建项目基础">构建项目基础</h2><h2 id="构建项目">构建项目</h2><p><a href="https://start.spring.io/" target="_blank" rel="noopener">spring项目初始化</a></p><ul><li>Project: Gradle Project</li><li>Language: Java</li><li>Spring Boot: 2.17</li><li>Project Metadata<ul><li>Group: com.zhuohc</li><li>Artifact: demo</li><li>Options:<ul><li>Name: (默认)</li><li>Description: (默认)</li><li>Package Name: (默认)</li><li>Packaging: Jar/War(Web项目使用)</li><li>Java: 11(根据java版本号选择)</li></ul></li></ul></li></ul><p>Generate the project</p><p>解压后的文件夹即是项目初始化的目录结构</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> tree</span></span><br><span class="line">.</span><br><span class="line">├── build.gradle</span><br><span class="line">├── gradle</span><br><span class="line">│   └── wrapper</span><br><span class="line">│       ├── gradle-wrapper.jar</span><br><span class="line">│       └── gradle-wrapper.properties</span><br><span class="line">├── gradlew</span><br><span class="line">├── gradlew.bat</span><br><span class="line">├── HELP.md</span><br><span class="line">├── settings.gradle</span><br><span class="line">└── src</span><br><span class="line">    ├── main</span><br><span class="line">    │   ├── java</span><br><span class="line">    │   │   └── com</span><br><span class="line">    │   │       └── zhuohc</span><br><span class="line">    │   │           └── demo</span><br><span class="line">    │   │               └── Application.java</span><br><span class="line">    │   └── resources</span><br><span class="line">    │       └── application.properties</span><br><span class="line">    └── test</span><br><span class="line">        └── java</span><br><span class="line">            └── com</span><br><span class="line">                └── zhuohc</span><br><span class="line">                    └── demo</span><br><span class="line">                        └── ApplicationTests.java</span><br></pre></td></tr></table></figure><p>修改国内源 <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">repositories &#123;</span><br><span class="line">    maven &#123;url &apos;http://maven.aliyun.com/nexus/content/groups/public/&apos;&#125;</span><br><span class="line">    mavenCentral()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Spring </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java开发Gradle构建工具入门基础</title>
      <link href="/2019/08/16/Java%E5%BC%80%E5%8F%91Gradle%E6%9E%84%E5%BB%BA%E5%B7%A5%E5%85%B7%E5%85%A5%E9%97%A8%E5%9F%BA%E7%A1%80/"/>
      <url>/2019/08/16/Java%E5%BC%80%E5%8F%91Gradle%E6%9E%84%E5%BB%BA%E5%B7%A5%E5%85%B7%E5%85%A5%E9%97%A8%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<h2 id="linux安装gradle">Linux安装Gradle</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 从官网下载二进制包</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> https://gradle.org/install/</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> unzip unzip gradle-5.6-all.zip</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo mv gradle-5.6 /usr/java_jar</span></span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 添加环境变量</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo vim /etc/profile</span></span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 最后添加</span></span><br><span class="line">export PATH=$PATH:/usr/java_jar/gradle-5.6/bin</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 验证</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> gradle -v</span></span><br><span class="line">Welcome to Gradle 5.6!</span><br><span class="line"></span><br><span class="line">Here are the highlights of this release:</span><br><span class="line"> - Incremental Groovy compilation</span><br><span class="line"> - Groovy compile avoidance</span><br><span class="line"> - Test fixtures for Java projects</span><br><span class="line"> - Manage plugin versions via settings script</span><br><span class="line"></span><br><span class="line">For more details see https://docs.gradle.org/5.6/release-notes.html</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">------------------------------------------------------------</span><br><span class="line">Gradle 5.6</span><br><span class="line">------------------------------------------------------------</span><br><span class="line"></span><br><span class="line">Build time:   2019-08-14 21:05:25 UTC</span><br><span class="line">Revision:     f0b9d60906c7b8c42cd6c61a39ae7b74767bb012</span><br><span class="line"></span><br><span class="line">Kotlin:       1.3.41</span><br><span class="line">Groovy:       2.5.4</span><br><span class="line">Ant:          Apache Ant(TM) version 1.9.14 compiled on March 12 2019</span><br><span class="line">JVM:          11.0.4 (Oracle Corporation 11.0.4+10-LTS)</span><br><span class="line">OS:           Linux 4.19.49-1-MANJARO amd64</span><br></pre></td></tr></table></figure><h2 id="配置gradle">配置Gradle</h2><h3 id="项目配置国内源">项目配置国内源</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 配置国内aliyun源</span></span><br><span class="line">repositories &#123;</span><br><span class="line">    maven &#123;url 'http://maven.aliyun.com/nexus/content/groups/public/'&#125;</span><br><span class="line">    mavenCentral()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="全局配置国内源">全局配置国内源</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim ~/.gradle/init.gradle</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">allprojects&#123;</span><br><span class="line">    repositories &#123;</span><br><span class="line">        def REPOSITORY_URL = 'http://maven.aliyun.com/nexus/content/groups/public/'</span><br><span class="line">        all &#123; ArtifactRepository repo -&gt;</span><br><span class="line">            if(repo instanceof MavenArtifactRepository)&#123;</span><br><span class="line">                def url = repo.url.toString()</span><br><span class="line">                if (url.startsWith('https://repo1.maven.org/maven2') || url.startsWith('https://jcenter.bintray.com/')) &#123;</span><br><span class="line">                    project.logger.lifecycle "Repository $&#123;repo.url&#125; replaced by $REPOSITORY_URL."</span><br><span class="line">                    remove repo</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        maven &#123;</span><br><span class="line">            url REPOSITORY_URL</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Gradle </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java开发Maven构建工具入门基础</title>
      <link href="/2019/08/16/Java%E5%BC%80%E5%8F%91Maven%E6%9E%84%E5%BB%BA%E5%B7%A5%E5%85%B7%E5%85%A5%E9%97%A8%E5%9F%BA%E7%A1%80/"/>
      <url>/2019/08/16/Java%E5%BC%80%E5%8F%91Maven%E6%9E%84%E5%BB%BA%E5%B7%A5%E5%85%B7%E5%85%A5%E9%97%A8%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<h2 id="安装maven">安装Maven</h2><h3 id="linux安装">Linux安装</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 从官网下载二进制包</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> http://maven.apache.org/download.cgi</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> wget http://mirrors.tuna.tsinghua.edu.cn/apache/maven/maven-3/3.6.1/binaries/apache-maven-3.6.1-bin.tar.gz</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> tar -xzvf apache-maven-3.6.1-bin.tar.gz</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo mv apache-maven-3.6.1 /usr/java_jar</span></span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 添加环境变量</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo vim /etc/profile</span></span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 最后添加</span></span><br><span class="line">export PATH=/opt/apache-maven-3.6.1/bin:$PATH</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 验证</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> mvn -v</span></span><br><span class="line">Apache Maven 3.6.1 (d66c9c0b3152b2e69ee9bac180bb8fcc8e6af555; 2019-04-05T03:00:29+08:00)</span><br><span class="line">Maven home: /usr/java_jar/apache-maven-3.6.1</span><br><span class="line">Java version: 11.0.4, vendor: Oracle Corporation, runtime: /usr/java/jdk-11.0.4</span><br><span class="line">Default locale: zh_CN, platform encoding: UTF-8</span><br><span class="line">OS name: "linux", version: "4.19.49-1-manjaro", arch: "amd64", family: "unix"</span><br></pre></td></tr></table></figure><h3 id="修改下载源">修改下载源</h3><p>修改pom.xml文件repositories属性，添加国内源地址，具体见pom.xml</p><h2 id="pom.xml">pom.xml</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><br><span class="line">&lt;project xmlns="http://maven.apache.org/POM/4.0.0"</span><br><span class="line">         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"</span><br><span class="line">         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"&gt;</span><br><span class="line">    &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;</span><br><span class="line"></span><br><span class="line">    &lt;groupId&gt;com.imooc.maven01&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;maven01-model&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;1.0-SNAPSHOT&lt;/version&gt;</span><br><span class="line">    </span><br><span class="line">    &lt;properties&gt;</span><br><span class="line">        &lt;maven.compiler.source&gt;1.8&lt;/maven.compiler.source&gt;</span><br><span class="line">        &lt;maven.compiler.target&gt;1.8&lt;/maven.compiler.target&gt;</span><br><span class="line">    &lt;/properties&gt;</span><br><span class="line">    &lt;dependencies&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;junit&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;junit&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;4.12&lt;/version&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">    &lt;/dependencies&gt;</span><br><span class="line">    &lt;repositories&gt;</span><br><span class="line">        &lt;repository&gt;</span><br><span class="line">            &lt;id&gt;aliyun&lt;/id&gt;</span><br><span class="line">            &lt;name&gt;aliyun&lt;/name&gt;</span><br><span class="line">            &lt;url&gt;http://maven.aliyun.com/nexus/content/groups/public&lt;/url&gt;</span><br><span class="line">        &lt;/repository&gt;</span><br><span class="line">    &lt;/repositories&gt;</span><br><span class="line">&lt;/project&gt;</span><br></pre></td></tr></table></figure><h2 id="常见命令">常见命令</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 创建一个项目</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> mvn archetype:generate</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 选择版本</span></span><br><span class="line">Choose org.apache.maven.archetypes:maven-archetype-quickstart version:                                                                                                                                        </span><br><span class="line">1: 1.0-alpha-1                                                                                                                                                                                                </span><br><span class="line">2: 1.0-alpha-2                                                                                                                                                                                                </span><br><span class="line">3: 1.0-alpha-3                                                                                                                                                                                                </span><br><span class="line">4: 1.0-alpha-4                                                                                                                                                                                                </span><br><span class="line">5: 1.0                                                                                                                                                                                                        </span><br><span class="line">6: 1.1                                                                                                                                                                                                        </span><br><span class="line">7: 1.3                                                                                                                                                                                                        </span><br><span class="line">8: 1.4                                                                                                                                                                                                        </span><br><span class="line">Choose a number: 8:       </span><br><span class="line">Define value for property 'groupId': com.zhuohc.maven03         # groupID 项目名                                                                                                                                                        </span><br><span class="line">Define value for property 'artifactId': maven03-model           # artifactId 项目名-模块名                    </span><br><span class="line">Define value for property 'version' 1.0-SNAPSHOT: :             # version 版本                                                                                                                                                </span><br><span class="line">Define value for property 'package' com.zhuohc.maven03: :                                                                                                                                                      </span><br><span class="line">Confirm properties configuration:                                                                                                                                                                             </span><br><span class="line">groupId: com.zhuohc.maven03                                                                                                                                                                                    </span><br><span class="line">artifactId: maven03-model                                                                                                                                                                                           </span><br><span class="line">version: 1.0-SNAPSHOT                                                                                                                                                                                         </span><br><span class="line">package: com.zhuohc.maven03</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> mvn clean         <span class="comment"># 删除</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> mvn compile       <span class="comment"># 编译</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> mvn <span class="built_in">test</span>          <span class="comment"># 测试</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> mvn package       <span class="comment"># 打包</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> mvn install       <span class="comment"># 安装当前项目包到本地环境</span></span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Maven </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Node入门基础</title>
      <link href="/2019/07/26/Node%E5%85%A5%E9%97%A8%E5%9F%BA%E7%A1%80/"/>
      <url>/2019/07/26/Node%E5%85%A5%E9%97%A8%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<h2 id="安装">安装</h2><h3 id="开发环境">开发环境</h3><p><a href="https://github.com/nvm-sh/nvm" target="_blank" rel="noopener">安装nvm</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> wget -qO- https://raw.githubusercontent.com/nvm-sh/nvm/v0.34.0/install.sh | bash</span></span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 添加以下代码到~/.bashrc, ~/.profile, or ~/.zshrc</span></span><br><span class="line">export NVM_DIR="$HOME/.nvm"</span><br><span class="line">[ -s "$NVM_DIR/nvm.sh" ] &amp;&amp; \. "$NVM_DIR/nvm.sh"  # This loads nvm</span><br><span class="line">[ -s "$NVM_DIR/bash_completion" ] &amp;&amp; \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion</span><br></pre></td></tr></table></figure><p>nvm命令 <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> nvm install 6.14.4  <span class="comment"># 安装or 10.10.0, 8.9.1, etc</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> nvm ls  <span class="comment"># 查看</span></span></span><br><span class="line">default -&gt; 10.16.0 (-&gt; v10.16.0)</span><br><span class="line">node -&gt; stable (-&gt; v10.16.0) (default)</span><br><span class="line">stable -&gt; 10.16 (-&gt; v10.16.0) (default)</span><br><span class="line">iojs -&gt; N/A (default)</span><br><span class="line">lts/* -&gt; lts/dubnium (-&gt; v10.16.0)</span><br><span class="line">lts/argon -&gt; v4.9.1 (-&gt; N/A)</span><br><span class="line">lts/boron -&gt; v6.17.1 (-&gt; N/A)</span><br><span class="line">lts/carbon -&gt; v8.16.0 (-&gt; N/A)</span><br><span class="line">lts/dubnium -&gt; v10.16.0</span><br><span class="line"><span class="meta">$</span><span class="bash"> nvm use default  <span class="comment"># 使用指定node版本</span></span></span><br></pre></td></tr></table></figure></p><p>安装cnpm <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> npm --registry=https://registry.npm.taobao.org install cnpm -g</span></span><br></pre></td></tr></table></figure></p><h2 id="回调函数">回调函数</h2><blockquote><p>Node.js 异步编程的直接体现就是回调。</p></blockquote><p>异步编程依托于回调来实现，但不能说使用了回调后程序就异步化了。 回调函数在完成任务后就会被调用，Node 使用了大量的回调函数，Node 所有 API 都支持回调函数。 例如，我们可以一边读取文件，一边执行其他命令，在文件读取完成后，我们将文件内容作为回调函数的参数返回。这样在执行代码时就没有阻塞或等待文件 I/O 操作。这就大大提高了 Node.js 的性能，可以处理大量的并发请求。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> fs = <span class="built_in">require</span>(<span class="string">'fs'</span>);</span><br><span class="line"><span class="keyword">let</span> data = fs.readFileSync(<span class="string">'input.txt'</span>);</span><br><span class="line"><span class="built_in">console</span>.log(data.toString());</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">"程序执行结束!"</span>);</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">文件内容......</span><br><span class="line">程序执行结束!</span><br></pre></td></tr></table></figure><h2 id="事件驱动">事件驱动</h2><blockquote><p>Node.js 使用事件驱动模型，当web server接收到请求，就把它关闭然后进行处理，然后去服务下一个web请求。 当这个请求完成，它被放回处理队列，当到达队列开头，这个结果被返回给用户。</p></blockquote><p>这个模型非常高效可扩展性非常强，因为 webserver 一直接受请求而不等待任何读写操作。（这也称之为非阻塞式IO或者事件驱动IO） 在事件驱动模型中，会生成一个主循环来监听事件，当检测到事件时触发回调函数。</p><h2 id="buffer-缓冲区">buffer 缓冲区</h2><blockquote><p>JavaScript 语言自身只有字符串数据类型，没有二进制数据类型。</p></blockquote><p>但在处理像TCP流或文件流时，必须使用到二进制数据。因此在 Node.js中，定义了一个 Buffer 类，该类用来创建一个专门存放二进制数据的缓存区。 在 Node.js 中，Buffer 类是随 Node 内核一起发布的核心库。Buffer 库为 Node.js 带来了一种存储原始数据的方法，可以让 Node.js 处理二进制数据，每当需要在 Node.js 中处理I/O操作中移动的数据时，就有可能使用 Buffer 库。原始数据存储在 Buffer 类的实例中。一个 Buffer 类似于一个整数数组，但它对应于 V8 堆内存之外的一块原始内存。</p><p>node.js目前支持 1. ascii - 仅支持 7 位 ASCII 数据。如果设置去掉高位的话，这种编码是非常快的。 2. utf8 - 多字节编码的 Unicode 字符。许多网页和其他文档格式都使用 UTF-8 。 3. utf16le - 2 或 4 个字节，小字节序编码的 Unicode 字符。支持代理对（U+10000 至 U+10FFFF）。 4. ucs2 - utf16le 的别名。 5. base64 - Base64 编码。 6. latin1 - 一种把 Buffer 编码成一字节编码的字符串的方式。 7. binary - latin1 的别名。 8. hex - 将每个字节编码为两个十六进制字符。</p><h2 id="tream-流">tream 流</h2><blockquote><p>Stream 是一个抽象接口，Node 中有很多对象实现了这个接口。例如，对http 服务器发起请求的request 对象就是一个 Stream，还有stdout（标准输出）。</p></blockquote><h2 id="模块">模块</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 导出一个方法</span></span><br><span class="line">exports.world = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'Hello World'</span>);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//hello.js </span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Hello</span>(<span class="params"></span>) </span>&#123; </span><br><span class="line">    <span class="keyword">var</span> name; </span><br><span class="line">    <span class="keyword">this</span>.setName = <span class="function"><span class="keyword">function</span>(<span class="params">thyName</span>) </span>&#123; </span><br><span class="line">        name = thyName; </span><br><span class="line">    &#125;; </span><br><span class="line">    <span class="keyword">this</span>.sayHello = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123; </span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'Hello '</span> + name); </span><br><span class="line">    &#125;; </span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">module</span>.exports = Hello;</span><br></pre></td></tr></table></figure><h2 id="全局对象">全局对象</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 当前正在执行的脚本的文件名</span></span><br><span class="line"><span class="built_in">console</span>.log( __filename );</span><br><span class="line"><span class="comment">// 当前执行脚本所在的目录</span></span><br><span class="line"><span class="built_in">console</span>.log( __dirname );</span><br><span class="line"><span class="comment">// 定时器, 只执行一次</span></span><br><span class="line"><span class="keyword">let</span> t = setTimeout(printHello, <span class="number">2000</span>);</span><br><span class="line">clearTimeout(t);</span><br><span class="line"><span class="comment">// 全局函数在指定的毫秒(ms)数后执行指定函数(cb)</span></span><br><span class="line">setInterval(printHello, <span class="number">2000</span>);</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// process: 一个全局变量，即 global 对象的属性。</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Node </tag>
            
            <tag> Javascript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux守护进程</title>
      <link href="/2019/07/26/Linux%E5%AE%88%E6%8A%A4%E8%BF%9B%E7%A8%8B/"/>
      <url>/2019/07/26/Linux%E5%AE%88%E6%8A%A4%E8%BF%9B%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h2 id="什么是守护进程">什么是守护进程？</h2><blockquote><p><a href="https://zh.wikipedia.org/wiki/%E5%AE%88%E6%8A%A4%E8%BF%9B%E7%A8%8B" target="_blank" rel="noopener">守护进程（Daemon Process）</a>，也就是通常说的 Daemon 进程（精灵进程），是 Linux 中的后台服务进程。它是一个生存期较长的进程，通常独立于控制终端并且周期性地执行某种任务或等待处理某些发生的事件。</p></blockquote><p>守护进程是个特殊的孤儿进程，这种进程脱离终端，为什么要脱离终端呢？之所以脱离于终端是为了避免进程被任何终端所产生的信息所打断，其在执行过程中的信息也不在任何终端上显示。由于在 Linux 中，每一个系统与用户进行交流的界面称为终端，每一个从此终端开始运行的进程都会依附于这个终端，这个终端就称为这些进程的控制终端，当控制终端被关闭时，相应的进程都会自动关闭。</p><p>Linux 的大多数服务器就是用守护进程实现的。</p><h2 id="守护进程的分类">守护进程的分类</h2><p>根据守护进程的启动和管理方式，可以分为独立启动守护进程和超级守护进程两类</p><p><strong>独立启动（stand_alone)</strong>:该类进程启动后就常驻内存，所以会一直占用系统资源。其最大的优点就是它会一直启动，当外界有要求时相应速度较快，像httpd等进程；</p><p><strong>超级守护进程</strong>：系统启动时由一个统一的守护进程xinet来负责管理一些进程，当相应请求到来时需要通过xinet的转接才可以唤醒被xinet管理的进程。这种进程的优点时最初只有xinet这一守护进程占有系统资源，其他的内部服务并不一直占有系统资源，只有数据包到来时才会被xinet管理员来唤醒。并且我们还可以通过xinet来对它所管理的进程设置一些访问权限，相当于多了一层管理机制。 如果用两个比喻来形容两类守护进程的话一般会用银行的业务处理窗口来类比：</p><p><strong>独立启动</strong>：银行里有一种单服务的窗口，像取钱，存钱等窗口，这些窗口边上始终会坐着一个人，如果有人来取钱或存钱，可以直接到相应的窗口去办理，这个处理单一服务的始终存在的人就是独立启动的守护进程；</p><p><strong>超级守护进程</strong>：银行里还有一种窗口，提供综合服务，像汇款，转账，提款等业务；这种窗口附近也始终坐着一个人（xinet），她可能不提供具体的服务，提供具体服务的人在里面闲着聊天啊，喝茶啊，但是当有人来汇款时他会大声喊一句，小王，有人汇款啦，然后里面管汇款的小王会立马跑过来帮忙办完汇款业务。其他的人继续聊天，喝茶。这些负责具体业务的人我们就称之为超级守护进程。当然可能汇款人会有一些规则，可能不能往北京汇款，他就会提早告诉xinet，所以如果有人来汇款想汇往北京的话，管理员就直接告诉他这个我们这里办不到的，于是就根本不会去喊汇款员了，相当于提供了一层管理机制。针对这种窗口还存在多线程和单线程的区别：多线程：将所有用户的要求都提上来，里面的人都别闲着了，都一起干活吧；</p><p><strong>单线程</strong>：大家都排好队了，一个一个来，里面的人同一时间只有一个人在工作。</p><p>当然每个守护进程都会监听一个端口（银行窗口），一些常用守护进程的监听端口是固定的，像httpd监听80端口， sshd监听22端口等；我们可以将其理解为责任制，时候等待，有求必应。具体的端口信息可以通过cat /etc/services来查看。</p><h2 id="查看守护进程">查看守护进程</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps axj</span><br></pre></td></tr></table></figure><ul><li>a 表示不仅列当前用户的进程，也列出所有其他用户的进程</li><li>x 表示不仅列有控制终端的进程，也列出所有无控制终端的进程</li><li>j 表示列出与作业控制相关的信息</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">PPID   PID  PGID   SID TTY      TPGID STAT   UID   TIME COMMAND                                                                                                                                              </span><br><span class="line">0     1     1     1 ?           -1 Ss       0  12:00 /sbin/init                                                                                                                                           </span><br><span class="line">0     2     0     0 ?           -1 S        0   0:00 [kthreadd]                                                                                                                                           </span><br><span class="line">2     3     0     0 ?           -1 I&lt;       0   0:00 [rcu_gp]                                                                                                                                             </span><br><span class="line">2     4     0     0 ?           -1 I&lt;       0   0:00 [rcu_par_gp]                                                                                                                                         </span><br><span class="line">2     6     0     0 ?           -1 I&lt;       0   0:00 [kworker/0:0H-kblockd]                                                                                                                               </span><br><span class="line">2     8     0     0 ?           -1 I&lt;       0   0:00 [mm_percpu_wq]                                                                                                                                       </span><br><span class="line">2     9     0     0 ?           -1 S        0   3:28 [ksoftirqd/0]                                                                                                                                        </span><br><span class="line">2    10     0     0 ?           -1 I        0  40:58 [rcu_preempt]                                                                                                                                        </span><br><span class="line">2    11     0     0 ?           -1 I        0   0:00 [rcu_sched]                                                                                                                                          </span><br><span class="line">2    12     0     0 ?           -1 I        0   0:00 [rcu_bh]                                                                                                                                             </span><br><span class="line">2    13     0     0 ?           -1 S        0   5:16 [rcuc/0]                                                                                                                                             </span><br><span class="line">2    14     0     0 ?           -1 S        0   0:00 [rcub/0]</span><br></pre></td></tr></table></figure><p>从上图可以看出守护进行的一些特点：</p><p><font color="#2bbc8a">1. 守护进程基本上都是以超级用户启动（ UID 为 0 ）</font></p><p><font color="#2bbc8a">2. 没有控制终端（ TTY 为 ？）</font></p><p><font color="#2bbc8a">3. 终端进程组 ID 为 -1 （ TPGID 表示终端进程组 ID）</font></p><p>一般情况下，守护进程可以通过以下方式启动：</p><ul><li><p>在系统启动时由启动脚本启动，这些启动脚本通常放在 /etc/rc.d 目录下；</p></li><li><p>利用 inetd 超级服务器启动，如 telnet 等；</p></li><li><p>由 cron 定时启动以及在终端用 nohup 启动的进程也是守护进程。</p></li></ul><h2 id="编写守护进程">编写守护进程</h2><p><strong>屏蔽一些控制终端操作的信号</strong></p><p>这是为了防止守护进行在没有运行起来前，控制终端受到干扰退出或挂起。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">signal(SIGTTOU,SIG_IGN);   </span><br><span class="line">signal(SIGTTIN,SIG_IGN);   </span><br><span class="line">signal(SIGTSTP,SIG_IGN);   </span><br><span class="line">signal(SIGHUP ,SIG_IGN);</span><br></pre></td></tr></table></figure><p><strong>在后台运行</strong></p><p>这是为避免挂起控制终端将守护进程放入后台执行。方法是在进程中调用 fork() 使父进程终止， 让守护进行在子进程中后台执行。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>( pid = fork() )&#123; <span class="comment">// 父进程  </span></span><br><span class="line">    <span class="built_in">exit</span>(<span class="number">0</span>);        <span class="comment">//结束父进程，子进程继续  </span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>脱离控制终端、登录会话和进程组</strong></p><p>Linux 中的进程与控制终端，登录会话和进程组之间的关系：</p><p>进程属于一个进程组，进程组号（GID）就是进程组长的进程号（PID）。登录会话可以包含多个进程组。这些进程组共享一个控制终端。这个控制终端通常是创建进程的 shell 登录终端。 控制终端、登录会话和进程组通常是从父进程继承下来的。我们的目的就是要摆脱它们 ，使之不受它们的影响。因此需要调用 setsid() 使子进程成为新的会话组长，示例代码如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">setsid();</span><br></pre></td></tr></table></figure><p>setsid()调用成功后，进程成为新的会话组长和新的进程组长，并与原来的登录会话和进程组脱离。由于会话过程对控制终端的独占性，进程同时与控制终端脱离。</p><p><strong>禁止进程重新打开控制终端</strong></p><p>现在，进程已经成为无终端的会话组长，但它可以重新申请打开一个控制终端。可以通过使进程不再成为会话组长来禁止进程重新打开控制终端，采用的方法是再次创建一个子进程，示例代码如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>( pid=fork() )&#123; <span class="comment">// 父进程  </span></span><br><span class="line">    <span class="built_in">exit</span>(<span class="number">0</span>);      <span class="comment">// 结束第一子进程，第二子进程继续（第二子进程不再是会话组长）   </span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>关闭打开的文件描述符</strong></p><p>进程从创建它的父进程那里继承了打开的文件描述符。如不关闭，将会浪费系统资源，造成进程所在的文件系统无法卸下以及引起无法预料的错误。按如下方法关闭它们：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// NOFILE 为 &lt;sys/param.h&gt; 的宏定义  </span></span><br><span class="line"><span class="comment">// NOFILE 为文件描述符最大个数，不同系统有不同限制  </span></span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>; i&lt; NOFILE; ++i)&#123;<span class="comment">// 关闭打开的文件描述符  </span></span><br><span class="line">    close(i);  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>改变当前工作目录</strong></p><p>进程活动时，其工作目录所在的文件系统不能卸下。一般需要将工作目录改变到根目录。对于需要转储核心，写运行日志的进程将工作目录改变到特定目录如 /tmp。示例代码如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chdir(<span class="string">"/"</span>);</span><br></pre></td></tr></table></figure><p><strong>重设文件创建掩模</strong></p><p>进程从创建它的父进程那里继承了文件创建掩模。它可能修改守护进程所创建的文件的存取权限。为防止这一点，将文件创建掩模清除：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">umask(<span class="number">0</span>);</span><br></pre></td></tr></table></figure><p><strong>处理 SIGCHLD 信号</strong></p><p>但对于某些进程，特别是服务器进程往往在请求到来时生成子进程处理请求。如果父进程不等待子进程结束，子进程将成为僵尸进程（zombie）从而占用系统资源。如果父进程等待子进程结束，将增加父进程的负担，影响服务器进程的并发性能。在 Linux 下可以简单地将 SIGCHLD 信号的操作设为 SIG_IGN 。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">signal(SIGCHLD, SIG_IGN);</span><br></pre></td></tr></table></figure><p>这样，内核在子进程结束时不会产生僵尸进程。</p><p>代码示例 <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;unistd.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;signal.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;fcntl.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;sys/syslog.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;sys/param.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;sys/types.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;sys/stat.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;time.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">init_daemon</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 1）屏蔽一些控制终端操作的信号  </span></span><br><span class="line">    signal(SIGTTOU, SIG_IGN);</span><br><span class="line">    signal(SIGTTIN, SIG_IGN);</span><br><span class="line">    signal(SIGTSTP, SIG_IGN);</span><br><span class="line">    signal(SIGHUP, SIG_IGN);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 2）在后台运行 </span></span><br><span class="line">    <span class="keyword">pid_t</span> pid = fork();</span><br><span class="line">    <span class="keyword">if</span>(pid &lt; <span class="number">0</span>) &#123;</span><br><span class="line">        perror(<span class="string">"fork"</span>);</span><br><span class="line">        <span class="built_in">exit</span>(EXIT_FAILURE); <span class="comment">// 进程创建失败</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(pid &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">0</span>);    <span class="comment">// 退出父进程</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 3）脱离控制终端、登录会话和进程组  </span></span><br><span class="line">    setsid();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 4）禁止进程重新打开控制终端  </span></span><br><span class="line">    pid = fork();</span><br><span class="line">    <span class="keyword">if</span>(pid &lt; <span class="number">0</span>) &#123;</span><br><span class="line">        perror(<span class="string">"fork"</span>);</span><br><span class="line">        <span class="built_in">exit</span>(EXIT_FAILURE);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (pid &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">0</span>);  <span class="comment">// 结束第一子进程，第二子进程继续（第二子进程不再是会话组长） </span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 5）关闭打开的文件描述符  </span></span><br><span class="line">    <span class="comment">// NOFILE 为 &lt;sys/param.h&gt; 的宏定义  </span></span><br><span class="line">    <span class="comment">// NOFILE 为文件描述符最大个数，不同系统有不同限制  </span></span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;NOFILE; ++i)&#123;</span><br><span class="line">        close(i);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 6）改变当前工作目录  </span></span><br><span class="line">    chdir(<span class="string">"/"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 7）重设文件创建掩模  </span></span><br><span class="line">    umask(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 8）处理 SIGCHLD 信号  </span></span><br><span class="line">    signal(SIGCHLD,SIG_IGN);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])</span> </span>&#123;</span><br><span class="line">    init_daemon();</span><br><span class="line">    <span class="keyword">char</span> *msg = <span class="string">"I'm printlg process...\n"</span>;</span><br><span class="line">    <span class="keyword">int</span> msg_len = <span class="built_in">strlen</span>(msg);</span><br><span class="line">    <span class="keyword">int</span> fd = open(<span class="string">"/tmp/test_printlg.log"</span>, O_RDWR | O_CREAT | O_APPEND, <span class="number">0666</span>);</span><br><span class="line">    <span class="keyword">if</span>(fd &lt; <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"open /tmp/test_printlg.log fail.\n"</span>);</span><br><span class="line">        <span class="built_in">exit</span>(EXIT_FAILURE);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>) &#123;</span><br><span class="line">        <span class="comment">// 每隔 3s 输出 msg 到 /tmp/test_printlg.log 文件中</span></span><br><span class="line">        write(fd, msg, msg_len);</span><br><span class="line">        sleep(<span class="number">3</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    close(fd);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 编译</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> gcc -o test1 main.c </span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 运行</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo ./test1</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> ps axj | grep test1</span></span><br><span class="line"> PPID   PID  PGID   SID TTY      TPGID STAT   UID   TIME COMMAND </span><br><span class="line">21591 31396 31395 31395 ?           -1 R        0   0:03 ./test1</span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看结果</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> vim /tmp/test_printlg.log</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 杀死守护进程</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo <span class="built_in">kill</span> -9 &lt;pid&gt;</span></span><br></pre></td></tr></table></figure><h2 id="守护进程开机自启动">守护进程开机自启动</h2><p>linux系统启动的顺序 <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">1. BIOS</span><br><span class="line">2. MBR (boot loader)</span><br><span class="line">3. kernel loading</span><br><span class="line">4. init program</span><br><span class="line">5. initial script (/etc/rc.d/rc.sysinit)</span><br><span class="line">6. daemon start (/etc/rc.d/rc[0-6].d/*)</span><br><span class="line">7. local setting (/etc/rc.d/rc.local)</span><br></pre></td></tr></table></figure></p><p>每个系统启动级别的守护进程位置不一致，通常有以下位置</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/etc/rc.d</span><br><span class="line">/etc/rc[N].d</span><br></pre></td></tr></table></figure><p>知道了守护进程的位置，就可以把 test1 放在 /etc/rc5.d/ 下，并且还要改名称，因为系统需要根据指定的名称来使用 for 循环来启动或者关闭每个程序，命名规则如下： 1. S[num][name]：启动守护进程name，例如：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2. K[num][name]：禁止启动守护进程name，例如：```K01test1</span><br></pre></td></tr></table></figure></p><p>我们这里肯定要启动了，所以将 <figure class="highlight plain"><figcaption><span>命名为 ```S01test1```：</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">```shell</span><br><span class="line">mv test1 /etc/rc5.d/S01test1</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Manjaro开发环境</title>
      <link href="/2019/07/24/Manjaro%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/"/>
      <url>/2019/07/24/Manjaro%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/</url>
      
        <content type="html"><![CDATA[<h3 id="添加中科大源">添加中科大源</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo vi /etc/pacman.conf</span></span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 在文件末尾添加</span></span><br><span class="line">[archlinuxcn]</span><br><span class="line">SigLevel = Optional TrustedOnly</span><br><span class="line">Server = https://mirrors.ustc.edu.cn/archlinuxcn/$arch</span><br></pre></td></tr></table></figure><h3 id="导入gpg-key">导入GPG Key</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo pacman -Syy &amp;&amp; sudo pacman -S archlinuxcn-keyring</span></span><br></pre></td></tr></table></figure><h3 id="安装基本开发编译软件">安装基本开发编译软件</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -S --needed base-devel</span><br></pre></td></tr></table></figure><h3 id="安装git">安装Git</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo pacman -S git</span></span><br></pre></td></tr></table></figure><h3 id="安装chrome">安装Chrome</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo pacman -S google-chrome</span></span><br></pre></td></tr></table></figure><h3 id="安装搜狗拼音输入法">安装搜狗拼音输入法</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo pacman -S fcitx-im <span class="comment">#默认全部安装</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo pacman -S fcitx-configtool</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo pacman -S fcitx-sogoupinyin</span></span><br></pre></td></tr></table></figure><h3 id="编辑输入法配置文件">编辑输入法配置文件</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo nano ~/.xprofile</span></span><br><span class="line"></span><br><span class="line">export GTK_IM_MODULE=fcitx</span><br><span class="line">export QT_IM_MODULE=fcitx</span><br><span class="line">export XMODIFIERS="@im=fcitx"</span><br><span class="line"><span class="meta">#</span><span class="bash"> 重启后输入法就可以正常使用。</span></span><br></pre></td></tr></table></figure><h3 id="安装vim">安装vim</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo pacman -S vim</span></span><br></pre></td></tr></table></figure><p>安装vim基础配置</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> curl https://raw.githubusercontent.com/wklken/vim-for-server/master/vimrc &gt; ~/.vimrc</span></span><br></pre></td></tr></table></figure><h3 id="安装tmux和.tmux">安装tmux和.tmux</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo pacman -S tmux</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> ~</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git <span class="built_in">clone</span> https://github.com/gpakosz/.tmux.git</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> ln -s -f .tmux/.tmux.conf</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> cp .tmux/.tmux.conf.local .</span></span><br></pre></td></tr></table></figure><h3 id="安装zsh和oh-my-zsh">安装zsh和oh-my-zsh</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo pacman -S zsh</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sh -c <span class="string">"<span class="variable">$(curl -fsSL https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh)</span>"</span></span></span><br></pre></td></tr></table></figure><h3 id="安装yaourt">安装yaourt</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo pacman -S --needed base-devel git wget yajl</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> /tmp</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git <span class="built_in">clone</span> https://aur.archlinux.org/package-query.git</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> package-query/</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> makepkg -si &amp;&amp; <span class="built_in">cd</span> /tmp/</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git <span class="built_in">clone</span> https://aur.archlinux.org/yaourt.git</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> yaourt/</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> makepkg -si</span></span><br></pre></td></tr></table></figure><h3 id="安装shadowsocks">安装shadowsocks</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> git <span class="built_in">clone</span> https://aur.archlinux.org/shadowsocks-qt5-git.git</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> shadowsocks-qt5-git</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> less PKGBUILD  <span class="comment"># 查看</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> makepkg -si  <span class="comment"># 安装</span></span></span><br></pre></td></tr></table></figure><h3 id="设置ssh连接不断开">设置ssh连接不断开</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> vim ~/.ssh/config</span></span><br><span class="line">Host *</span><br><span class="line">    ServerAliveInterval 60</span><br></pre></td></tr></table></figure><h3 id="安装jetbrain全家桶">安装Jetbrain全家桶</h3><p><font color="#d44375">请支持正版</font></p><h3 id="安装python开发环境">安装python开发环境</h3><p><a href="/2016/11/09/Python入门基础/" title="python开发环境">python开发环境</a></p><h3 id="安装rabbitmq">安装Rabbitmq</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo pacman -S rabbitmq rabbitmqadmin</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo systemctl <span class="built_in">enable</span> rabbitmq.service  <span class="comment"># 开机启动</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo systemctl start rabbitmq.service  <span class="comment"># 启动</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> rabbitmq-plugins <span class="built_in">enable</span> rabbitmq_management  <span class="comment"># 开启web界面</span></span></span><br></pre></td></tr></table></figure><h3 id="安装redis">安装Redis</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo pacman -S redis</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo systemctl <span class="built_in">enable</span> redis.service  <span class="comment"># 开机启动</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo systemctl start redis.service  <span class="comment"># 启动</span></span></span><br></pre></td></tr></table></figure><p>设置密码</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo vim /etc/redis.conf</span></span><br><span class="line">redispassword password</span><br></pre></td></tr></table></figure><h3 id="安装node">安装node</h3><p><a href="/2019/07/26/Node入门基础/" title="python开发环境">python开发环境</a></p><h3 id="其他软件清单">其他软件清单</h3><ul><li><p>peek 录制gif软件</p></li><li><p>github desktop github客户端</p></li><li><p>postman</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 办公 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Manjaro </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Gtk+入门基础</title>
      <link href="/2019/07/24/Gtk+%E5%85%A5%E9%97%A8%E5%9F%BA%E7%A1%80/"/>
      <url>/2019/07/24/Gtk+%E5%85%A5%E9%97%A8%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<h2 id="gdk介绍">Gdk+介绍</h2><blockquote><p>Gtk+是c语言编写的用于开发图形界面程序的函数库。Gtk+来源于gimp（gnu image minipulation program），gtk+在gdk（gimp drawing kit）基础上创建，并进行封装。</p></blockquote><h2 id="linux安装">Linux安装</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> http://ftp.gnome.org/pub/gnome/sources/gtk+/3.24/</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> wget http://ftp.gnome.org/pub/gnome/sources/gtk+/3.24/gtk+-3.24.10.tar.xz</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> tar xvfJ gtk+-3.24.10.tar.xz</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> ./configure --prefix=/user/include/gtk3.24</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> make &amp;&amp; sudo make install</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo ldconfig</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 设置LD_LIBRARY_PATH</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> LD_LIBRARY_PATH=<span class="string">"/opt/gtk/lib"</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> PATH=<span class="string">"/opt/gtk/bin:<span class="variable">$PATH</span>"</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">export</span> LD_LIBRARY_PATH PATH</span></span><br></pre></td></tr></table></figure><h2 id="教程">教程</h2><h3 id="简单的空白窗口">简单的空白窗口</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;gtk/gtk.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span>* argv[])</span> </span>&#123;</span><br><span class="line">    gtk_init(&amp;argc, &amp;argv);</span><br><span class="line">    GtkWidget *window = gtk_window_new(GTK_WINDOW_TOPLEVEL);</span><br><span class="line">    gtk_widget_show(window);</span><br><span class="line">    gtk_main();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> gcc -o main main.c `pkg-config --libs -cflags gtk+-3.0`</span></span><br></pre></td></tr></table></figure><ul><li><p>gtk_init (&amp;argc, &amp;argv); 所有 GTK应用程序都要调用该函数，而且必须在控件定义之前使用，它为我们设置一些缺省值( 例如视觉和颜色 )映射这个函数将函数库初始化，设置缺省的信号处理函数，并检查通过命令行传递给应用程序的参数，自动完成一些必要的初始化工作。</p></li><li><p>gtk_main()是在每个Gtk应用程序都要调用的函数。程序运行停在这里等待事件(如键盘事件或鼠标事件)的发生，等待用户来操作窗口</p></li><li><p>gtk_window_new()的功能创建一个窗口并返回这个窗口的控件指针。GTK_WINDOW_TOPLEVEL指明窗口的类型为最上层的主窗口，它最常用。接着创建一个GtkWidget <em>类型的window变量来接收。GtkWidget是GTK+控件类型，GtkWidget </em> 能指向任何控件的指针类型。</p></li><li><p>gtk_widget_show(window)；用来显示上一步创建的窗口控件。在这个简单例子里，所有事件都被忽略。用鼠标点击窗口右上角的“×”按钮也不能将窗口关闭。我们可以在终端敲 Ctrl + C 关闭程序。</p></li></ul><h3 id="控件">控件</h3><p>GTK中控件主要分为两类：容器控件，非容器控件。</p><p>容器控件：它可以容纳别的控件，我们可以理解为盒子，盒子拿来装东西。容器控件又分为两类，一类只能容纳一个控件，如窗口，按钮；另一类能容纳多个控件，如布局控件。</p><p>非容器控件：它不可以容纳别的控件，如标签、行编辑。</p><p>前面我们写的空白窗口是能容纳一个控件的控件，现在我们要做的是，给这个窗口添加一个按钮。</p><p>首先，我们需要创建一个按钮，然后需要把按钮添加到窗口，接着，显示按钮控件。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;gtk/gtk.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span>* argv[])</span> </span>&#123;</span><br><span class="line">    <span class="comment">// gtk初始化</span></span><br><span class="line">    gtk_init(&amp;argc, &amp;argv);</span><br><span class="line">    <span class="comment">// 创建一个顶层窗口</span></span><br><span class="line">    GtkWidget *window = gtk_window_new(GTK_WINDOW_TOPLEVEL);</span><br><span class="line">    <span class="comment">// 创建一个button容器</span></span><br><span class="line">    GtkWidget *button = gtk_button_new_with_label(<span class="string">"hello gtk"</span>);</span><br><span class="line">    <span class="comment">// 将button放入窗口中，</span></span><br><span class="line">    gtk_container_add(GTK_CONTAINER(window), button);</span><br><span class="line">    <span class="comment">// 显示button</span></span><br><span class="line">    gtk_widget_show(button);</span><br><span class="line">    <span class="comment">// 显示window</span></span><br><span class="line">    gtk_widget_show(window);</span><br><span class="line">    gtk_main();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">gtk_container_add</span><span class="params">(GtkContainer *container, GtkWidget *widget)</span></span>;</span><br></pre></td></tr></table></figure><p>这里我们是把按钮添加到窗口容器里，widget为按钮指针(以上代码的button)，container为窗口指针(以上代码的window)，这里需要注意的是，我们创建的窗口(window)返回值为GtkWidget <em>类型，而gtk_container_add()的第一个参数为GtkContainer </em>类型，由于 GtkWidget *类型的变量为指向任何控件的万能指针，所以，在函数传参时，根据参数类型进行相应的转换，如：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gtk_container_add( (GtkContainer *)window, button);</span><br></pre></td></tr></table></figure><p>C语言里，我们常用这种方法转换。在GTK中，很多内部变量指针类型转换都定义了宏定义，如：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> GTK_CONTAINER(x) (GtkContainer *)(x)</span></span><br></pre></td></tr></table></figure><p>所以，我们还可以这么写：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gtk_container_add(GTK_CONTAINER(window), button);</span><br></pre></td></tr></table></figure><p>那么，我们如何知道，哪个类型对应哪个宏定义呢？把要转换类型名字全部变为大写，同时，单词和单词之间以下划线“_”连接，然后，这个名字就是哪个宏定义的名字，如，(GtkButton *)x用宏定义的方法为 GTK_BUTTON(x)。</p><p>上面的代码，我们是按钮和窗口都得通过gtk_widget_show()显示出来：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">gtk_widget_show(button);<span class="comment">// 显示按钮</span></span><br><span class="line">gtk_widget_show(window);<span class="comment">// 显示窗口</span></span><br></pre></td></tr></table></figure><p>但是，假如，窗口里有100个控件，还是这样一个一个地显示出来会比较麻烦，这时候，我们可以通过gtk_widget_show_all()显示所有的控件，里面需要传的是容纳控件的那个容器(这里为窗口)。这样，容器上的控件也会跟着显示。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gtk_widget_show_all()</span><br></pre></td></tr></table></figure><h3 id="布局容器-水平布局">布局容器-水平布局</h3><p>如果我们希望窗口里多放添加几个控件，直接添加是不成功的，因为窗口只能容纳一个控件的容器。这时候，我们需要借助布局容器，我们先把布局容器添加到窗口里，然后再把所需要添加的控件放在布局容器里。</p><p>布局容器的主要分类：水平布局( GtkHBox)、垂直布局(GtkVBox )、表格布局(GtkTable)、固定布局(GtkFixed )。</p><p><strong>创建一个盒子布局</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// orientation参数: GTK_ORIENTATION_HORIZONTAL GTK_ORIENTATION_VERTICAL 两个可选值 spacing参数是单元格之间的间隙</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">gtk_box_new</span><span class="params">(<span class="keyword">int</span> orientation, <span class="keyword">int</span> spacing)</span></span>;</span><br></pre></td></tr></table></figure><p>以下代码显示水平容器布局方式，垂直容器类似</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;gtk/gtk.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span>* argv[])</span> </span>&#123;</span><br><span class="line">    <span class="comment">// gtk初始化</span></span><br><span class="line">    gtk_init(&amp;argc, &amp;argv);</span><br><span class="line">    <span class="comment">// 创建一个顶层窗口</span></span><br><span class="line">    GtkWidget *window = gtk_window_new(GTK_WINDOW_TOPLEVEL);</span><br><span class="line">    <span class="comment">// 创建水平容器</span></span><br><span class="line">    <span class="comment">// GtkWidget *hbox = gtk_hbox_new(TRUE, 10);  // gtk+2版本使用</span></span><br><span class="line">    GtkWidget *hbox = gtk_box_new(GTK_ORIENTATION_HORIZONTAL, <span class="number">10</span>);  <span class="comment">// gtk+3版本使用</span></span><br><span class="line">    <span class="comment">// 将水平容器添加到窗口</span></span><br><span class="line">    gtk_container_add(GTK_CONTAINER(window), hbox);</span><br><span class="line">    <span class="comment">// 创建一个button容器</span></span><br><span class="line">    GtkWidget *button1 = gtk_button_new_with_label(<span class="string">"button1"</span>);</span><br><span class="line">    <span class="comment">// 将button放入水平容器中</span></span><br><span class="line">    gtk_container_add(GTK_CONTAINER(hbox), button1);</span><br><span class="line">    <span class="comment">// 重复创建两个</span></span><br><span class="line">    GtkWidget *button2 = gtk_button_new_with_label(<span class="string">"button2"</span>);</span><br><span class="line">    GtkWidget *button3 = gtk_button_new_with_label(<span class="string">"button3"</span>);</span><br><span class="line">    gtk_container_add(GTK_CONTAINER(hbox), button2);</span><br><span class="line">    gtk_container_add(GTK_CONTAINER(hbox), button3);</span><br><span class="line">    <span class="comment">// 显示全部窗口</span></span><br><span class="line">    gtk_widget_show_all(window);</span><br><span class="line">    gtk_main();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="布局容器-表格布局">布局容器-表格布局</h3><p><strong>添加表格布局容器</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// rows: 行数, coumns: 列数, homogeneous：容器内表格的大小是否相等, 返回值：表格布局容器指针</span></span><br><span class="line"><span class="function">GtkWidget *<span class="title">gtk_table_new</span><span class="params">(guint rows, guint columns, gboolean homogeneous)</span></span>;</span><br></pre></td></tr></table></figure><p><strong>布局容器添加控件</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// table: 容纳控件的容器, widget: 要添加的控件, 后四个参数为控件摆放的坐标，规则如下：</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">gtk_table_attach_defaults</span><span class="params">(GtkTable *table, GtkWidget *widget, guint left_attach, guint right_attach, guint top_attach, guint bottom_attach)</span></span>;</span><br></pre></td></tr></table></figure><p><img src="https://zhuohc-com.oss-cn-hangzhou.aliyuncs.com/gtk%E8%A1%A8%E6%A0%BC%E5%B8%83%E5%B1%80%E7%A4%BA%E6%84%8F%E5%9B%BE.png"></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;gtk/gtk.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span>* argv[])</span> </span>&#123;</span><br><span class="line">    <span class="comment">// gtk初始化</span></span><br><span class="line">    gtk_init(&amp;argc, &amp;argv);</span><br><span class="line">    <span class="comment">// 创建一个顶层窗口</span></span><br><span class="line">    GtkWidget *window = gtk_window_new(GTK_WINDOW_TOPLEVEL);</span><br><span class="line">    <span class="comment">// 创建一个表格容器</span></span><br><span class="line">    GtkWidget *table = gtk_table_new(<span class="number">2</span>, <span class="number">2</span>, TRUE); <span class="comment">// gtk+2版本</span></span><br><span class="line">    gtk_container_add(GTK_CONTAINER(window), table);</span><br><span class="line">    <span class="comment">// 创建button1， button2, button3</span></span><br><span class="line">    GtkWidget *button1 = gtk_button_new_with_label(<span class="string">"button1"</span>);</span><br><span class="line">    GtkWidget *button2 = gtk_button_new_with_label(<span class="string">"button2"</span>);</span><br><span class="line">    GtkWidget *button3 = gtk_button_new_with_label(<span class="string">"button3"</span>);</span><br><span class="line">    <span class="comment">// 将button放入table中</span></span><br><span class="line">    gtk_table_attach_defaults(GTK_TABLE(table), button1, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>);</span><br><span class="line">    gtk_table_attach_defaults(GTK_TABLE(table), button2, <span class="number">1</span>, <span class="number">2</span>, <span class="number">0</span>, <span class="number">1</span>);</span><br><span class="line">    gtk_table_attach_defaults(GTK_TABLE(table), button3, <span class="number">0</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">2</span>);</span><br><span class="line">    <span class="comment">// 显示所有窗口</span></span><br><span class="line">    gtk_widget_show_all(window);</span><br><span class="line">    gtk_main();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="布局容器-固定布局">布局容器-固定布局</h3><p>水平、垂直和表格布局容器，控件会跟着容器大小的变化进行自动适应，而固定布局容器里的控件则不会跟着变化( 则固定不变 )。</p><p><strong>固定布局的创建</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">GtkWidget *<span class="title">gtk_fixed_new</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br></pre></td></tr></table></figure><p><strong>添加控件</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// fixed：容纳控件的容器, widget：要添加的控件, x, y：控件摆放位置的起点坐标</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">gtk_fixed_put</span><span class="params">(GtkFixed *fixed, GtkWidget *widget, gint x, gint y )</span></span>;</span><br></pre></td></tr></table></figure><p><strong>设置控件的大小( 宽和高 )</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// widget：需要设置的控件, width：宽度, height：高度</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">gtk_widget_set_size_request</span><span class="params">(GtkWidget *widget, gint width, gint height)</span></span>;</span><br></pre></td></tr></table></figure><p><strong>移动固定布局里控件的位置</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// fixed：固定布局容器, widget：需要移动的控件, x, y: 移动的位置</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">gtk_fixed_move</span><span class="params">(GtkFixed *fixed, GtkWidget *widget, gint x, gint y)</span></span>;</span><br></pre></td></tr></table></figure><p>示例代码 <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;gtk/gtk.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span>* argv[])</span> </span>&#123;</span><br><span class="line">    <span class="comment">// gtk初始化</span></span><br><span class="line">    gtk_init(&amp;argc, &amp;argv);</span><br><span class="line">    <span class="comment">// 创建一个顶层窗口</span></span><br><span class="line">    GtkWidget *window = gtk_window_new(GTK_WINDOW_TOPLEVEL);</span><br><span class="line">    <span class="comment">// 创建一个固定布局容器</span></span><br><span class="line">    GtkWidget *fixed = gtk_fixed_new();</span><br><span class="line">    <span class="comment">// 将fixed添加到window中</span></span><br><span class="line">    gtk_container_add(GTK_CONTAINER(window), fixed);</span><br><span class="line">    <span class="comment">// 创建button</span></span><br><span class="line">    GtkWidget *button1 = gtk_button_new_with_label(<span class="string">"button1"</span>);</span><br><span class="line">    GtkWidget *button2 = gtk_button_new_with_label(<span class="string">"button2"</span>);</span><br><span class="line">    <span class="comment">// 将button添加到fixed</span></span><br><span class="line">    gtk_fixed_put(GTK_FIXED(fixed), button1, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">    gtk_fixed_put(GTK_FIXED(fixed), button2, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">    <span class="comment">// 移动button位置</span></span><br><span class="line">    gtk_fixed_move(GTK_FIXED(fixed), button2, <span class="number">150</span>, <span class="number">150</span>);</span><br><span class="line">    <span class="comment">// 设置button大小</span></span><br><span class="line">    gtk_widget_set_size_request(button2, <span class="number">100</span>, <span class="number">50</span>);</span><br><span class="line">    <span class="comment">// 显示所有窗口</span></span><br><span class="line">    gtk_widget_show_all(window);</span><br><span class="line">    gtk_main();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="容器布局练习-计算器">容器布局练习-计算器</h3><p><strong>编辑控件( GtkEntry )</strong> <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 创建</span></span><br><span class="line"><span class="function">GtkWidget * <span class="title">gtk_entry_new</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br><span class="line"><span class="comment">// 编辑</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">gtk_entry_set_text</span> <span class="params">(GtkEntry *entry,<span class="keyword">const</span> gchar *text)</span></span>;</span><br><span class="line"><span class="comment">// 设置行编辑是否允许编辑</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">gtk_editable_set_editable</span><span class="params">(GtkEditable *editable, gboolean is_editable)</span></span>;</span><br></pre></td></tr></table></figure></p><p>示例代码 <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;gtk/gtk.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span>* argv[])</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 初始化</span></span><br><span class="line">    gtk_init(&amp;argc, &amp;argv);</span><br><span class="line">    <span class="comment">// 创建窗口</span></span><br><span class="line">    GtkWidget *window = gtk_window_new(GTK_WINDOW_TOPLEVEL);</span><br><span class="line">    <span class="comment">// 创建5行4列的表格容器</span></span><br><span class="line">    GtkWidget *table = gtk_table_new(<span class="number">5</span>, <span class="number">4</span>, TRUE);</span><br><span class="line">    <span class="comment">// 将table放入到容器中</span></span><br><span class="line">    gtk_container_add(GTK_CONTAINER(window), table);</span><br><span class="line">    <span class="comment">// 创建一个行编辑</span></span><br><span class="line">    GtkWidget *entry = gtk_entry_new();</span><br><span class="line">    <span class="comment">// 设置行编辑的内容</span></span><br><span class="line">    gtk_entry_set_text(GTK_ENTRY(entry), <span class="string">"2+2=4"</span>);</span><br><span class="line">    <span class="comment">// 设置行编辑不允许编辑</span></span><br><span class="line">    gtk_editable_set_editable(GTK_EDITABLE(entry), FALSE);</span><br><span class="line">    <span class="comment">// 创建0-9数字按钮，+-×/=c功能按钮</span></span><br><span class="line">    GtkWidget *button_0 = gtk_button_new_with_label(<span class="string">"0"</span>);</span><br><span class="line">    GtkWidget *button_1 = gtk_button_new_with_label(<span class="string">"1"</span>);</span><br><span class="line">    GtkWidget *button_2 = gtk_button_new_with_label(<span class="string">"2"</span>);</span><br><span class="line">    GtkWidget *button_3 = gtk_button_new_with_label(<span class="string">"3"</span>);</span><br><span class="line">    GtkWidget *button_4 = gtk_button_new_with_label(<span class="string">"4"</span>);</span><br><span class="line">    GtkWidget *button_5 = gtk_button_new_with_label(<span class="string">"5"</span>);</span><br><span class="line">    GtkWidget *button_6 = gtk_button_new_with_label(<span class="string">"6"</span>);</span><br><span class="line">    GtkWidget *button_7 = gtk_button_new_with_label(<span class="string">"7"</span>);</span><br><span class="line">    GtkWidget *button_8 = gtk_button_new_with_label(<span class="string">"8"</span>);</span><br><span class="line">    GtkWidget *button_9 = gtk_button_new_with_label(<span class="string">"9"</span>);</span><br><span class="line">    GtkWidget *button_add = gtk_button_new_with_label(<span class="string">"+"</span>);</span><br><span class="line">    GtkWidget *button_minus = gtk_button_new_with_label(<span class="string">"-"</span>);</span><br><span class="line">    GtkWidget *button_mul = gtk_button_new_with_label(<span class="string">"*"</span>);</span><br><span class="line">    GtkWidget *button_div = gtk_button_new_with_label(<span class="string">"/"</span>);</span><br><span class="line">    GtkWidget *button_equal = gtk_button_new_with_label(<span class="string">"="</span>);</span><br><span class="line">    GtkWidget *button_delete = gtk_button_new_with_label(<span class="string">"c"</span>);</span><br><span class="line">    <span class="comment">// 将table放入表格布局中</span></span><br><span class="line">    gtk_table_attach_defaults(GTK_TABLE(table), entry, <span class="number">0</span>, <span class="number">4</span>, <span class="number">0</span>, <span class="number">1</span>);</span><br><span class="line">    gtk_table_attach_defaults(GTK_TABLE(table), button_0, <span class="number">0</span>, <span class="number">1</span>, <span class="number">4</span>, <span class="number">5</span>);</span><br><span class="line">    gtk_table_attach_defaults(GTK_TABLE(table), button_1, <span class="number">0</span>, <span class="number">1</span>, <span class="number">3</span>, <span class="number">4</span>);</span><br><span class="line">    gtk_table_attach_defaults(GTK_TABLE(table), button_2, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>);</span><br><span class="line">    gtk_table_attach_defaults(GTK_TABLE(table), button_3, <span class="number">2</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">4</span>);</span><br><span class="line">    gtk_table_attach_defaults(GTK_TABLE(table), button_4, <span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>);</span><br><span class="line">    gtk_table_attach_defaults(GTK_TABLE(table), button_5, <span class="number">1</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">3</span>);</span><br><span class="line">    gtk_table_attach_defaults(GTK_TABLE(table), button_6, <span class="number">2</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">3</span>);</span><br><span class="line">    gtk_table_attach_defaults(GTK_TABLE(table), button_7, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">2</span>);</span><br><span class="line">    gtk_table_attach_defaults(GTK_TABLE(table), button_8, <span class="number">1</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">2</span>);</span><br><span class="line">    gtk_table_attach_defaults(GTK_TABLE(table), button_9, <span class="number">2</span>, <span class="number">3</span>, <span class="number">1</span>, <span class="number">2</span>);</span><br><span class="line">    gtk_table_attach_defaults(GTK_TABLE(table), button_add, <span class="number">1</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">5</span>);</span><br><span class="line">    gtk_table_attach_defaults(GTK_TABLE(table), button_minus, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>);</span><br><span class="line">    gtk_table_attach_defaults(GTK_TABLE(table), button_mul , <span class="number">3</span>, <span class="number">4</span>, <span class="number">2</span>, <span class="number">3</span>);</span><br><span class="line">    gtk_table_attach_defaults(GTK_TABLE(table), button_div, <span class="number">3</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">4</span>);</span><br><span class="line">    gtk_table_attach_defaults(GTK_TABLE(table), button_equal, <span class="number">3</span>, <span class="number">4</span>, <span class="number">4</span>, <span class="number">5</span>);</span><br><span class="line">    gtk_table_attach_defaults(GTK_TABLE(table), button_delete, <span class="number">3</span>, <span class="number">4</span>, <span class="number">1</span>, <span class="number">2</span>);</span><br><span class="line">    <span class="comment">// 显示</span></span><br><span class="line">    gtk_widget_show_all(window);</span><br><span class="line">    <span class="comment">// 循环</span></span><br><span class="line">    gtk_main();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gcc -o main main.c `pkg-config --libs -cflags gtk+-3.0`</span><br></pre></td></tr></table></figure><p>运行结果 <img src="https://zhuohc-com.oss-cn-hangzhou.aliyuncs.com/gtk%E5%AE%B9%E5%99%A8%E5%B8%83%E5%B1%80-%E8%AE%A1%E7%AE%97%E5%99%A81.png"></p><h2 id="信号与回调函数">信号与回调函数</h2><blockquote><p>GTK采用了信号与回调函数来处理窗口外部传来的事件、消息或信号。当信号发生时，程序自动调用为信号连接的回调函数。</p></blockquote><blockquote><p>GTK中的“信号”实际上是一种软件中断。“中断”在我们生活中经常遇到，譬如，我正在房间里打游戏，突然送快递的来了，把正在玩游戏的我给“中断”了，我去签收快递( 处理中断 )，处理完成后，再继续玩我的游戏。GTK中的“信号”就是属于这么一种“中断”，当用户按下按钮的时候，就产生一个“中断”，相当于产生一个信号，接着就会处理这么一个“中断任务”(程序里体验为调用一个函数)。</p></blockquote><blockquote><p>“信号”在GTK中可以认为一种中断的标志，如按下按钮的标志为"pressed",释放按钮的标志为"released"，这些标志就相当于 C语言的关键字一样，我们使用的时候必须完全按照它的名字来写。需要注意的是，每个控件的信号标志不一定都一样，如按钮（GtkButton）里有"pressed"信号，窗口(GtkWindow)里就没这个信号，每个控件具体有哪个信号，应该查看帮助文档来确定。</p></blockquote><p><strong>按钮的常用信号：</strong></p><ul><li><p>"clicked" : 单击按钮时触发</p></li><li><p>"pressed" : 按下按钮时触发</p></li><li><p>"released" : 释放按钮时触发</p></li></ul><p><strong>信号注册函数</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// instance：信号发出者，可以认为我们操作的控件，如按下按钮，这个就为按钮指针</span></span><br><span class="line"><span class="comment">// detailed_signal：信号标志，如"pressed"</span></span><br><span class="line"><span class="comment">// c_handler：回调函数的名称，需要用G_CALLBACK()进行转换</span></span><br><span class="line"><span class="comment">// data：给回调函数传的参数，gpointer 相当于C语言的 void *</span></span><br><span class="line"><span class="comment">// 返回值：注册函数的标志</span></span><br><span class="line"><span class="function">gulong <span class="title">g_signal_connect</span><span class="params">(gpointer instance, <span class="keyword">const</span> gchar *detailed_signal, GCallback c_handler, gpointer data)</span></span>;</span><br></pre></td></tr></table></figure><p>例如 <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">g_signal_connect(button, <span class="string">"pressed"</span>,G_CALLBACK(callback), <span class="literal">NULL</span>);</span><br></pre></td></tr></table></figure></p><p>当按下button按钮时，就会自动调用回调函数callback(相当于处理中断任务)，回调函数callback可以是任意函数，函数名字我们根据需要自行命名，如果不是库函数，我们还得定义这个回调函数，这里需要注意的是，回调函数的写法(返回值，参数)，不是我们想怎么写就怎么写，帮助文档里已经规定好了回调函数应该如何写，如果不按规定来写，可能产生意想不到的错误。</p><p><a href="https://developer.gnome.org/gtk3/stable/GtkWidget.html" target="_blank" rel="noopener">文档地址</a> 回调函数的定义 <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">callback</span><span class="params">(GtkButton *button,gpointer data)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>示例 <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;gtk/gtk.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">deal_pressed</span><span class="params">(GtkButton *button, gpointer user_data)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">char</span> *text = gtk_button_get_label(button);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%s----%s\n"</span>, (<span class="keyword">char</span> *) user_data, text);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span>* argv[])</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 初始化</span></span><br><span class="line">    gtk_init(&amp;argc, &amp;argv);</span><br><span class="line">    <span class="comment">// 创建窗口</span></span><br><span class="line">    GtkWidget *window = gtk_window_new(GTK_WINDOW_TOPLEVEL);</span><br><span class="line">    <span class="comment">// 设置窗口边框与内部控件的间隔为15</span></span><br><span class="line">    gtk_container_set_border_width(GTK_CONTAINER(window), <span class="number">15</span>);</span><br><span class="line">    <span class="comment">// 创建一个button</span></span><br><span class="line">    GtkWidget *button = gtk_button_new_with_label(<span class="string">"button1"</span>);</span><br><span class="line">    <span class="comment">// 将button添加到window中</span></span><br><span class="line">    gtk_container_add(GTK_CONTAINER(window), button);</span><br><span class="line">    <span class="comment">// 创建一个按钮信号</span></span><br><span class="line">    g_signal_connect(button, <span class="string">"pressed"</span>, G_CALLBACK(deal_pressed), <span class="string">"hello, world"</span>);</span><br><span class="line">    <span class="comment">// 显示控件</span></span><br><span class="line">    gtk_widget_show_all(window);</span><br><span class="line">    gtk_main();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="完成计算器计算功能">完成计算器计算功能</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;gtk/gtk.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> buf[<span class="number">50</span>] = <span class="string">""</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">deal_num</span><span class="params">(GtkButton *button, gpointer data)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">char</span> *text = gtk_button_get_label(button);</span><br><span class="line">    <span class="comment">// 如果是退格键</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="number">0</span> == <span class="built_in">strcmp</span>(<span class="string">"c"</span>, text)) &#123;</span><br><span class="line">        buf[<span class="built_in">strlen</span>(buf) - <span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">int</span> a = <span class="number">0</span>, b = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">char</span> c;</span><br><span class="line">        <span class="comment">// 连接buf和新传入的字符串</span></span><br><span class="line">        <span class="built_in">strcat</span>(buf, text);</span><br><span class="line">        <span class="keyword">if</span> (<span class="number">0</span> == <span class="built_in">strcmp</span>(<span class="string">"="</span>, text)) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"text=====##%s##\n"</span>, text);</span><br><span class="line">            <span class="comment">// 从一个字符串中读进与指定格式相符的数据</span></span><br><span class="line">            <span class="built_in">sscanf</span>(buf, <span class="string">"%d%c%d"</span>, &amp;a, &amp;c, &amp;b);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"---------001-----%c--\n"</span>, c);</span><br><span class="line">            <span class="keyword">if</span> (<span class="string">'+'</span> == c) &#123;</span><br><span class="line">                <span class="built_in">sprintf</span>(buf, <span class="string">"%d"</span>, a + b);</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">'-'</span> == c) &#123;</span><br><span class="line">                <span class="built_in">sprintf</span>(buf, <span class="string">"%d"</span>, a - b);</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">'*'</span> == c) &#123;</span><br><span class="line">                <span class="built_in">sprintf</span>(buf, <span class="string">"%d"</span>, a * b);</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">'/'</span> == c) &#123;</span><br><span class="line">                <span class="built_in">sprintf</span>(buf, <span class="string">"%d"</span>, a / b);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    gtk_entry_set_text(GTK_ENTRY(data), buf);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span>* argv[])</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 初始化</span></span><br><span class="line">    gtk_init(&amp;argc, &amp;argv);</span><br><span class="line">    <span class="comment">// 创建窗口</span></span><br><span class="line">    GtkWidget *window = gtk_window_new(GTK_WINDOW_TOPLEVEL);</span><br><span class="line">    <span class="comment">// 创建5行4列的表格容器</span></span><br><span class="line">    GtkWidget *table = gtk_table_new(<span class="number">5</span>, <span class="number">4</span>, TRUE);</span><br><span class="line">    <span class="comment">// 将table放入到容器中</span></span><br><span class="line">    gtk_container_add(GTK_CONTAINER(window), table);</span><br><span class="line">    <span class="comment">// 创建一个行编辑</span></span><br><span class="line">    GtkWidget *entry = gtk_entry_new();</span><br><span class="line">    <span class="comment">// 设置行编辑的内容</span></span><br><span class="line">    gtk_entry_set_text(GTK_ENTRY(entry), <span class="string">"2+2=4"</span>);</span><br><span class="line">    <span class="comment">// 设置行编辑不允许编辑</span></span><br><span class="line">    gtk_editable_set_editable(GTK_EDITABLE(entry), FALSE);</span><br><span class="line">    <span class="comment">// 创建0-9数字按钮，+-×/=c功能按钮</span></span><br><span class="line">    GtkWidget *button_0 = gtk_button_new_with_label(<span class="string">"0"</span>);</span><br><span class="line">    GtkWidget *button_1 = gtk_button_new_with_label(<span class="string">"1"</span>);</span><br><span class="line">    GtkWidget *button_2 = gtk_button_new_with_label(<span class="string">"2"</span>);</span><br><span class="line">    GtkWidget *button_3 = gtk_button_new_with_label(<span class="string">"3"</span>);</span><br><span class="line">    GtkWidget *button_4 = gtk_button_new_with_label(<span class="string">"4"</span>);</span><br><span class="line">    GtkWidget *button_5 = gtk_button_new_with_label(<span class="string">"5"</span>);</span><br><span class="line">    GtkWidget *button_6 = gtk_button_new_with_label(<span class="string">"6"</span>);</span><br><span class="line">    GtkWidget *button_7 = gtk_button_new_with_label(<span class="string">"7"</span>);</span><br><span class="line">    GtkWidget *button_8 = gtk_button_new_with_label(<span class="string">"8"</span>);</span><br><span class="line">    GtkWidget *button_9 = gtk_button_new_with_label(<span class="string">"9"</span>);</span><br><span class="line">    GtkWidget *button_add = gtk_button_new_with_label(<span class="string">"+"</span>);</span><br><span class="line">    GtkWidget *button_minus = gtk_button_new_with_label(<span class="string">"-"</span>);</span><br><span class="line">    GtkWidget *button_mul = gtk_button_new_with_label(<span class="string">"*"</span>);</span><br><span class="line">    GtkWidget *button_div = gtk_button_new_with_label(<span class="string">"/"</span>);</span><br><span class="line">    GtkWidget *button_equal = gtk_button_new_with_label(<span class="string">"="</span>);</span><br><span class="line">    GtkWidget *button_delete = gtk_button_new_with_label(<span class="string">"c"</span>);</span><br><span class="line">    <span class="comment">// 将table放入表格布局中</span></span><br><span class="line">    gtk_table_attach_defaults(GTK_TABLE(table), entry, <span class="number">0</span>, <span class="number">4</span>, <span class="number">0</span>, <span class="number">1</span>);</span><br><span class="line">    gtk_table_attach_defaults(GTK_TABLE(table), button_0, <span class="number">0</span>, <span class="number">1</span>, <span class="number">4</span>, <span class="number">5</span>);</span><br><span class="line">    gtk_table_attach_defaults(GTK_TABLE(table), button_1, <span class="number">0</span>, <span class="number">1</span>, <span class="number">3</span>, <span class="number">4</span>);</span><br><span class="line">    gtk_table_attach_defaults(GTK_TABLE(table), button_2, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>);</span><br><span class="line">    gtk_table_attach_defaults(GTK_TABLE(table), button_3, <span class="number">2</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">4</span>);</span><br><span class="line">    gtk_table_attach_defaults(GTK_TABLE(table), button_4, <span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>);</span><br><span class="line">    gtk_table_attach_defaults(GTK_TABLE(table), button_5, <span class="number">1</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">3</span>);</span><br><span class="line">    gtk_table_attach_defaults(GTK_TABLE(table), button_6, <span class="number">2</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">3</span>);</span><br><span class="line">    gtk_table_attach_defaults(GTK_TABLE(table), button_7, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">2</span>);</span><br><span class="line">    gtk_table_attach_defaults(GTK_TABLE(table), button_8, <span class="number">1</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">2</span>);</span><br><span class="line">    gtk_table_attach_defaults(GTK_TABLE(table), button_9, <span class="number">2</span>, <span class="number">3</span>, <span class="number">1</span>, <span class="number">2</span>);</span><br><span class="line">    gtk_table_attach_defaults(GTK_TABLE(table), button_add, <span class="number">1</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">5</span>);</span><br><span class="line">    gtk_table_attach_defaults(GTK_TABLE(table), button_minus, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>);</span><br><span class="line">    gtk_table_attach_defaults(GTK_TABLE(table), button_mul, <span class="number">3</span>, <span class="number">4</span>, <span class="number">2</span>, <span class="number">3</span>);</span><br><span class="line">    gtk_table_attach_defaults(GTK_TABLE(table), button_div, <span class="number">3</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">4</span>);</span><br><span class="line">    gtk_table_attach_defaults(GTK_TABLE(table), button_equal, <span class="number">3</span>, <span class="number">4</span>, <span class="number">4</span>, <span class="number">5</span>);</span><br><span class="line">    gtk_table_attach_defaults(GTK_TABLE(table), button_delete, <span class="number">3</span>, <span class="number">4</span>, <span class="number">1</span>, <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//7.注册信号函数，把entry传给回调函数deal_num()</span></span><br><span class="line">    g_signal_connect(button_0, <span class="string">"pressed"</span>, G_CALLBACK(deal_num), entry);</span><br><span class="line">    g_signal_connect(button_1, <span class="string">"pressed"</span>, G_CALLBACK(deal_num), entry);</span><br><span class="line">    g_signal_connect(button_2, <span class="string">"pressed"</span>, G_CALLBACK(deal_num), entry);</span><br><span class="line">    g_signal_connect(button_3, <span class="string">"pressed"</span>, G_CALLBACK(deal_num), entry);</span><br><span class="line">    g_signal_connect(button_4, <span class="string">"pressed"</span>, G_CALLBACK(deal_num), entry);</span><br><span class="line">    g_signal_connect(button_5, <span class="string">"pressed"</span>, G_CALLBACK(deal_num), entry);</span><br><span class="line">    g_signal_connect(button_6, <span class="string">"pressed"</span>, G_CALLBACK(deal_num), entry);</span><br><span class="line">    g_signal_connect(button_7, <span class="string">"pressed"</span>, G_CALLBACK(deal_num), entry);</span><br><span class="line">    g_signal_connect(button_8, <span class="string">"pressed"</span>, G_CALLBACK(deal_num), entry);</span><br><span class="line">    g_signal_connect(button_9, <span class="string">"pressed"</span>, G_CALLBACK(deal_num), entry);</span><br><span class="line"></span><br><span class="line">    g_signal_connect(button_add, <span class="string">"pressed"</span>, G_CALLBACK(deal_num), entry);</span><br><span class="line">    g_signal_connect(button_mul, <span class="string">"pressed"</span>, G_CALLBACK(deal_num), entry);</span><br><span class="line">    g_signal_connect(button_div, <span class="string">"pressed"</span>, G_CALLBACK(deal_num), entry);</span><br><span class="line">    g_signal_connect(button_minus, <span class="string">"pressed"</span>, G_CALLBACK(deal_num), entry);</span><br><span class="line">    g_signal_connect(button_equal, <span class="string">"pressed"</span>, G_CALLBACK(deal_num), entry);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 显示</span></span><br><span class="line">    gtk_widget_show_all(window);</span><br><span class="line">    <span class="comment">// 循环</span></span><br><span class="line">    gtk_main();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果(并不完美) <img src="https://zhuohc-com.oss-cn-hangzhou.aliyuncs.com/gtk-%E8%AE%A1%E7%AE%97%E5%99%A8.gif"></p><h3 id="glade">Glade</h3><blockquote><p>Glade是GTK＋的界面辅助设计工具，可以通过拖放控件的方式快速设计出用户界面，这样的优势在于在设计的同时能直观地看到界面上的控件，并且可以随时调整界面上的设计。</p></blockquote><blockquote><p>用glade设计的图形用户界面是以XML格式的文件保存，它描述了控件的结构、每个控件的属性。用户可以动态加载这个界面文件。而且，界面和程序逻辑是完全分离，用户修改了界面，也不需要重新编译程序。</p></blockquote><p><strong>安装</strong> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> ubuntu </span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo apt-get install glade libglade2-dev</span></span><br></pre></td></tr></table></figure></p><p><strong>Glade文件</strong> <figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- Generated with glade 3.22.1 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">interface</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">requires</span> <span class="attr">lib</span>=<span class="string">"gtk+"</span> <span class="attr">version</span>=<span class="string">"3.20"</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">object</span> <span class="attr">class</span>=<span class="string">"GtkWindow"</span> <span class="attr">id</span>=<span class="string">"window1"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"name"</span>&gt;</span>window1<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"can_focus"</span>&gt;</span>False<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"title"</span> <span class="attr">translatable</span>=<span class="string">"yes"</span>&gt;</span>第一个顶层窗口<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">child</span> <span class="attr">type</span>=<span class="string">"titlebar"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">placeholder</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">child</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">child</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">object</span> <span class="attr">class</span>=<span class="string">"GtkLayout"</span> <span class="attr">id</span>=<span class="string">"layout1"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"name"</span>&gt;</span>layout1<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"visible"</span>&gt;</span>True<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"can_focus"</span>&gt;</span>False<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">child</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">object</span> <span class="attr">class</span>=<span class="string">"GtkEntry"</span> <span class="attr">id</span>=<span class="string">"entry1"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"name"</span>&gt;</span>search_input<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"width_request"</span>&gt;</span>200<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"height_request"</span>&gt;</span>40<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"visible"</span>&gt;</span>True<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"can_focus"</span>&gt;</span>True<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"text"</span> <span class="attr">translatable</span>=<span class="string">"yes"</span>&gt;</span>search_input<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"primary_icon_tooltip_text"</span> <span class="attr">translatable</span>=<span class="string">"yes"</span>&gt;</span>search_input<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">object</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">packing</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"x"</span>&gt;</span>10<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"y"</span>&gt;</span>10<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">packing</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">child</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">child</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">object</span> <span class="attr">class</span>=<span class="string">"GtkButton"</span> <span class="attr">id</span>=<span class="string">"button1"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"label"</span> <span class="attr">translatable</span>=<span class="string">"yes"</span>&gt;</span>搜索<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"name"</span>&gt;</span>search_button<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"width_request"</span>&gt;</span>100<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"height_request"</span>&gt;</span>40<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"visible"</span>&gt;</span>True<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"can_focus"</span>&gt;</span>True<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"receives_default"</span>&gt;</span>True<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">object</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">packing</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"x"</span>&gt;</span>220<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"y"</span>&gt;</span>10<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">packing</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">child</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">child</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">object</span> <span class="attr">class</span>=<span class="string">"GtkButton"</span> <span class="attr">id</span>=<span class="string">"button2"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"label"</span> <span class="attr">translatable</span>=<span class="string">"yes"</span>&gt;</span>查看<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"name"</span>&gt;</span>show_button<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"width_request"</span>&gt;</span>100<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"height_request"</span>&gt;</span>40<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"visible"</span>&gt;</span>True<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"can_focus"</span>&gt;</span>True<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"receives_default"</span>&gt;</span>True<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">object</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">packing</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"x"</span>&gt;</span>350<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"y"</span>&gt;</span>10<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">packing</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">child</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">object</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">child</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">object</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">interface</span>&gt;</span></span><br></pre></td></tr></table></figure></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;gtk/gtk.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span>* argv[])</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 初始化</span></span><br><span class="line">    gtk_init(&amp;argc, &amp;argv);</span><br><span class="line">    <span class="comment">// 创建GtkBuilder对象</span></span><br><span class="line">    GtkBuilder *builder = gtk_builder_new();</span><br><span class="line">    <span class="comment">// 读取glade文件</span></span><br><span class="line">    <span class="keyword">if</span>(!gtk_builder_add_from_file(builder, <span class="string">"../1.glade"</span>, <span class="literal">NULL</span>)) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"无法打开文件"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 获取窗口指针</span></span><br><span class="line">    GtkWidget *window1 = GTK_WIDGET(gtk_builder_get_object(builder, <span class="string">"window1"</span>));</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 显示</span></span><br><span class="line">    gtk_widget_show_all(window1);</span><br><span class="line">    <span class="comment">// 循环</span></span><br><span class="line">    gtk_main();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="图片控件">图片控件</h3><p>图片控件的创建：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// filename：图片的名字，带路径的话需要加上路径( 相对或绝对 )</span></span><br><span class="line"><span class="function">GtkWidget *<span class="title">gtk_image_new_from_file</span><span class="params">( <span class="keyword">const</span> gchar *filename )</span></span>;</span><br></pre></td></tr></table></figure><p>通过上面方法创建的图片控件，以图片默认大小来显示，不能修改其大小。如果要改变图片的大小，我们要借助图片资源对象GdkPixbuf，需要注意的是，GdkPixbuf不属于控件类，它以 Gdk 开头。</p><p>图片资源对象pixbuf的创建：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// filename：图片的名字，带路径的话需要加上路径( 相对或绝对 )</span></span><br><span class="line"><span class="comment">// error：储存错误的指针</span></span><br><span class="line"><span class="comment">// 返回值：pixbuf指针</span></span><br><span class="line"><span class="function">GdkPixbuf *<span class="title">gdk_pixbuf_new_from_file</span><span class="params">(<span class="keyword">const</span> gchar *filename, GError **error)</span></span>;</span><br></pre></td></tr></table></figure><p>设置图片的大小：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// src：gdk_pixbuf_new_from_file()的返回值</span></span><br><span class="line"><span class="comment">// dest_width：图片的宽度</span></span><br><span class="line"><span class="comment">// dest_height：图片的高度</span></span><br><span class="line"><span class="comment">// interp_type：是一个枚举变量，标志图片的加载速度和质量，常用GDK_INTERP_BILINEAR</span></span><br><span class="line"><span class="comment">// 返回值：指定大小好的pixbuf指针</span></span><br><span class="line"><span class="function">GdkPixbuf *<span class="title">gdk_pixbuf_scale_simple</span><span class="params">(<span class="keyword">const</span> GdkPixbuf *src, <span class="keyword">int</span> dest_width, <span class="keyword">int</span> dest_height, GdkInterpType interp_type)</span></span>;</span><br></pre></td></tr></table></figure><p>通过gdk_pixbuf_new_from_file(), gdk_pixbuf_scale_simple()创建的pixbuf，它会动态分配空间，占用资源，用完后，需要人为释放资源。</p><p>释放资源：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">g_object_unref</span><span class="params">(GtkObject *object)</span></span>;</span><br></pre></td></tr></table></figure><p>通过pixbuf来创建图片控件：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// pixbuf：指定好大小的pixbuf</span></span><br><span class="line"><span class="comment">// 返回值：图片控件指针</span></span><br><span class="line"><span class="function">GtkWidget *<span class="title">gtk_image_new_from_pixbuf</span><span class="params">(GdkPixbuf *pixbuf )</span></span>;</span><br></pre></td></tr></table></figure><p>图片控件重新设置一张图片(pixbuf)：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// image：图片控件指针</span></span><br><span class="line"><span class="comment">// pixbuf：指定好大小的pixbuf</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">gtk_image_set_from_pixbuf</span><span class="params">(GtkImage *image, GdkPixbuf *pixbuf )</span></span>;</span><br></pre></td></tr></table></figure><p>示例代码</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;gtk/gtk.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span>* argv[])</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 初始化</span></span><br><span class="line">    gtk_init(&amp;argc, &amp;argv);</span><br><span class="line">    <span class="comment">// 创建一个window</span></span><br><span class="line">    GtkWidget *window = gtk_window_new(GTK_WINDOW_TOPLEVEL);</span><br><span class="line">    <span class="comment">// 创建水平容器</span></span><br><span class="line">    GtkWidget *hbox = gtk_box_new(GTK_ORIENTATION_HORIZONTAL, <span class="number">10</span>);</span><br><span class="line">    <span class="comment">// 添加到window</span></span><br><span class="line">    gtk_container_add(GTK_CONTAINER(window), hbox);</span><br><span class="line">    <span class="comment">// 创建图片控件</span></span><br><span class="line">    GtkWidget *image1 = gtk_image_new_from_file(<span class="string">"../img/1.png"</span>);</span><br><span class="line">    <span class="comment">// 将image添加到box</span></span><br><span class="line">    gtk_container_add(GTK_CONTAINER(hbox), image1);</span><br><span class="line">    <span class="comment">// 创建pixbuf</span></span><br><span class="line">    GdkPixbuf *src = gdk_pixbuf_new_from_file(<span class="string">"../img/1.png"</span>, <span class="literal">NULL</span>);</span><br><span class="line">    <span class="comment">// 修改图片大小</span></span><br><span class="line">    GdkPixbuf *dst = gdk_pixbuf_scale_simple(src, <span class="number">100</span>, <span class="number">100</span>, GDK_INTERP_BILINEAR);</span><br><span class="line">    GtkWidget *image2 = gtk_image_new_from_pixbuf(dst);</span><br><span class="line">    <span class="comment">// 释放pxibuf资源</span></span><br><span class="line">    g_object_unref(src);</span><br><span class="line">    g_object_unref(dst);</span><br><span class="line">    <span class="comment">// 将image2添加到box</span></span><br><span class="line">    gtk_container_add(GTK_CONTAINER(hbox), image2);</span><br><span class="line">    <span class="comment">// 获取控件里的pixbuf</span></span><br><span class="line">    GdkPixbuf *tmp = gtk_image_get_pixbuf(GTK_IMAGE(image2));</span><br><span class="line">    GtkWidget *image3 = gtk_image_new_from_pixbuf(tmp);</span><br><span class="line">    g_object_unref(tmp);</span><br><span class="line">    gtk_container_add(GTK_CONTAINER(hbox), image3);</span><br><span class="line">    <span class="comment">// 给创建的图片控件重新设置图片</span></span><br><span class="line">    GtkWidget *image4 = gtk_image_new_from_file(<span class="string">"../img/1.png"</span>);</span><br><span class="line">    gtk_container_add(GTK_CONTAINER(hbox), image4);</span><br><span class="line">    src = gdk_pixbuf_new_from_file(<span class="string">"../img/2.png"</span>, <span class="literal">NULL</span>);</span><br><span class="line">    dst = gdk_pixbuf_scale_simple(src, <span class="number">200</span>, <span class="number">200</span>, GDK_INTERP_BILINEAR);</span><br><span class="line">    gtk_image_set_from_pixbuf(GTK_IMAGE(image4), dst);</span><br><span class="line">    g_object_unref(src);</span><br><span class="line">    g_object_unref(dst);</span><br><span class="line">    <span class="comment">// 显示所有控件</span></span><br><span class="line">    gtk_widget_show_all(window);</span><br><span class="line">    <span class="comment">// 循环</span></span><br><span class="line">    gtk_main();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="进度条控件">进度条控件</h3><p><a href="https://developer.gnome.org/gtk3/stable/GtkProgressBar.html#gtk-progress-bar-get-fraction" target="_blank" rel="noopener">文档</a></p><p>进度条的创建</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 返回值：进度条指针</span></span><br><span class="line"><span class="function">GtkWidget *<span class="title">gtk_progress_bar_new</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br></pre></td></tr></table></figure><p>设置进度条显示的进度比例</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// pbar：需要操作的进度条</span></span><br><span class="line"><span class="comment">// fraction：0.0到1.0</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">gtk_progress_bar_set_fraction</span><span class="params">(GtkProgressBar *pbar, gdouble fraction)</span></span>;</span><br></pre></td></tr></table></figure><p>获取进度条显示的进度比例</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// pbar：需要操作的进度条</span></span><br><span class="line"><span class="comment">// 返回值：进度比例</span></span><br><span class="line"><span class="function">gdouble  <span class="title">gtk_progress_bar_get_fraction</span> <span class="params">(GtkProgressBar *pbar)</span></span>;</span><br></pre></td></tr></table></figure><p>设置滑槽上的文本显示</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// pbar：需要操作的进度条</span></span><br><span class="line"><span class="comment">// text：设置的文本内容</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">gtk_progress_bar_set_text</span><span class="params">(GtkProgressBar *pbar, gchar *text)</span></span>;</span><br></pre></td></tr></table></figure><p>设置进度条的移动方向gtk+-2版本</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// pbar：需要操作的进度条</span></span><br><span class="line"><span class="comment">// orientation：移动方向，它是一个枚举变量</span></span><br><span class="line"><span class="comment">// GTK_PROGRESS_LEFT_TO_RIGHT：从左向右 </span></span><br><span class="line"><span class="comment">// GTK_PROGRESS_RIGHT_TO_LEFT：从右向左 </span></span><br><span class="line"><span class="comment">// GTK_PROGRESS_BOTTOM_TO_TOP：从下向上 </span></span><br><span class="line"><span class="comment">// GTK_PROGRESS_TOP_TO_BOTTOM：从上向下</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">gtk_progress_bar_set_orientation</span><span class="params">(GtkProgressBar *pbar, GtkProgressBarOrientation orientation)</span></span>;</span><br></pre></td></tr></table></figure><p>获取进度条的方向gtk+-2版本</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// pbar：需要操作的进度条</span></span><br><span class="line"><span class="comment">// 返回值：进度条的方向，它是一个枚举类型</span></span><br><span class="line">GtkProgressBarOrientationgtk_progress_bar_get_orientation(GtkProgressBar *pbar);</span><br></pre></td></tr></table></figure><p>设置进度条的移动方向gtk+-3版本</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">gtk_progress_bar_set_inverted</span> <span class="params">(GtkProgressBar *pbar, gboolean inverted)</span></span>;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">gboolean <span class="title">gtk_progress_bar_get_inverted</span> <span class="params">(GtkProgressBar *pbar)</span></span>;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;gtk/gtk.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//回调函数，切换进度条的移动方向</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">toggle_orientation</span><span class="params">(GtkWidget *widget, gpointer data)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">switch</span> (gtk_progress_bar_get_inverted(GTK_PROGRESS_BAR(data)) ) &#123;</span><br><span class="line">        <span class="keyword">case</span> TRUE:</span><br><span class="line">            gtk_progress_bar_set_inverted(GTK_PROGRESS_BAR(data), FALSE);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> FALSE:</span><br><span class="line">            gtk_progress_bar_set_inverted(GTK_PROGRESS_BAR(data), TRUE);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//回调函数，更新进度条，这样可以看到进度条的移动</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">callback</span><span class="params">(GtkWidget *widget, gpointer data)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    gdouble new_val = gtk_progress_bar_get_fraction(GTK_PROGRESS_BAR(data)) +<span class="number">0.05</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (new_val &gt; <span class="number">1.0</span>) &#123;</span><br><span class="line">        new_val = <span class="number">0.0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//设置进度条新值</span></span><br><span class="line">    gtk_progress_bar_set_fraction(GTK_PROGRESS_BAR(data), new_val);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//1.gtk环境的初始化</span></span><br><span class="line">    gtk_init(&amp;argc, &amp;argv);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//2.创建一个窗口</span></span><br><span class="line">    GtkWidget *window = gtk_window_new(GTK_WINDOW_TOPLEVEL);</span><br><span class="line">    <span class="comment">//设置窗口的标题</span></span><br><span class="line">    gtk_window_set_title(GTK_WINDOW(window), <span class="string">"gtk_progress_bar"</span>);</span><br><span class="line">    <span class="comment">//设置窗口边框宽度</span></span><br><span class="line">    gtk_container_set_border_width(GTK_CONTAINER(window), <span class="number">10</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//3.设置窗口的最小大小</span></span><br><span class="line">    gtk_widget_set_size_request(window, <span class="number">300</span>, <span class="number">200</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//4.窗口关联destroy信号到gtk_main_quit</span></span><br><span class="line">    g_signal_connect(window, <span class="string">"destroy"</span>, G_CALLBACK(gtk_main_quit), <span class="literal">NULL</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//5.创建一个垂直容器</span></span><br><span class="line">    GtkWidget *vbox = gtk_box_new(GTK_ORIENTATION_VERTICAL, <span class="number">5</span>);</span><br><span class="line">    <span class="comment">//将vbox添加到window中</span></span><br><span class="line">    gtk_container_add(GTK_CONTAINER(window), vbox);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//6.创建一个进度条</span></span><br><span class="line">    GtkWidget *progress = gtk_progress_bar_new();</span><br><span class="line">    <span class="comment">//将progress添加到vbox中</span></span><br><span class="line">    gtk_container_add(GTK_CONTAINER(vbox), progress);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//7.设置进度条的百分比为50%</span></span><br><span class="line">    gtk_progress_bar_set_fraction(GTK_PROGRESS_BAR(progress), <span class="number">0.5</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//8.设置进度条上显示的文字</span></span><br><span class="line">    gtk_progress_bar_set_text(GTK_PROGRESS_BAR(progress), <span class="string">"some text"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//9.添加一个button1按钮,切换方向</span></span><br><span class="line">    GtkWidget *button1 = gtk_button_new_with_label(<span class="string">"right to lift"</span>);</span><br><span class="line">    gtk_container_add(GTK_CONTAINER(vbox), button1);</span><br><span class="line">    g_signal_connect(button1, <span class="string">"clicked"</span>, G_CALLBACK(    toggle_orientation   ), progress);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//10.添加一个button2，移动进度条</span></span><br><span class="line">    GtkWidget *button2 = gtk_button_new_with_label(<span class="string">"add"</span>);</span><br><span class="line">    gtk_container_add(GTK_CONTAINER(vbox), button2);</span><br><span class="line">    g_signal_connect(button2, <span class="string">"clicked"</span>, G_CALLBACK(callback), progress);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//11.显示所欲窗口</span></span><br><span class="line">    gtk_widget_show_all(window);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//12.主事件循环</span></span><br><span class="line">    gtk_main();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C </tag>
            
            <tag> Gtk+ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ffmpeg入门基础</title>
      <link href="/2019/07/24/Ffmpeg%E5%85%A5%E9%97%A8%E5%9F%BA%E7%A1%80/"/>
      <url>/2019/07/24/Ffmpeg%E5%85%A5%E9%97%A8%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<h2 id="ffmpeg基本流程">Ffmpeg基本流程</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">文件-&gt;音视频流: demuxer解封装</span><br><span class="line">音视频流-&gt;数据包: decoder解码</span><br><span class="line">数据包-&gt;音视频流: encoder编码</span><br><span class="line">音视频流-&gt;文件: muxer封装</span><br></pre></td></tr></table></figure><h2 id="ffmpeg基本定义">Ffmpeg基本定义</h2><ol type="1"><li>文件：也叫容器Container，比如mp4文件、flv文件等，容器的类型决定了信息被存放在文件中的位置。</li><li>音视频流：</li></ol><h2 id="ffmpeg录制">Ffmpeg录制</h2><h3 id="录制设备查询">录制设备查询</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">➜  $ ffmpeg -hide_banner -devices</span><br><span class="line">Devices:</span><br><span class="line"> D. = Demuxing supported</span><br><span class="line"> .E = Muxing supported</span><br><span class="line"> --</span><br><span class="line"> DE alsa            ALSA audio output</span><br><span class="line"> DE fbdev           Linux framebuffer</span><br><span class="line"> D  iec61883        libiec61883 (new DV1394) A/V input device</span><br><span class="line"> D  jack            JACK Audio Connection Kit</span><br><span class="line"> D  kmsgrab         KMS screen capture</span><br><span class="line"> D  lavfi           Libavfilter virtual input device</span><br><span class="line"> DE oss             OSS (Open Sound System) playback</span><br><span class="line"> DE pulse           Pulse audio output</span><br><span class="line">  E sdl,sdl2        SDL2 output device</span><br><span class="line"> DE video4linux2,v4l2 Video4Linux2 output device</span><br><span class="line"> D  x11grab         X11 screen capture, using XCB</span><br><span class="line">  E xv              XV (XVideo) output device</span><br></pre></td></tr></table></figure><ul><li>D：输入设备</li><li>E：输出设备</li></ul><p><a href="https://ffmpeg.org/ffmpeg-devices.html#Input-Devices" target="_blank" rel="noopener">ffmpeg输入设备列表</a></p><p><em><font color="#2bbc8a">ALSA</font></em>是Advanced Linux Sound Architecture的缩写，高级Linux声音架构的简称,它在Linux操作系统上提供了音频和MIDI（Musical Instrument Digital Interface，音乐设备数字化接口）的支持，需要安装libasound库</p><p><em><font color="#2bbc8a">android_camera</font></em>Android相机输入设备。 此输入设备使用Android Camera2 NDK API，该API可在API级别为24+的设备上使用。在配置期间自动检测android_camera的可用性。 该设备允许从Android设备上的所有摄像头进行捕获，这些摄像头集成在Camera2 NDK API中。 可用的摄像机在内部枚举，可以使用camera_index参数进行选择。输入文件字符串被丢弃。 通常，后置摄像头的索引为0，而前置摄像头的索引为1。</p><p><em><font color="#2bbc8a">avfoundation</font></em>音视频 苹果设备</p><p><em><font color="#2bbc8a">bktr</font></em> BSD 视频输入设备</p><p><em><font color="#2bbc8a">decklink</font></em> BlackMagic Decklink是一款影像采集编辑产品，接口类型PCI-33/66、PCI-X 133&amp;100MHz 。</p><p><em><font color="#2bbc8a">dshow</font></em> Windows DirectShow input device.</p><p><em><font color="#2bbc8a">fbdev</font></em> Linux framebuffer（Linux帧缓冲）输入设备，只能录制终端的视频 Linux framebuffer是一种独立于硬件的图像抽象层，它用于在计算机屏幕上显示图像,通常是在控制台（环境）。它可以通过一个文件设备节点访问，通常为：<code>/dev/fb0</code></p><p><em><font color="#2bbc8a">gdigrab</font></em> Win32 GDI 屏幕截取设备, 这个设备允许你截取显示在Windows（系统）上的屏幕区域。</p><p><em><font color="#2bbc8a">iec61883</font></em> 使用<code>iec61883</code>的FireWire（火线） DV/HDV输入设备。 要允许这个输入设备，需要<code>libiec61883</code>, <code>libraw1394</code> 和 <code>libavc1394</code>被安装到系统中。此外还要在编译时配置<code>--enable-libiec61883</code>以支持。</p><p><em><font color="#2bbc8a">jack</font></em> JACK输入设备。为了能使用JACK设备，需要系统上存在<code>libjack</code></p><p><em><font color="#2bbc8a">kmsgrab</font></em></p><p><em><font color="#2bbc8a">lavfi</font></em> <code>Libavfilter</code>输入虚拟设备, 这个输入设备可以从<code>libavfilter</code>滤镜链图的一个开放输出端口读取数据。 对于每个滤镜链图开放输出端口，这个输入设备将创建一个对应的流映射到这个端口进行输出。当前只支持视频数据。滤镜链图是通过选项<code>graph</code>描述的。</p><p><em><font color="#2bbc8a">libcdio</font></em> 基于<code>libcdio</code>的音乐CD输入设备。需要系统中有<code>libcdio</code>才能启用，且编译时需要用<code>--enable-libcdio</code>配置选项允许。</p><p><em><font color="#2bbc8a">libdc1394</font></em> IIDC1394输入设备，其基于<code>libdc1394</code>和<code>libraw1394</code>, 编译允许需要配置<code>--enable-libdc1394</code></p><p><em><font color="#2bbc8a">openal</font></em> 这个OpenAL输入设备支持在所有实现了<code>OpenAL 1.1</code>的系统上进行音频捕获。 要编译使用它需要系统包含<code>OpenAL</code>头和<code>libraries</code>库，并且设置编译选项<code>--enable-openal</code></p><p><em><font color="#2bbc8a">oss</font></em></p><p><em><font color="#2bbc8a">pulse</font></em> PulseAudio（脉冲音频）输入设备, 要使用须编译配置设置<code>--enable-libpulse</code></p><p><em><font color="#2bbc8a">sndio</font></em> sndio输入设备。要使用它需要系统安装并配置有<code>libsndio</code>库</p><p><em><font color="#2bbc8a">video4linux2, v4l2</font></em> Video4Linux2 输入视频设备, "v4l2"是"video4linux2"的别名 编译需要<code>v4l-utiles</code>支持（<code>--enable-libv4l2</code>编译选项被配置），也可用于<code>-use_libv4l2</code>输入设备选项。 捕获的设备名是一个文件设备节点，通常Linux系统在设备（例如USB摄像头）插入到系统时自动创建这样的节点，会被命名为<code>/dev/videoN</code>，<code>N</code>是设备索引序号 Video4Linux设备通常只支持有限的分辨率（<code>width x height</code>）和帧率,通过<code>-list_formats all</code>选项来获取支持情况。一些设备，例如电视卡可以支持1个或者多个标准，它支持的标准可以通过<code>-list_standards all</code>来了解。 时间戳时基单位为1microsecond。根据内核版本和配置，时间戳可以基于实时间（real time clock——绝对时间，一种起源于Unix的表示方式）或者单调时钟（monotonic clock——通常源自启动时间，不受NTP或者手动改变）。<code>-timestamps abs</code>或者<code>-ts abs</code>选择启用实时间。</p><p><em><font color="#2bbc8a">vfwcap</font></em> vfw（Video for Windows）捕获输入端 文件名必须是捕获设备索引，范围0-9可以用<code>list</code>作为文件名，将输出一个设备列表。任何数字外其它文件名被视作设备索引0。</p><p><em><font color="#2bbc8a">x11grab</font></em> X11 视频输入设备, 使用需要<code>libxcb</code>库，它会在编译时自动检测。</p><h3 id="fbdev">fbdev</h3><p><em>linux终端录制设备</em></p><p>查看使用指定采集设备参数 <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> ffmpeg -hide_banner -h demuxer=fbdev</span></span><br><span class="line">Demuxer fbdev [Linux framebuffer]:</span><br><span class="line">fbdev indev AVOptions:</span><br><span class="line">  -framerate         &lt;video_rate&gt; .D.......  (default "25")</span><br><span class="line"><span class="meta">#</span><span class="bash"> framerate 帧数 默认25帧</span></span><br></pre></td></tr></table></figure></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo ffmpeg -framerate 30  -f fbdev -i /dev/fb0 output.mp4</span></span><br></pre></td></tr></table></figure><h3 id="v412">v412</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> ffmpeg -hide_banner -h demuxer=Video4Linux2</span></span><br></pre></td></tr></table></figure><table><thead><tr class="header"><th>参数</th><th>类型</th><th>说明</th></tr></thead><tbody><tr class="odd"><td>-standard</td><td>字符串</td><td>设置tv标准</td></tr><tr class="even"><td>-channel</td><td>整数</td><td>设置tv通道</td></tr><tr class="odd"><td>-video_size</td><td>图像大小</td><td>设置采集视频频帧大小</td></tr><tr class="even"><td>-pixel_format</td><td>字符串</td><td>设置采集视频的分辨率</td></tr><tr class="odd"><td>-input_format</td><td>字符串</td><td>设置采集视频的分辨率</td></tr><tr class="even"><td>-framerate</td><td>字符串</td><td>设置采集视频帧率</td></tr><tr class="odd"><td>-list_formats</td><td>整数</td><td>列举输入视频信号的信息</td></tr><tr class="even"><td>-list_standards</td><td>整数</td><td>列举标准信息</td></tr><tr class="odd"><td>-timestamps</td><td>整数</td><td>设置时间戳</td></tr><tr class="even"><td>-ts</td><td>整数</td><td>设置模拟器分析帧使用的时间戳</td></tr><tr class="odd"><td>-use_libv4l2</td><td>布尔</td><td>使用第三方库libv412选项</td></tr></tbody></table><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> ffmpeg -hide_banner -f Video4Linux2 -list_formats all -i /dev/video0</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> /dev/video0根据自己的摄像头来设置</span></span><br></pre></td></tr></table></figure><h3 id="x11grab">x11grab</h3><p><em>linux桌面录制设备</em></p><p><a href="https://trac.ffmpeg.org/wiki/Capture/Desktop" target="_blank" rel="noopener">桌面录制方法</a></p><p>linux环境下如果此方法报错 <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Cannot open display :0.0, error 1.</span><br><span class="line">:0.0: Input/output error</span><br></pre></td></tr></table></figure></p><p>则需要查看$DISPLAY， 在Linux/Unix类操作系统上, DISPLAY用来设置将图形显示到何处. 直接登陆图形界面或者登陆命令行界面后使用startx启动图形, DISPLAY环境变量将自动设置为:0:0 <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">echo</span> <span class="variable">$DISPLAY</span></span></span><br><span class="line">:1</span><br></pre></td></tr></table></figure></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> ffmpeg -video_size 1024x768 -framerate 25 -f x11grab -i :1+100,200 output.mp4</span></span><br></pre></td></tr></table></figure><ul><li>video_size 字符串 输入采集视频的分辨率</li><li>framerate 字符串 输入采集的视频帧率</li><li>-f 指定输入设备</li><li>-i 指定输入内容（此处为显示器）+100, 200 代表从100, 200处位移</li></ul><p>使用pulse录制音频 <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> pactl list sources  <span class="comment"># 查看全部输入设备</span></span></span><br></pre></td></tr></table></figure></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> ffmpeg -f pulse -i default pulse.wav</span></span><br></pre></td></tr></table></figure><p>同时录制视频和音频 <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> ffmpeg -video_size 1366x768 -framerate 25 -f x11grab -i :1 -f pulse -ac 2 -i 1 output.mkv</span></span><br></pre></td></tr></table></figure></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> ffmpeg -video_size 1024x768 -framerate 25 -f x11grab -i :1+100,200 -f alsa -ac 2 -i hw:0 output.mkv</span></span><br></pre></td></tr></table></figure><h2 id="ffmpeg直播">Ffmpeg直播</h2><h3 id="推流">推流</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> ffmpeg -re -i out.mp4 -c copy -f flv rtmp://server/live/streamName</span></span><br></pre></td></tr></table></figure><ul><li>-re 保持本地视频和流媒体服务器帧率一致</li><li>-c 不做操作，直接复制</li><li>-f 格式</li></ul><h3 id="拉流">拉流</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> ffmpeg -i rmtp://server/live/streamName -c copy dump.flv</span></span><br></pre></td></tr></table></figure><h2 id="ffmpeg封装与解封装">Ffmpeg封装与解封装</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> ffmpeg -i input.mkv -vcodec copy -acodec copy output.mp4</span></span><br></pre></td></tr></table></figure><ul><li>-i 输入文件</li><li>-vcodec copy 视频编码处理方式</li><li>-acodec copy 音频编码处理方式</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> ffmpeg -i input.mp4 -vn -acodec copy output.aac  <span class="comment"># 抽出音频</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> ffmpeg -i input.mp4 -vcodec copy -an output.h264  <span class="comment"># 抽出视频</span></span></span><br></pre></td></tr></table></figure><h3 id="提取yuv数据">提取YUV数据</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> ffmpeg -i input.mp4 -an -c:v rawvideo -pix_fmt yuv420p out.yuv</span></span><br></pre></td></tr></table></figure><ul><li>-i 输入设备</li><li>-an 不需要音频</li><li>-c:v 使用rawvideo对视频进行编码</li><li>-pix_fmt 像素格式</li></ul><p><em>播放源文件</em> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> ffplay -video_size 1366x768 out.yuv</span></span><br></pre></td></tr></table></figure></p><ul><li>-video_size 指定像素</li></ul><h3 id="提取pcm数据">提取PCM数据</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> ffmpeg -i input.mp4 -vn -ar 44100 -ac 2 -f s16le out.pcm</span></span><br></pre></td></tr></table></figure><ul><li>-i 输入设备</li><li>-vn 不需要视频</li><li>-ar 44100 -a 音频 read 音频采样率44.1k</li><li>-ac 2 -a 音频 c2 channel 2 双声道</li><li>-f 数据存储格式 s16le s: 有符号的</li></ul><p><em>播放源文件</em> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> ffplay -ar 44100 -ac 2 -f s16le out.pcm</span></span><br></pre></td></tr></table></figure></p><h2 id="ffmpeg滤镜">Ffmpeg滤镜</h2><h3 id="裁剪滤镜">裁剪滤镜</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> ffmpeg -i output.mkv -vf crop=in_w-400:in_h-200 -c:v libx264 -c:a copy output.mp4</span></span><br></pre></td></tr></table></figure><ul><li>-i 输入</li><li>-vf -v 视频 f 滤镜 crop 裁剪滤镜</li><li>-c:v</li><li>-c:a copy 音频直接复制</li></ul><h3 id="视频裁剪">视频裁剪</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> ffmpeg -i output.mkv -ss 00:00:00 -t 10 output.mp4</span></span><br></pre></td></tr></table></figure><ul><li>-ss 开始时间(时:分:秒) *-t 时常(秒)</li></ul><h3 id="视频合并">视频合并</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> ffmpeg -f concat -i inputs.txt output.mp4</span></span><br></pre></td></tr></table></figure><ul><li>-f concat 拼接</li><li>-i 输入文件 inputs.txt 记录全部等待拼接的文件</li><li>inputs.txt每一行为“file filename”</li><li>file 'out1.mp4'</li><li>file 'out2.mp4'</li><li>output.mp4 输出文件</li></ul><h3 id="视频转图片">视频转图片</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> ffmpeg -i output.mp4 -r 1 -f image2 image-%3d.jpeg</span></span><br></pre></td></tr></table></figure><ul><li>-i 输入文件</li><li>-r 1, r 帧率， 1 每秒一张图片</li><li>-f image2, 转成image2格式</li><li>image-%3d.jpeg 输出文件</li></ul><h3 id="图片转视频">图片转视频</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> ffmpeg -i image-%3d.jpeg output.mp4</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Ffmpeg </tag>
            
            <tag> C </tag>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Zabbix入门基础</title>
      <link href="/2018/11/16/Zabbix%E5%85%A5%E9%97%A8%E5%9F%BA%E7%A1%80/"/>
      <url>/2018/11/16/Zabbix%E5%85%A5%E9%97%A8%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<h2 id="安装">安装</h2><h3 id="服务器端">服务器端</h3><p><a href="https://www.zabbix.com/download" target="_blank" rel="noopener">官方</a></p><ol type="1"><li>根据实际情况选择数据库</li><li>根据实际情况选择操作系统</li></ol><p>汉化</p><p><img src="/wp-content/uploads/2018/11/2018-11-16-17-36-53屏幕截图.png"></p><p>错误提示</p><p><font color="#d44375">You are not able to choose some of the languages, because locales for them are not installed on the web server.</font> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 选中zh-CN UTF-8</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo dpkg-reconfigure locales</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo service apache2 restart</span></span><br></pre></td></tr></table></figure></p><h3 id="安装客户端">安装客户端</h3><p><a href="https://www.zabbix.com/documentation/3.2/manual/installation/install_from_packages/agent_installation" target="_blank" rel="noopener">官方</a></p><p><a href="https://tecadmin.net/install-zabbix-agent-on-centos-rhel/" target="_blank" rel="noopener">参考</a></p><h3 id="交换分区错误问题">交换分区错误问题</h3><p><font color="#d44375">Lack of free swap space</font></p><p>现在的云主机默认没有交换分区 Configuration-&gt;Templates-&gt;Template OS Linux-&gt;Triggers-&gt;Lack of free swap space on {HOST.NAME}-&gt;Expression</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;Template OS Linux:system.swap.size[,pfree].last(0)&#125;&lt;50改成</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;Template OS Linux:system.swap.size[,pfree].last(0)&#125;&lt;50 and &#123;Template OS Linux:system.swap.size[,free].last(0)&#125;&lt;&gt;0</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Zabbix </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>OpenResty入门基础</title>
      <link href="/2018/11/14/OpenResty%E5%85%A5%E9%97%A8%E5%9F%BA%E7%A1%80/"/>
      <url>/2018/11/14/OpenResty%E5%85%A5%E9%97%A8%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<h2 id="安装">安装</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 安装</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo yum install pcre-devel openssl-devel gcc curl</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> wget https://openresty.org/download/openresty-1.13.6.2.tar.gz</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> tar -xzvf openresty-1.13.6.2.tar.gz</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> openresty-1.13.6.2</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 默认安装到/usr/<span class="built_in">local</span>/openresty, 可以指定./configure --prefix=/your/path/openresty设置</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 默认安装的组件https://openresty.org/cn/components.html</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> ./configure --with-luajit \</span></span><br><span class="line">            --without-http_redis2_module \</span><br><span class="line">            --with-http_iconv_module \</span><br><span class="line">            --with-http_postgres_module</span><br><span class="line"><span class="meta">$</span><span class="bash"> make &amp;&amp; sudo make install</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 创建软链接</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> ln -s /usr/<span class="built_in">local</span>/openresty/nginx/sbin/nginx /usr/<span class="built_in">local</span>/nginx</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 启动/重启/停止</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> nginx </span></span><br><span class="line"><span class="meta">$</span><span class="bash"> nginx -s reload</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> nginx -s stop</span></span><br></pre></td></tr></table></figure><h2 id="配置">配置</h2><blockquote><p>openResty的Nginx和普通Nginx配置一致</p></blockquote><h2 id="常见错误">常见错误</h2><h3 id="nginx与用户组权限问题"><font color="#d44375">Nginx与用户组权限问题</font></h3><p>当前用户hanchang, nginx用户nginx <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/nginx/nginx.conf</span><br><span class="line">user hanchang;</span><br><span class="line"></span><br><span class="line">vim /etc/php-fpm.d/www.conf </span><br><span class="line">user = hanchang</span><br><span class="line">group = nginx</span><br><span class="line">listen.owner = hanchang</span><br><span class="line">listen.group = nginx</span><br><span class="line">listen.mode = 0660</span><br></pre></td></tr></table></figure></p><p>将当前用户加入nginx用户组 <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo usermod -a -G nginx hanchang</span></span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> OpenResty </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue.js入门基础</title>
      <link href="/2018/09/26/Vue.js%E5%85%A5%E9%97%A8%E5%9F%BA%E7%A1%80/"/>
      <url>/2018/09/26/Vue.js%E5%85%A5%E9%97%A8%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<h2 id="安装">安装</h2><h3 id="安装node">安装Node</h3><a href="/2019/07/26/Node入门基础/" title="Node入门基础">Node入门基础</a><h3 id="安装vue-cli">安装vue-cli</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> cnpm install -g @vue/cli</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> vue --version</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> vue add eslint</span></span><br></pre></td></tr></table></figure><h2 id="使用">使用</h2><h3 id="创建项目">创建项目</h3><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ </span>vue create hello-world</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Sentry入门基础</title>
      <link href="/2018/09/08/Sentry%E5%85%A5%E9%97%A8%E5%9F%BA%E7%A1%80/"/>
      <url>/2018/09/08/Sentry%E5%85%A5%E9%97%A8%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<h2 id="安装">安装</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 先安装docker  https://docs.docker.com/install/linux/docker-ce/centos/<span class="comment">#install-docker-ce</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 后安装sentry   https://github.com/getsentry/onpremise</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> mkdir sentry</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> sentry</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> mkdir -p data/&#123;sentry,postgres&#125;</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git <span class="built_in">clone</span> https://github.com/getsentry/onpremise</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> onpremise</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> docker-compose run --rm web config generate-secret-key <span class="comment"># 创建一个secret key并配置到docker-compose.yml中的SENTRY_SECRET_KEY.</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> docker-compose run --rm web upgrade <span class="comment"># 创建数据库</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> docker-compose up -d  <span class="comment"># 后台执行</span></span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CentOs </tag>
            
            <tag> Sentry </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RabbitMq入门基础</title>
      <link href="/2018/09/08/RabbitMq%E5%85%A5%E9%97%A8%E5%9F%BA%E7%A1%80/"/>
      <url>/2018/09/08/RabbitMq%E5%85%A5%E9%97%A8%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<h2 id="安装">安装</h2><h3 id="安装erlang">安装Erlang</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 安装 Erlang</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> yum -y install epel-release</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> yum -y update</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> yum -y install erlang socat</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看是否安装成功</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> erl -version</span></span><br></pre></td></tr></table></figure><h3 id="安装rabbitmq">安装RabbitMq</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 安装rabbitMQ3.6版本</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> wget https://www.rabbitmq.com/releases/rabbitmq-server/v3.6.10/rabbitmq-server-3.6.10-1.el7.noarch.rpm</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> rpm --import https://www.rabbitmq.com/rabbitmq-release-signing-key.asc</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> rpm -Uvh rabbitmq-server-3.6.10-1.el7.noarch.rpm</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 启用,开机启动,状态</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> systemctl start rabbitmq-server</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> systemctl <span class="built_in">enable</span> rabbitmq-server</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> systemctl status rabbitmq-server</span></span><br></pre></td></tr></table></figure><h3 id="图形界面">图形界面</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 启动图形界面管理</span></span><br><span class="line">rabbitmq-plugins enable rabbitmq_management</span><br><span class="line">chown -R rabbitmq:rabbitmq /var/lib/rabbitmq/</span><br><span class="line">rabbitmqctl add_user admin StrongPassword  # 踩坑:密码不要以';'结尾</span><br><span class="line">rabbitmqctl set_user_tags admin administrator</span><br><span class="line">rabbitmqctl set_permissions -p / admin ".*" ".*" ".*"</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 自定义配置文件</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 在rabbitmq 3.7.0 之前，rabbitmq.conf 使用了Erlang语法配置格式，新的版本使用了sysctl 格式.</span></span><br><span class="line">cd /etc/rabbitmq</span><br><span class="line">touch rabbitmq.conf</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 访问图形界面</span></span><br><span class="line">http://Your_Server_IP:15672/</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> api文档</span></span><br><span class="line">http://Your_Server_IP:15672/api</span><br></pre></td></tr></table></figure><h2 id="常见错误处理">常见错误处理</h2><h3 id="文件大小限制">文件大小限制</h3><p><font color="#d44375">Recovering 69477 queues, available file handles: 924. Please increase max open file handles limit to at least 69477!</font></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 打开文件大小限制</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> https://stackoverflow.com/questions/46240032/rabbitmq-file-descriptor-limit</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo systemctl edit rabbitmq-server.service <span class="comment"># 找到systemd service 地址</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo vim /etc/systemd/system/rabbitmq-server.service.d/limits.conf</span></span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">LimitNOFILE=300000</span><br></pre></td></tr></table></figure><h3 id="mnesia-is-overloaded">Mnesia is overloaded</h3><p><font color="#d44375">Mnesia is overloaded: {dump_log,write_threshold}</font></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 编辑配置文件</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo vim /etc/rabbitmq/rabbitmq.config</span></span><br><span class="line">[</span><br><span class="line">    &#123;mnesia, [&#123;dump_log_write_threshold, 5000&#125;]&#125;,</span><br><span class="line">    &#123;rabbit, [&#123;tcp_listeners, [5673]&#125;]&#125;</span><br><span class="line">].</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> RabbitMq </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PostgresSql入门基础</title>
      <link href="/2018/08/07/PostgresSql%E5%85%A5%E9%97%A8%E5%9F%BA%E7%A1%80/"/>
      <url>/2018/08/07/PostgresSql%E5%85%A5%E9%97%A8%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<h2 id="源码安装">源码安装</h2><h3 id="安装postgressql">安装PostgresSql</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> git <span class="built_in">clone</span> https://aur.archlinux.org/postgresql-9.6.git</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> postgresql-9.6-git</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> less PKGBUILD  <span class="comment"># 查看</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> makepkg -si  <span class="comment"># 安装</span></span></span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 初始化数据</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo su postgres -l </span></span><br><span class="line"><span class="meta">$</span><span class="bash"> initdb --locale <span class="variable">$LANG</span> -E UTF8 -D <span class="string">'/var/lib/postgres/data/'</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">exit</span></span></span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 启动及开机启动</span></span><br><span class="line">sudo systemctl start postgresql.service </span><br><span class="line">sudo systemctl enable postgresql.service</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 登录</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo su postgres -l</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> psql</span></span><br></pre></td></tr></table></figure><h3 id="安装postgis">安装postgis</h3><p>1, 安装proj4.9</p><p>下载源码 <a href="https://proj.org/download.html" target="_blank" rel="noopener">地址</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">tar xfz proj-4.9.3.tar.gz</span><br><span class="line">cd proj-4.9.3</span><br><span class="line">./configure</span><br><span class="line">make</span><br><span class="line">sudo make install</span><br><span class="line"><span class="meta">#</span><span class="bash"> 安装postgis时，如果没有找到库则需要复制动态库</span></span><br><span class="line">sudo ln -s /usr/local/lib/libproj.so.12 /usr/lib/libproj.so.12</span><br></pre></td></tr></table></figure><p>2, 安装postgis2.5.2</p><p>下载源码 <a href="https://postgis.net/source/" target="_blank" rel="noopener">地址</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">wget http://download.osgeo.org/postgis/source/postgis-2.5.2.tar.gz</span><br><span class="line">tar xfz postgis-2.5.2.tar.gz</span><br><span class="line">cd postgis-2.5.2</span><br><span class="line">./configure</span><br><span class="line">make</span><br><span class="line">sudo make install</span><br><span class="line">sudo ldconfig</span><br><span class="line">sudo make comments-install</span><br></pre></td></tr></table></figure><h2 id="ubuntucentos安装">Ubuntu/CentOs安装</h2><h3 id="安装postgressql-1">安装PostgresSql</h3><p><a href="https://www.postgresql.org/download/linux/ubuntu/" target="_blank" rel="noopener">ubuntu安装</a></p><p><a href="https://www.postgresql.org/download/linux/redhat/" target="_blank" rel="noopener">centos安装</a></p><p>CentOs7.2 安装PostgresSql9.6 <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 添加RPM</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> yum install https://download.postgresql.org/pub/repos/yum/9.6/redhat/rhel-7-x86_64/pgdg-centos96-9.6-3.noarch.rpm</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 安装PostgreSQL 9.6</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> postgresql96-server 数据库核心服务端</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> postgresql96-contrib 附加第三方扩展</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> postgresql96-devel C语言开发Header头文件和库</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> yum install postgresql96-server postgresql96-contrib postgresql96-devel</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 验证是否安装成功</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> rpm -aq| grep postgres</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 设置目录（可省略）</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> /mnt</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo mkdir vdb1</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo chown -R postgres:postgres vdb1</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo chmod 700 vdb1</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> vi /usr/lib/systemd/system/postgresql-9.6.service</span></span><br><span class="line"></span><br><span class="line">Environment=PGDATA=/mnt/vdb1/ 修改为自己的新的数据路径</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 初始化数据库</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo /usr/pgsql-9.6/bin/postgresql96-setup initdb</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 开启服务</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo service postgresql-9.6 start 或者 systemctl start postgresql-9.6.service</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 开机启动</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo sudo chkconfig postgresql-9.6 on 或者 systemctl <span class="built_in">enable</span> postgresql-9.6.service</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看版本号</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> /usr/pgsql-9.6/bin/psql --version</span></span><br></pre></td></tr></table></figure></p><h3 id="安装postgis2">安装postgis2</h3><p>CentOs7.2 <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo yum install postgis2_96  <span class="comment"># 96和安装的postgresql一致</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo yum install ogr_fdw96  <span class="comment"># 安装ogrfdw</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo yum install pgrouting_96 <span class="comment"># 安装pgrouting</span></span></span><br></pre></td></tr></table></figure></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 用管理员登录postgerysql</span></span><br><span class="line">Enable PostGIS (includes raster)</span><br><span class="line"><span class="keyword">CREATE</span> EXTENSION postgis;</span><br><span class="line"><span class="comment">-- Enable Topology</span></span><br><span class="line"><span class="keyword">CREATE</span> EXTENSION postgis_topology;</span><br><span class="line"><span class="comment">-- Enable PostGIS Advanced 3D</span></span><br><span class="line"><span class="comment">-- and other geoprocessing algorithms</span></span><br><span class="line"><span class="comment">-- sfcgal not available with all distributions</span></span><br><span class="line"><span class="keyword">CREATE</span> EXTENSION postgis_sfcgal;</span><br><span class="line"><span class="comment">-- fuzzy matching needed for Tiger</span></span><br><span class="line"><span class="keyword">CREATE</span> EXTENSION fuzzystrmatch;</span><br><span class="line"><span class="comment">-- rule based standardizer</span></span><br><span class="line"><span class="keyword">CREATE</span> EXTENSION address_standardizer;</span><br><span class="line"><span class="comment">-- example rule data set</span></span><br><span class="line"><span class="keyword">CREATE</span> EXTENSION address_standardizer_data_us;</span><br><span class="line"><span class="comment">-- Enable US Tiger Geocoder</span></span><br><span class="line"><span class="keyword">CREATE</span> EXTENSION postgis_tiger_geocoder;</span><br><span class="line"><span class="comment"># 验证是否安装成功</span></span><br><span class="line">postgis_full_version();</span><br></pre></td></tr></table></figure><h3 id="安装postgresql中文全文搜索zhparser">安装postgresql中文全文搜索zhparser</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> yum install bzip2  <span class="comment"># 安装解压包</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 安装SCWS中文分词 https://github.com/hightman/scws</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> wget http://www.xunsearch.com/scws/down/scws-1.2.3.tar.bz2</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> tar -jxvf scws-1.2.3.tar.bz2 </span></span><br><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> scws-1.2.3</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> ./configure</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> make install</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 测试</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> scws <span class="string">'请问怎么自己动手做西红柿蛋炒饭'</span> -c utf-8</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 安装zhparser</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git <span class="built_in">clone</span> https://github.com/amutu/zhparser.git</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> zhparser</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:/usr/pgsql-9.6/bin/</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> cmake &amp;&amp; make install</span></span><br></pre></td></tr></table></figure><h2 id="配置">配置</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 配置文件</span><br><span class="line"> /var/lib/pgsql/9.6/data/postgresql.conf 通用设置</span><br><span class="line"> /var/lib/pgsql/9.6/data/pg_hba.conf  控制访问安全</span><br><span class="line"> /var/lib/pgsql/9.6/data/pg_ident.conf 配合pg_hba.conf使用</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 允许远程访问</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> vi /var/lib/pgsql/9.6/data/postgresql.conf 或者  vi /mnt/vdb1/postgresql.conf(创建了目录)</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">#listen_addresses = &apos;localhost&apos;</span><br><span class="line">listen_addresses=&apos;*&apos;</span><br><span class="line">```     </span><br><span class="line">```shell</span><br><span class="line"># 配置权限</span><br><span class="line">vim pg_hba.conf</span><br><span class="line">``` </span><br><span class="line">```text</span><br><span class="line"># 是否远程登录 数据库 用户名 ip地段 方式</span><br><span class="line"> # 允许doneself用户远程访问</span><br><span class="line"> host doneself doneself 127.0.0.1/32 md5</span><br><span class="line"> # 允许管理员密码登录</span><br><span class="line"> local all postgres  md5</span><br><span class="line"> # 如果不知道怎么配置， 将全部登录方式改成md5</span><br></pre></td></tr></table></figure><h2 id="基础命令">基础命令</h2><h3 id="进入命令行">进入命令行</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo su postgres</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> psql <span class="comment"># 进入命令行模式</span></span></span><br></pre></td></tr></table></figure><h3 id="用户管理">用户管理</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建用户</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">USER</span> dbuser <span class="keyword">WITH</span> <span class="keyword">PASSWORD</span> <span class="string">'password'</span>;</span><br><span class="line"><span class="comment"># 修改密码</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">USER</span> dbuser <span class="keyword">WITH</span> <span class="keyword">PASSWORD</span> <span class="string">'newpassword'</span>;</span><br><span class="line"><span class="comment"># 允许用户创建数据库</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">USER</span> doneself CREATEDB;</span><br><span class="line"><span class="comment"># 设置为超级管理员</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">ROLE</span> doneself SUPERUSER;</span><br></pre></td></tr></table></figure><h3 id="数据库管理">数据库管理</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建数据库</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">DATABASE</span> exampledb owner=dbuser  <span class="keyword">template</span>= template1  <span class="keyword">ENCODING</span> = <span class="string">'UTF8'</span>;</span><br><span class="line"><span class="comment"># 赋予权限</span></span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">ALL</span> <span class="keyword">PRIVILEGES</span> <span class="keyword">ON</span> <span class="keyword">DATABASE</span> exampledb <span class="keyword">to</span> dbuser;</span><br><span class="line"><span class="comment"># 选择数据库</span></span><br><span class="line">\c database</span><br><span class="line"><span class="comment"># 查看当前数据库所有表</span></span><br><span class="line">\dt</span><br><span class="line">\d 数据库 —— 得到所有表的名字</span><br><span class="line">\d 表名 —— 得到表结构</span><br><span class="line">\q 退出</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据库 </tag>
            
            <tag> PostgresSql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java入门基础</title>
      <link href="/2018/01/31/Java%E5%85%A5%E9%97%A8%E5%9F%BA%E7%A1%80/"/>
      <url>/2018/01/31/Java%E5%85%A5%E9%97%A8%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<h2 id="java开发环境">Java开发环境</h2><h3 id="安装java">安装Java</h3><p>下载源码</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 从官方网站下载javaLTS版本源码并复制到当前目录</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 下载地址: https://www.oracle.com/technetwork/java/javase/downloads/index.html</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo mkdir /usr/java</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo <span class="built_in">cd</span> /usr/java</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo cp -rf ~/Download/jdk-11.0.3_linux-x64_bin.tar.gz .</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo tar -zxvf jdk-11.0.3_linux-x64_bin.tar.gz &amp;&amp; rm  jdk-11.0.3_linux-x64_bin.tar.gz</span></span><br></pre></td></tr></table></figure><p>设置环境变量</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo vi /etc/profile</span></span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"><span class="built_in">set</span> java environment</span></span><br><span class="line">JAVA_HOME=/usr/java/jdk-11.0.3</span><br><span class="line">JRE_HOME=/usr/java/jdk-11.0.3/jre  # 如果安装包中没有jre文件夹，则改成和JAVA_HOME一致</span><br><span class="line">CLASS_PATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar:$JRE_HOME/lib</span><br><span class="line">PATH=$PATH:$JAVA_HOME/bin:$JRE_HOME/bin</span><br><span class="line">export JAVA_HOME JRE_HOME CLASS_PATH PATH</span><br></pre></td></tr></table></figure><p>验证</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">which</span> java</span></span><br><span class="line">/usr/java/jdk-11.0.3/bin/java</span><br><span class="line"></span><br><span class="line"><span class="meta">$</span><span class="bash"> java -version</span></span><br><span class="line">java version "11.0.3" 2019-04-16 LTS</span><br><span class="line">Java(TM) SE Runtime Environment 18.9 (build 11.0.3+12-LTS)                                           </span><br><span class="line">Java HotSpot(TM) 64-Bit Server VM 18.9 (build 11.0.3+12-LTS, mixed mode)</span><br></pre></td></tr></table></figure><h3 id="安装tomcat">安装Tomcat</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> /home/zhc/java</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> https://tomcat.apache.org/download-90.cgi</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> wget http://mirror.bit.edu.cn/apache/tomcat/tomcat-9/v9.0.22/bin/apache-tomcat-9.0.22.tar.gz</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> tar -xzvf apache-tomcat-9.0.22.tar.gz</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> mv apache-tomcat-9.0.22 tomcat</span></span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 启动 http://127.0.0.1:8080</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo ./tomcat/bin/startup.sh</span></span><br><span class="line">Using CATALINA_BASE:   /home/zhc/work/java/tomcat</span><br><span class="line">Using CATALINA_HOME:   /home/zhc/work/java/tomcat</span><br><span class="line">Using CATALINA_TMPDIR: /home/zhc/work/java/tomcat/temp</span><br><span class="line">Using JRE_HOME:        /usr/java/jdk-11.0.4</span><br><span class="line">Using CLASSPATH:       /home/zhc/work/java/tomcat/bin/bootstrap.jar:/home/zhc/work/java/tomcat/bin/tomcat-juli.jar</span><br><span class="line">Tomcat started.</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 关闭</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo ./tomcat-9/bin/shutdown.sh</span></span><br></pre></td></tr></table></figure><p><a href="https://www.vultr.com/docs/how-to-install-apache-tomcat-8-on-centos-7" target="_blank" rel="noopener">centos设置为系统启动</a></p><h3 id="idea配置tomcat服务">Idea配置tomcat服务</h3><ul><li>修改虚拟路径 <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 以下两个配置需要保持一致</span></span><br><span class="line">RUN/DEBUG Configurations -&gt; Server -&gt; URL http://localhost:8080/&#123;ProjectName&#125;_war_exploded/ </span><br><span class="line">RUN/DEBUG Configurations -&gt; Deployment -&gt; Application content /&#123;ProjectName&#125;_war_exploded</span><br></pre></td></tr></table></figure></li></ul><h3 id="安装maven">安装Maven</h3><p><a href="/2019/08/16/Java开发Maven构建工具入门基础/" title="Java开发Maven构建工具入门基础">Java开发Maven构建工具入门基础</a></p><h3 id="安装gradle">安装Gradle</h3><p><a href="/2019/08/16/Java开发Gradle构建工具入门基础/" title="Java开发Gradle构建工具入门基础">Java开发Gradle构建工具入门基础</a></p><h3 id="安装commons-logging">安装Commons-logging</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 从官网下载二进制文件包</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> http://commons.apache.org/proper/commons-logging/download_logging.cgi</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> wget http://mirrors.tuna.tsinghua.edu.cn/apache//commons/logging/binaries/commons-logging-1.2-bin.tar.gz</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> tar -xzvf commons-logging-1.2-bin.tar.gz</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo mv commons-logging-1.2 /usr/java_jar/</span></span><br></pre></td></tr></table></figure><h3 id="使用sdkman管理sdk">使用sdkman管理sdk</h3><p><a href="https://sdkman.io/install" target="_blank" rel="noopener">sdkman</a></p><h2 id="打包">打包</h2><h3 id="创建jar包">创建jar包</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 编写应用程序</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo vim com/zhuohc/jar/HelloWorld.java</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.zhuohc.jar;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloWorld</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"hello world!"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> javac com/zhuohc/jar/HelloWorld.java  <span class="comment"># 编译</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> jar cvf hello.jar com/zhuohc/jar/HelloWorld.class  <span class="comment"># 打包 参数c: 创建， 参数v: 输出具体文件信息， 参数f: 指定输出文件名</span></span></span><br><span class="line">已添加清单</span><br><span class="line">正在添加: com/zhuohc/jar/HelloWorld.class(输入 = 441) (输出 = 302)(压缩了 31%)</span><br></pre></td></tr></table></figure><h3 id="查看jar包信息">查看jar包信息</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> jar tvf hello.jar  <span class="comment"># 查看 参数t： 查看</span></span></span><br><span class="line">0 Fri Aug 16 14:21:06 CST 2019 META-INF/</span><br><span class="line">66 Fri Aug 16 14:21:06 CST 2019 META-INF/MANIFEST.MF</span><br><span class="line">441 Fri Aug 16 14:20:20 CST 2019 com/zhuohc/jar/HelloWorld.class</span><br></pre></td></tr></table></figure><h3 id="提取jar包信息">提取jar包信息</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> jar xvf hello.jar <span class="comment"># 解压 参数x： 提取extract</span></span></span><br><span class="line">已创建: META-INF/</span><br><span class="line">已解压: META-INF/MANIFEST.MF</span><br><span class="line">已解压: com/zhuohc/jar/HelloWorld.class</span><br></pre></td></tr></table></figure><h3 id="jar包清单文件">jar包清单文件</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">创建清单文件</span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo vim Manifest.txt</span></span><br></pre></td></tr></table></figure><p>Manifest.txt指定程序入口 警告： 文本文件必须以新行或回车符结束。如果最后一行不以新行或回车结束，则不会正确解析.</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> Manifest.txt</span></span><br><span class="line">Main-Class: com.zhuohc.jar.HelloWorld</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 重新打包</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> jar cvfm hello.jar Manifest.txt com/zhuohc/jar/HelloWorld.class  <span class="comment"># 参数m: 指定清单文件地址</span></span></span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 执行jar文件</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> java -jar hello.jar</span></span><br><span class="line">hello world!</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> Manifest.txt 其他信息</span></span><br><span class="line">Name: com/zhuohc/jar</span><br><span class="line">Specification-Title: Java Utility Classes</span><br><span class="line">Specification-Version: 1.2</span><br><span class="line">Specification-Vendor: Example Tech, Inc.</span><br><span class="line">Implementation-Title: com.zhuohc.jar</span><br><span class="line">Implementation-Version: build57</span><br><span class="line">Implementation-Vendor: Example Tech, Inc.</span><br><span class="line">Main-Class: com.zhuohc.jar.HelloWorld</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>微信本地开发及线上环境搭建</title>
      <link href="/2018/01/29/%E5%BE%AE%E4%BF%A1%E6%9C%AC%E5%9C%B0%E5%BC%80%E5%8F%91%E5%8F%8A%E7%BA%BF%E4%B8%8A%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
      <url>/2018/01/29/%E5%BE%AE%E4%BF%A1%E6%9C%AC%E5%9C%B0%E5%BC%80%E5%8F%91%E5%8F%8A%E7%BA%BF%E4%B8%8A%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<h1 id="微信开发者中心">微信开发者中心</h1><p>https://open.weixin.qq.com 1. 注册线上账号，开发者资质认证 2. 注册本地账号，开发者资质认证</p><h1 id="网站应用">网站应用</h1><ol type="1"><li>添加相关信息，并盖章认证，添加授权回调域example.com</li><li>认证通过后获取AppId, AppSecret</li></ol><h1 id="公众号应用">公众号应用</h1><h1 id="本地环境配置">本地环境配置</h1><ol type="1"><li>将回调的url www.example.com 添加到host文件中</li></ol>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> 运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 微信 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Redis入门基础</title>
      <link href="/2018/01/11/Redis%E5%85%A5%E9%97%A8%E5%9F%BA%E7%A1%80/"/>
      <url>/2018/01/11/Redis%E5%85%A5%E9%97%A8%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<h2 id="介绍">介绍</h2><blockquote><p>REmote DIctionary Server(Redis) 是一个由Salvatore Sanfilippo写的key-value存储系统。 Redis是一个开源的使用ANSI C语言编写、遵守BSD协议、支持网络、可基于内存亦可持久化的日志型、Key-Value数据库，并提供多种语言的API。 它通常被称为数据结构服务器，因为值（value）可以是 字符串(String), 哈希(Map), 列表(list), 集合(sets) 和 有序集合(sorted sets)等类型。</p></blockquote><h2 id="安装与配置">安装与配置</h2><h3 id="安装">安装</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> ubuntu</span></span><br><span class="line"><span class="meta">$</span><span class="bash">sudo apt-get update</span></span><br><span class="line"><span class="meta">$</span><span class="bash">sudo apt-get install redis-server</span></span><br><span class="line"><span class="meta">$</span><span class="bash">redis-cli</span></span><br></pre></td></tr></table></figure><h3 id="配置">配置</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> ubuntu  <span class="variable">$sudo</span> vim /etc/redis.conf</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 设置为守护进程</span></span><br><span class="line">protected-mode yes</span><br><span class="line"><span class="meta">#</span><span class="bash"> 设置密码</span></span><br><span class="line">requirepass redispassword</span><br><span class="line"><span class="meta">#</span><span class="bash"> port</span></span><br><span class="line">port 6379</span><br><span class="line"><span class="meta">#</span><span class="bash"> <span class="built_in">bind</span> 127.0.0.1</span></span><br><span class="line">bing 0.0.0.0 # 允许远程访问</span><br></pre></td></tr></table></figure><h3 id="客户端远程登录">客户端远程登录</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redis-cli -h 127.0.0.1 -p 6379 -a redispassword</span><br></pre></td></tr></table></figure><h3 id="redis客户端">redis客户端</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> redis-commander，基于nodejs</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> npm install -g redis-commander</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> redis-commander</span></span><br></pre></td></tr></table></figure><h2 id="命令">命令</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> 127.0.0.1:6379&gt; del name <span class="comment"># 删除数据</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> 127.0.0.1:6379&gt; <span class="built_in">type</span> name <span class="comment"># 查看数据类型</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> 127.0.0.1:6379&gt; rename name <span class="comment"># 重命名</span></span></span><br></pre></td></tr></table></figure><h2 id="数据结构">数据结构</h2><h3 id="字符串string">字符串string</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> 127.0.0.1:6379&gt;  <span class="built_in">set</span> string-name value</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> 127.0.0.1:6379&gt; get string-name</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> 127.0.0.1:6379&gt;  del string-name</span></span><br></pre></td></tr></table></figure><h3 id="列表list">列表list</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> 127.0.0.1:6379&gt; lpush list-name value1 value2 value3 ... <span class="comment"># 左侧插入列表值</span></span></span><br><span class="line">(integer) 3</span><br><span class="line"><span class="meta">$</span><span class="bash"> 127.0.0.1:6379&gt; rpush list-name value4 value5 value6... <span class="comment"># 右侧插入列表值</span></span></span><br><span class="line">(integer) 6</span><br><span class="line"><span class="meta">$</span><span class="bash"> 127.0.0.1:6379&gt;  lindex list-name 1 <span class="comment"># 获取第1个的值</span></span></span><br><span class="line">"value2"</span><br><span class="line"><span class="meta">$</span><span class="bash"> 127.0.0.1:6379&gt;  lrange list-name 1 2 <span class="comment"># 获取从第1位置到2位置的列表值</span></span></span><br><span class="line">1) "value2"</span><br><span class="line">2) "value1"</span><br><span class="line"><span class="meta">$</span><span class="bash"> 127.0.0.1:6379&gt;  lpop list-name <span class="comment"># 弹出最左边值</span></span></span><br><span class="line">"value3"</span><br><span class="line"><span class="meta">$</span><span class="bash"> 127.0.0.1:6379&gt; rpop list-name <span class="comment"># 弹出最右边值</span></span></span><br><span class="line">"value6"</span><br></pre></td></tr></table></figure><h3 id="集合set">集合set</h3><p><strong>无序</strong> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> 127.0.0.1:6379&gt;  sadd <span class="built_in">set</span>-name value1 value2 value3 <span class="comment"># 设置无序列表值</span></span></span><br><span class="line">(integer) 3</span><br><span class="line"><span class="meta">$</span><span class="bash"> 127.0.0.1:6379&gt; smembers <span class="built_in">set</span>-name  <span class="comment"># 查看所有值</span></span></span><br><span class="line">1) "value3"</span><br><span class="line">2) "value2"</span><br><span class="line">3) "value1"</span><br><span class="line"><span class="meta">$</span><span class="bash"> 127.0.0.1:6379&gt; srem <span class="built_in">set</span>-name value1 <span class="comment"># 删除值</span></span></span><br><span class="line">(integer) 1</span><br><span class="line"><span class="meta">$</span><span class="bash"> 127.0.0.1:6379&gt; sismember <span class="built_in">set</span>-name value2 <span class="comment"># 查看是否在无序列表内</span></span></span><br><span class="line">(integer) 1</span><br></pre></td></tr></table></figure></p><h3 id="散列值hash">散列值hash</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> 127.0.0.1:6379&gt; HSET <span class="built_in">hash</span>-name key1 value1 <span class="comment">#设置键值对</span></span></span><br><span class="line">(integer) 1</span><br><span class="line"><span class="meta">$</span><span class="bash"> 127.0.0.1:6379&gt; HGET <span class="built_in">hash</span>-name key1 <span class="comment"># 获取指定键的值</span></span></span><br><span class="line">"value1"</span><br><span class="line"><span class="meta">$</span><span class="bash"> 127.0.0.1:6379&gt; HSET <span class="built_in">hash</span>-name key1 value2 <span class="comment"># 更新键的值</span></span></span><br><span class="line">(integer) 0</span><br><span class="line"><span class="meta">$</span><span class="bash"> 127.0.0.1:6379&gt; HGET <span class="built_in">hash</span>-name key1 </span></span><br><span class="line">"value2"</span><br><span class="line"><span class="meta">$</span><span class="bash"> 127.0.0.1:6379&gt; HSET <span class="built_in">hash</span>-name key2 value2</span></span><br><span class="line">(integer) 1</span><br><span class="line"><span class="meta">$</span><span class="bash"> 127.0.0.1:6379&gt; HGETALL <span class="built_in">hash</span>-name <span class="comment"># 查找所有键值对</span></span></span><br><span class="line">1) "key1"</span><br><span class="line">2) "value2"</span><br><span class="line">3) "key2"</span><br><span class="line">4) "value2"</span><br><span class="line"><span class="meta">$</span><span class="bash"> 127.0.0.1:6379&gt; HDEL <span class="built_in">hash</span>-name key1 <span class="comment"># 删除hash键值对</span></span></span><br><span class="line">(integer) 1</span><br></pre></td></tr></table></figure><h3 id="有序集合zset">有序集合zset</h3><p><strong>成员+分值，分值必须是浮点数，通过浮点数进行排序</strong> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> 127.0.0.1:6379&gt; zadd zset-name 100 member1 <span class="comment"># 添加键值对</span></span></span><br><span class="line">(integer) 1</span><br><span class="line"><span class="meta">$</span><span class="bash"> 127.0.0.1:6379&gt; zadd zset-name 202 member2</span></span><br><span class="line">(integer) 1</span><br><span class="line"><span class="meta">$</span><span class="bash"> 127.0.0.1:6379&gt; zadd zset-name 803 member3</span></span><br><span class="line">(integer) 1</span><br><span class="line"><span class="meta">$</span><span class="bash"> 127.0.0.1:6379&gt; ZRANGE zset-name 0 -1 <span class="comment"># 获取多个元素</span></span></span><br><span class="line">1) "member1"</span><br><span class="line">2) "member2"</span><br><span class="line">3) "member3"</span><br><span class="line"><span class="meta">$</span><span class="bash"> 127.0.0.1:6379&gt; ZRANGE zset-name 0 -1 withscores <span class="comment"># 获取多个元素</span></span></span><br><span class="line">1) "member1"</span><br><span class="line">2) "100"</span><br><span class="line">3) "member2"</span><br><span class="line">4) "202"</span><br><span class="line">5) "member3"</span><br><span class="line">6) "803"</span><br><span class="line"><span class="meta">$</span><span class="bash"> 127.0.0.1:6379&gt; ZRANGEBYSCORE zset-name 0 300 withscores <span class="comment"># 按score获取多个元素</span></span></span><br><span class="line">1) "member1"</span><br><span class="line">2) "100"</span><br><span class="line">3) "member2"</span><br><span class="line">4) "202"</span><br><span class="line"><span class="meta">$</span><span class="bash"> 127.0.0.1:6379&gt; ZREM zset-name member1 <span class="comment"># 移除一个元素</span></span></span><br><span class="line">(integer) 1</span><br></pre></td></tr></table></figure></p><h2 id="错误信息提示">错误信息提示</h2><h3 id="misconf-redis-is-configured-to-save-rdb-snapshots-but-is-currently-not-able-to-persist-on-disk.-commands-that-may-modify-the-data-set-are-disabled.-please-check-redis-logs-for-details-about-the-error."><font color="#d44375">MISCONF Redis is configured to save RDB snapshots, but is currently not able to persist on disk. Commands that may modify the data set are disabled. Please check Redis logs for details about the error.</font></h3><p><font color="#d44375">Redis被配置为保存数据库快照，但它目前不能持久化到硬盘。用来修改集合数据的命令不能用。请查看Redis日志的详细错误信息。</font></p><p>强制关闭Redis快照导致不能持久化。</p><p>解决方案 <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:6379&gt; config set stop-writes-on-bgsave-error no</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据库 </tag>
            
            <tag> Redis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python爬虫Scrapy框架入门基础</title>
      <link href="/2018/01/10/Python%E7%88%AC%E8%99%ABScrapy%E6%A1%86%E6%9E%B6%E5%85%A5%E9%97%A8%E5%9F%BA%E7%A1%80/"/>
      <url>/2018/01/10/Python%E7%88%AC%E8%99%ABScrapy%E6%A1%86%E6%9E%B6%E5%85%A5%E9%97%A8%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<blockquote><p>Scrapy是一个为了爬取网站数据，提取结构性数据而编写的应用框架。 可以应用在包括数据挖掘，信息处理或存储历史数据等一系列的程序中。 其最初是为了页面抓取 (更确切来说, 网络抓取 )所设计的， 也可以应用在获取API所返回的数据(例如 Amazon Associates Web Services ) 或者通用的网络爬虫。Scrapy用途广泛，可以用于数据挖掘、监测和自动化测试</p></blockquote><h2 id="组件">组件：</h2><ol type="1"><li>引擎(Scrapy): 用来处理整个系统的数据流处理, 触发事务(框架核心)</li><li>调度器(Scheduler): 用来接受引擎发过来的请求, 压入队列中, 并在引擎再次请求的时候返回. 可以想像成一个URL（抓取网页的网址或者说是链接）的优先队列, 由它来决定下一个要抓取的网址是什么, 同时去除重复的网址</li><li>下载器(Downloader): 用于下载网页内容, 并将网页内容返回给蜘蛛(Scrapy下载器是建立在twisted这个高效的异步模型上的)</li><li>爬虫(Spiders): 爬虫是主要干活的, 用于从特定的网页中提取自己需要的信息, 即所谓的实体(Item)。用户也可以从中提取出链接,让Scrapy继续抓取下一个页面</li><li>项目管道(Pipeline): 负责处理爬虫从网页中抽取的实体，主要的功能是持久化实体、验证实体的有效性、清除不需要的信息。当页面被爬虫解析后，将被发送到项目管道，并经过几个特定的次序处理数据。</li><li>下载器中间件(Downloader Middlewares): 位于Scrapy引擎和下载器之间的框架，主要是处理Scrapy引擎与下载器之间的请求及响应。</li><li>爬虫中间件(Spider Middlewares): 介于Scrapy引擎和爬虫之间的框架，主要工作是处理蜘蛛的响应输入和请求输出。</li><li>调度中间件(Scheduler Middewares): 介于Scrapy引擎和调度之间的中间件，从Scrapy引擎发送到调度的请求和响应。</li></ol><h2 id="运行流程">运行流程：</h2><p>首先，引擎从调度器中取出一个链接(URL)用于接下来的抓取 引擎把URL封装成一个请求(Request)传给下载器，下载器把资源下载下来，并封装成应答包(Response) 然后，爬虫解析Response 若是解析出实体（Item）,则交给实体管道进行进一步的处理。 若是解析出的是链接（URL）,则把URL交给Scheduler等待抓取</p><h2 id="备忘">备忘</h2><h3 id="xpath语法和基本函数">xpath语法和基本函数</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">/</span><br><span class="line">.</span><br><span class="line">..</span><br><span class="line">ELEMENT</span><br><span class="line">//ELEMENT</span><br><span class="line">*</span><br><span class="line">text</span><br><span class="line">@ALTER</span><br><span class="line">@*</span><br><span class="line">position()</span><br><span class="line">last()</span><br><span class="line">string()</span><br></pre></td></tr></table></figure><h3 id="css选择器">css选择器</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">*</span><br><span class="line">E</span><br><span class="line">E1&gt;E2</span><br><span class="line">E1+E2</span><br><span class="line">.CLASS</span><br><span class="line">#ID</span><br><span class="line">[ATTR]</span><br><span class="line">[ATTR=VALUE]</span><br><span class="line">E:nth-child(n)</span><br><span class="line">E:first-child</span><br></pre></td></tr></table></figure><h3 id="linkextractor提取链接">LinkExtractor提取链接</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">LinkExtractor参数</span><br><span class="line">allow 允许链接</span><br><span class="line">deny 拒绝链接</span><br><span class="line">allow_domains 允许域名</span><br><span class="line">deny_domains 拒绝域名</span><br><span class="line">restrict_xpaths 允许xpath链接</span><br><span class="line">restrict_css 允许css选择器链接</span><br></pre></td></tr></table></figure><h3 id="exporter导出数据">Exporter导出数据</h3><p>默认包含以下 <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">JSON, JSON LINES, CSV, XML, PICKLE, MARSHAL</span><br></pre></td></tr></table></figure></p><h3 id="模拟登录">模拟登录</h3><p>使用FromRequest ORC识别验证码:pillow, pytesseract 付费网络平台识别 人工识别:爬取登录页面的验证码图片,调用Image.show方法,肉眼识别并输入到内置的input函数中 Cookie登录: 获取浏览器的cookie值(browsercookie包), 利用BrowserCookiesMiddleware将获取的cookie值添加到CookieJar中</p><h3 id="动态页面抓取">动态页面抓取</h3><p>Splash是Scrapy官方推荐的javascript渲染引擎, Webkit无界面浏览器 <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 安装</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo apt-get install docker</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo docker pull scrapinghub/splash</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo docker run -p 8050:8050 -p 8051:8051 scrapinghub/splash</span></span><br></pre></td></tr></table></figure></p><p>splash常见服务端点 http://localhost:8050/render.html GET/POST 返回html 参数: url, timeout, proxy, wait, images, js_source http://localhost:8050/excute 传递模拟的动作给splash,例如等待页面渲染，执行代码，等等</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 安装</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> pip install scrapy-splash</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">setting.py</span><br><span class="line"><span class="comment"># splash服务器地址</span></span><br><span class="line">SPLASH_URL = <span class="string">'http://localhost:8050'</span></span><br><span class="line"><span class="comment"># 开启splash的两个下载中间件并调整HttpCompressionMiddleware的次序</span></span><br><span class="line">DOWNLOADER_MIDDLEWARES = &#123;</span><br><span class="line">    <span class="string">'scrapy_splash.SplashCookiesMiddleware'</span>: <span class="number">723</span>,</span><br><span class="line">        <span class="string">'scrapy_splash.SplashMiddleware'</span>: <span class="number">725</span>,</span><br><span class="line">        <span class="string">'scrapy.downloadermiddlewares.httpcompression.HttpCompressionMiddleware'</span>: <span class="number">810</span>,</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment"># 过滤去重函数</span></span><br><span class="line">DUPEFILTER_CLASS = <span class="string">'scrapy_splash.SplashAwareDupeFilter'</span>,</span><br><span class="line"><span class="comment"># 用户支持cahce_args</span></span><br><span class="line">SPIDER_MIDDLEWARES = &#123;</span><br><span class="line">  <span class="string">'scrapy_splash.SplashDeduplicateArgsMiddleware'</span>: <span class="number">100</span>,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="分布式爬取">分布式爬取</h2><p>使用scrapy-redis <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 安装</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> pip install scrapy</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> pip install scrapy-redis</span></span><br></pre></td></tr></table></figure></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在配置文件setting.py中添加scrapy-redis相关信息</span></span><br><span class="line"><span class="comment"># redis服务器</span></span><br><span class="line">REDIS_URL = <span class="string">'redis://127.0.0.1:6379'</span></span><br><span class="line"><span class="comment"># 使用scrapy_redis调度器替代原生调度器</span></span><br><span class="line">SCHEDULER = <span class="string">'scrapy_redis.scheduler.Scheduler'</span></span><br><span class="line"><span class="comment"># 使用scrapy_redis的RFPDupeFilter作为去重过滤器</span></span><br><span class="line">DUPEFILTER_CLASS = <span class="string">'scrapy_redis.dupefilter.RFPDupeFilter'</span></span><br><span class="line"><span class="comment"># 将爬取的数据存储到redis中</span></span><br><span class="line">ITEM_PIPELINES = &#123;</span><br><span class="line">    <span class="string">'scrapy_redis.pipelines.RedisPipeline'</span>: <span class="number">300</span>,</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment"># 爬虫停止后,保留/清除Reids中的请求队列以及去重集合</span></span><br><span class="line">SCHEDULER_PERSIST = <span class="literal">False</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 修改爬虫spider.py</span></span><br><span class="line"><span class="keyword">from</span> scrapy_redis.spiders <span class="keyword">import</span> RedisSpider</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BookSpider</span><span class="params">(RedisSpider)</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 注释start_urls</span></span><br><span class="line">    <span class="comment"># start_urls = []</span></span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 手动添加start_urls</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> redis-cli -h 127.0.0.1</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> lpush books:start_urls <span class="string">'http://www.books.com/'</span></span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Scrapy </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>最新在linux/ubuntu中安装qq的办法</title>
      <link href="/2017/11/22/%E6%9C%80%E6%96%B0%E5%9C%A8linux-ubuntu%E4%B8%AD%E5%AE%89%E8%A3%85qq%E7%9A%84%E5%8A%9E%E6%B3%95/"/>
      <url>/2017/11/22/%E6%9C%80%E6%96%B0%E5%9C%A8linux-ubuntu%E4%B8%AD%E5%AE%89%E8%A3%85qq%E7%9A%84%E5%8A%9E%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<p>通过docker镜像文件的方式安装qq 1, 首先需要在主机上安装docker 2, 下载镜像文件 https://hub.docker.com/r/bestwu/qq/</p><pre><code>sudo docker pull bestwu/qq # 速度慢可以换镜像源</code></pre><p>3, 编辑启动脚本</p><pre><code>vim qq.shsudo docker run -d --name qq --device /dev/snd --net=host \-v /tmp/.X11-unix:/tmp/.X11-unix \-v /home/YOURUSERNAME/TencentFiles:/TencentFiles \ # 此处数据卷的目录填写自己的目录-e DISPLAY=unix$DISPLAY \-e XMODIFIERS=@im=fcitx \-e QT_IM_MODULE=fcitx \-e GTK_IM_MODULE=fcitx \-e AUDIO_GID=63 \-e GID=1000 \-e UID=1000 \bestwu/qq:latest # 此处版本自行选择，作者提供了im (QQ) light,latest (QQLight) office (TIM)三个版本</code></pre><p>4, 启动脚本</p><pre><code>./qq.sh</code></pre><p>5, 感谢作者提供的镜像，本镜像基于深度操作系统.</p>]]></content>
      
      
      <categories>
          
          <category> 办公 </category>
          
          <category> 运维 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Linux命令记录</title>
      <link href="/2017/11/08/Linux%E5%91%BD%E4%BB%A4%E8%AE%B0%E5%BD%95/"/>
      <url>/2017/11/08/Linux%E5%91%BD%E4%BB%A4%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<h2 id="查看文件夹大小">查看文件夹大小</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> du -h your_path --max-depth=1</span></span><br></pre></td></tr></table></figure><p><strong>参数：</strong></p><ul><li>-a或-all 为每个指定文件显示磁盘使用情况，或者为目录中每个文件显示各自磁盘使用情况。</li><li>-b或-bytes 显示目录或文件大小时，以byte为单位。</li><li>-c或–total 除了显示目录或文件的大小外，同时也显示所有目录或文件的总和。</li><li>-D或–dereference-args 显示指定符号连接的源文件大小。</li><li>-h或–human-readable 以K，M，G为单位，提高信息的可读性。</li><li>-H或–si 与-h参数相同，但是K，M，G是以1000为换算单位,而不是以1024为换算单位。</li><li>-k或–kilobytes 以1024 bytes为单位。</li><li>-l或–count-links 重复计算硬件连接的文件。</li><li>-L<符号连接>或–dereference<符号连接> 显示选项中所指定符号连接的源文件大小。</符号连接></符号连接></li><li>-m或–megabytes 以1MB为单位。</li><li>-s或–summarize 仅显示总计，即当前目录的大小。</li><li>-S或–separate-dirs 显示每个目录的大小时，并不含其子目录的大小。</li><li>-x或–one-file-xystem 以一开始处理时的文件系统为准，若遇上其它不同的文件系统目录则略过。</li><li>-X<文件>或–exclude-from=<文件> 在<文件>指定目录或文件。</文件></文件></文件></li><li>–exclude=<目录或文件> 略过指定的目录或文件。</目录或文件></li><li>–max-depth=<目录层数> 超过指定层数的目录后，予以忽略。</目录层数></li><li>–help 显示帮助。</li><li>–version 显示版本信息</li></ul><h2 id="pkg-config">pkg-config</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> pkg-config --cflags --libs gdk-3.0</span></span><br><span class="line">-I/usr/include/gtk-3.0 -I/usr/include/pango-1.0 -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include -I/usr/lib/libffi-3.2.1/include -I/usr/include/fribidi -I/usr/include/harfbuzz -I/usr/include/freetype2 -I/usr/include/libpng16 -I/usr/include/uuid -I/usr/include/cairo -I/usr/include/pixman-1 -I/usr/include/gdk-pixbuf-2.0 -I/usr/include/libmount -I/usr/include/blkid -I/usr/include/gio-unix-2.0 -pthread -I/usr/include/libdrm -lgdk-3 -lz -lpangocairo-1.0 -lpango-1.0 -lgdk_pixbuf-2.0 -lcairo-gobject -lcairo -lgobject-2.0 -lglib-2.0</span><br></pre></td></tr></table></figure><p><strong>作用</strong></p><ul><li>检查库的版本号。如果所需要的库的版本不满足要求，它会打印出错误信息，避免链接错误版本的库文件。</li><li>获得编译预处理参数，如宏定义，头文件的位置。</li><li>获得链接参数，如库及依赖的其它库的位置，文件名及其它一些连接参数。</li><li>自动加入所依赖的其它库的设置。</li></ul><p><strong>PKG_CONFIG_PATH</strong> 环境变量PKG_CONFIG_PATH是用来设置.pc文件的搜索路径的，pkg-config按照设置路径的先后顺序进行搜索，直到找到指定的.pc 文件为止。这样，库的头文件的搜索路径的设置实际上就变成了对.pc文件搜索路径的设置。 在安装完一个需要使用的库后，比如Glib，一是将相应的.pc文件，如glib-2.0.pc拷贝到/usr/lib/pkgconfig目录下，二是通过设置环境变量PKG_CONFIG_PATH添加glib-2.0.pc文件的搜索路径。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 添加环境变量PKG_CONFIG_PATH，在bash中应该进行如下设置：</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">export</span> PKG_CONFIG_PATH=/opt/gtk/lib/pkgconfig:<span class="variable">$PKG_CONFIG_PATH</span></span></span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 可以执行下面的命令检查是否 /opt/gtk/lib/pkgconfig 路径已经设置在PKG_CONFIG_PATH环境变量中：</span></span><br><span class="line">echo $PKG_CONFIG_PATH</span><br></pre></td></tr></table></figure><p><strong>原理</strong> 正常情况下，库文件在编译通过后会生成prefix/lib/pkgconfig目录，目录下会包含.pc文件，例如：  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> ls -la /usr/include/gtk3.24/lib/pkgconfig</span></span><br><span class="line">总用量 40</span><br><span class="line">drwxr-xr-x 2 root root 4096  7月 24 15:56 .</span><br><span class="line">drwxr-xr-x 4 root root 4096  7月 24 15:56 ..</span><br><span class="line">-rw-r--r-- 1 root root  277  7月 24 15:56 gail-3.0.pc</span><br><span class="line">-rw-r--r-- 1 root root  608  7月 24 15:56 gdk-3.0.pc</span><br><span class="line">-rw-r--r-- 1 root root  608  7月 24 15:56 gdk-wayland-3.0.pc</span><br><span class="line">-rw-r--r-- 1 root root  608  7月 24 15:56 gdk-x11-3.0.pc</span><br><span class="line">-rw-r--r-- 1 root root  631  7月 24 15:56 gtk+-3.0.pc</span><br><span class="line">-rw-r--r-- 1 root root  405  7月 24 15:56 gtk+-unix-print-3.0.pc</span><br><span class="line">-rw-r--r-- 1 root root  631  7月 24 15:56 gtk+-wayland-3.0.pc</span><br><span class="line">-rw-r--r-- 1 root root  631  7月 24 15:56 gtk+-x11-3.0.pc</span><br></pre></td></tr></table></figure></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> vim gtk+-3.0</span></span><br><span class="line"></span><br><span class="line">prefix=/usr/include/gtk3.24</span><br><span class="line">exec_prefix=$&#123;prefix&#125;</span><br><span class="line">libdir=$&#123;exec_prefix&#125;/lib</span><br><span class="line">includedir=$&#123;prefix&#125;/include</span><br><span class="line">targets=x11 wayland</span><br><span class="line"> </span><br><span class="line">gtk_binary_version=3.0.0</span><br><span class="line">gtk_host=x86_64-pc-linux-gnu</span><br><span class="line"> </span><br><span class="line">Name: GTK+</span><br><span class="line">Description: GTK+ Graphical UI Library</span><br><span class="line">Version: 3.24.10</span><br><span class="line">Requires: gdk-3.0 atk &gt;= 2.15.1 cairo &gt;= 1.14.0 cairo-gobject &gt;= 1.14.0 gdk-pixbuf-2.0 &gt;= 2.30.0 gio-2.0 &gt;= 2.53.4                                                                                        </span><br><span class="line">Requires.private: atk atk-bridge-2.0 wayland-client &gt;= 1.9.91 wayland-protocols &gt;= 1.12 xkbcommon &gt;= 0.2.0 wayland-cursor &gt;= 1.9.91 wayland-egl  epoxy &gt;= 1.4 fribidi &gt;= 0.19.7 pangoft2 gio-unix-2.0 &gt;= 2</span><br><span class="line">Libs: -L$&#123;libdir&#125; -lgtk-3</span><br><span class="line">Cflags: -I$&#123;includedir&#125;/gtk-3.0</span><br></pre></td></tr></table></figure><h2 id="端口与进程">端口与进程</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo netstat -nap | grep 5555  <span class="comment"># 查看指定端口被什么应用及进程号占用</span></span></span><br><span class="line">tcp        0      0 0.0.0.0:5555            0.0.0.0:*               LISTEN      8362/python</span><br><span class="line">tcp6       0      0 :::5555                 :::*                    LISTEN      8362/python</span><br><span class="line"></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo netstat -nap | grep 8362  <span class="comment"># 同上，查看端口号</span></span></span><br><span class="line">tcp        0      0 0.0.0.0:5555            0.0.0.0:*               LISTEN      8362/python                                       │apps                 product.sh        tmp</span><br><span class="line">tcp6       0      0 :::5555                 :::*                    LISTEN      8362/python                                       │➜  api git:(master) source .env/bin/activate</span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     75201340 8362/python                                                            │(.env) ➜  api git:(master) pwd</span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     75201341 8362/python                          </span><br><span class="line"></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo <span class="built_in">kill</span> -s 9 pid  <span class="comment"># 杀死进程pid</span></span></span><br></pre></td></tr></table></figure><h2 id="systemctl">systemctl</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 可以返回systemd service文件路径</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo systemctl edit rabbitmq-server.service</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SSL证书入门基础</title>
      <link href="/2017/11/07/SSL%E8%AF%81%E4%B9%A6%E5%85%A5%E9%97%A8%E5%9F%BA%E7%A1%80/"/>
      <url>/2017/11/07/SSL%E8%AF%81%E4%B9%A6%E5%85%A5%E9%97%A8%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<h2 id="原理">原理</h2><h3 id="ca">CA</h3><p>现实中，通过CA（Certificate Authority）来保证public key的真实性。CA也是基于非对称加密算法来工作。有了CA，B会先把自己的public key（和一些其他信息）交给CA。CA用自己的private key加密这些数据，加密完的数据称为B的数字证书。现在B要向A传递public key，B传递的是CA加密之后的数字证书。A收到以后，会通过CA发布的CA证书（包含了CA的public key），来解密B的数字证书，从而获得B的public key。</p><p>但是等等，A怎么确保CA证书不被劫持。C完全可以把一个假的CA证书发给A，进而欺骗A。CA的大杀器就是，CA把自己的CA证书集成在了浏览器和操作系统里面。A拿到浏览器或者操作系统的时候，已经有了CA证书，没有必要通过网络获取，那自然也不存在劫持的问题。</p><p>CA作为一个公证机构，能确保数字证书的真实性。但是在实际使用中，CA认证一般是要收费的，普通人不会去做CA认证，进而获得属于自己的数字证书。更多的是，一些大的机构，例如银行，网店，金融机构，它们去获得自己的数字证书。那这种情况如何保证网络通信的安全呢？</p><p>这些机构获取到CA授予的数字证书之后，将数字证书加到自己的web服务器上。</p><h3 id="https">HTTPS</h3><blockquote><p>HTTPS全称是HTTP over SSL，也就是通过SSL/TLS加密HTTP数据，这或许是SSL最广泛的应用。</p></blockquote><p><strong>HTTPS流程:</strong></p><ol type="1"><li>用户向web服务器发起一个安全连接的请求</li><li>服务器返回经过CA认证的数字证书，证书里面包含了服务器的public key</li><li>用户拿到数字证书，用自己浏览器内置的CA证书解密得到服务器的public key</li><li>用户用服务器的public key加密一个用于接下来的对称加密算法的密钥，传给web服务器</li><li>因为只有服务器有private key可以解密，所以不用担心中间人拦截这个加密的密钥</li><li>服务器拿到这个加密的密钥，解密获取密钥，再使用对称加密算法，和用户完成接下来的网络通信</li></ol><h2 id="安装">安装</h2><h3 id="ubuntu安装">Ubuntu安装</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 安装相关模块</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo a2enmod ssl   //启用ssl模块</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo apt-get install openssl  //安装openssl</span></span><br></pre></td></tr></table></figure><h3 id="创建证书">创建证书</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">openssl genrsa -des3 -out server.key 1024  //创建CA签名(不使用密码去除-des3选项)</span><br><span class="line">openssl req -new -key server.key -out server.csr  //创建CSR(Certificate Signing Request)</span><br><span class="line">openssl x509 -req -days 365 -in server.csr -signkey server.key -out server.crt  //自己签发证书</span><br><span class="line">sudo cp server.crt /etc/ssl/certs</span><br><span class="line">sudo cp server.key /etc/ssl/private</span><br></pre></td></tr></table></figure><h3 id="虚拟主机">虚拟主机</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 修改虚拟主机信息</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 在&lt;VirtualHost *:80&gt;段中，DocumentRoot一行的下方加入内容：</span></span><br><span class="line">SSLEngine On</span><br><span class="line">SSLOptions +StrictRequire</span><br><span class="line">SSLCertificateFile /etc/ssl/certs/server.crt</span><br><span class="line">SSLCertificateKeyFile /etc/ssl/private/server.key</span><br><span class="line"><span class="meta">#</span><span class="bash"> 端口修改为：443，即&lt;VirtualHost *:443&gt;(ssl的端口)</span></span><br></pre></td></tr></table></figure><p>重启apache2 <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo /etc/init.d/apache2 force-reload</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo /etc/init.d/apache2 restart</span></span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SSL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Gitlab服务搭建</title>
      <link href="/2017/06/19/Gitlab%E6%9C%8D%E5%8A%A1%E6%90%AD%E5%BB%BA/"/>
      <url>/2017/06/19/Gitlab%E6%9C%8D%E5%8A%A1%E6%90%AD%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<h2 id="安装">安装</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 安装相关服务 postfix为邮件服务</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo apt-get install curl openssh-server ca-certificates postfix</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 安装gitlab服务包</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> curl -sS https://packages.gitlab.com/install/repositories/gitlab/gitlab-ce/script.deb.sh | sudo bash</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo apt-get install gitlab-ce</span></span><br></pre></td></tr></table></figure><h1 id="配置">配置</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 配置服务</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo vim /etc/gitlab/gitlab.rb</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">## GitLab URL</span><br><span class="line">##! URL on which GitLab will be reachable.</span><br><span class="line">##! For more details on configuring external_url see:</span><br><span class="line">##! https://docs.gitlab.com/omnibus/settings/configuration.html#configuring-the-external-url-for-gitlab</span><br><span class="line">external_url &apos;http:/192.168.0.19:1500&apos;    # 地址</span><br><span class="line"></span><br><span class="line">.</span><br><span class="line">.</span><br><span class="line">.</span><br><span class="line"># 邮件基本设置</span><br><span class="line">### Email Settings</span><br><span class="line">gitlab_rails[&apos;gitlab_email_enabled&apos;] = true</span><br><span class="line">gitlab_rails[&apos;gitlab_email_from&apos;] = &apos;admin@uscnk.com&apos;</span><br><span class="line">gitlab_rails[&apos;gitlab_email_display_name&apos;] = &apos;Gitlab&apos;</span><br><span class="line">gitlab_rails[&apos;gitlab_email_reply_to&apos;] = &apos;admin@uscnk.com&apos;</span><br><span class="line">gitlab_rails[&apos;gitlab_email_subject_suffix&apos;] = &apos;Gitlab&apos;</span><br><span class="line"></span><br><span class="line">.</span><br><span class="line">.</span><br><span class="line">.</span><br><span class="line">### GitLab email server settings</span><br><span class="line">###! Docs: https://docs.gitlab.com/omnibus/settings/smtp.html</span><br><span class="line">###! **Use smtp instead of sendmail/postfix.**</span><br><span class="line"></span><br><span class="line"># gitlab_rails[&apos;smtp_enable&apos;] = true</span><br><span class="line"># gitlab_rails[&apos;smtp_address&apos;] = &quot;smtp.server&quot;</span><br><span class="line"># gitlab_rails[&apos;smtp_port&apos;] = 465</span><br><span class="line"># gitlab_rails[&apos;smtp_user_name&apos;] = &quot;smtp user&quot;</span><br><span class="line"># gitlab_rails[&apos;smtp_password&apos;] = &quot;smtp password&quot;</span><br><span class="line"># gitlab_rails[&apos;smtp_domain&apos;] = &quot;example.com&quot;</span><br><span class="line"># gitlab_rails[&apos;smtp_authentication&apos;] = &quot;login&quot;</span><br><span class="line"># gitlab_rails[&apos;smtp_enable_starttls_auto&apos;] = true</span><br><span class="line"># gitlab_rails[&apos;smtp_tls&apos;] = false</span><br><span class="line"></span><br><span class="line"># 邮件服务地址</span><br><span class="line"># QQ exmail (腾讯企业邮箱)</span><br><span class="line">gitlab_rails[&apos;smtp_enable&apos;] = true</span><br><span class="line">gitlab_rails[&apos;smtp_address&apos;] = &quot;smtp.exmail.qq.com&quot;</span><br><span class="line">gitlab_rails[&apos;smtp_port&apos;] = 465</span><br><span class="line">gitlab_rails[&apos;smtp_user_name&apos;] = &quot;admin@uscnk.com&quot;</span><br><span class="line">gitlab_rails[&apos;smtp_password&apos;] = &quot;xxxxxxxxx&quot;</span><br><span class="line">gitlab_rails[&apos;smtp_authentication&apos;] = &quot;login&quot;</span><br><span class="line">gitlab_rails[&apos;smtp_enable_starttls_auto&apos;] = true</span><br><span class="line">gitlab_rails[&apos;smtp_tls&apos;] = true</span><br><span class="line">gitlab_rails[&apos;gitlab_email_from&apos;] = &apos;admin@uscnk.com&apos;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># nginx基本设置</span><br><span class="line">################################################################################</span><br><span class="line">## GitLab Nginx</span><br><span class="line">##! Docs: https://docs.gitlab.com/omnibus/settings/nginx.html</span><br><span class="line">################################################################################</span><br><span class="line"></span><br><span class="line">nginx[&apos;listen_addresses&apos;] = [&apos;192.168.0.19&apos;]</span><br><span class="line">nginx[&apos;losten_port&apos;] = 1500</span><br></pre></td></tr></table></figure><h2 id="启动">启动</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 重启服务</span></span><br><span class="line">sudo gitlab-ctl reconfigure</span><br><span class="line"><span class="meta">#</span><span class="bash"> 重启邮件服务</span></span><br><span class="line">sudo /etc/init.d/postfix restart</span><br><span class="line"><span class="meta">#</span><span class="bash"> 访问</span></span><br><span class="line">http://192.168.0.19:1500</span><br><span class="line">Username: root</span><br><span class="line">Password: 5iveL!fe</span><br></pre></td></tr></table></figure><h2 id="github与gitlab共存">github与gitlab共存</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> github账户邮箱， 将id_rsa改名成id_rsa_github</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> ssh-keygen -t rsa -C <span class="string">"xxxxx@gmail.com"</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> gitlab公司邮箱， 将id_rsa改名成id_rsa_gitlab</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> ssh-keygen -t rsa -C <span class="string">"xxxxxx@work.com"</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 添加私钥</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> ssh-add ~/.ssh/id_rsa_github</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> ssh-add ~/.ssh/id_rsa_gitlab</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">在 ~/.ssh 目录下新建一个config文件</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> touch config</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> chmod 755 conifg</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># 并添加以下内容</span><br><span class="line"># gitlab</span><br><span class="line">Host github.com</span><br><span class="line">    HostName github.com</span><br><span class="line">    PreferredAuthentications publickey</span><br><span class="line">    IdentityFile ~/.ssh/id_rsa_github</span><br><span class="line"># github</span><br><span class="line">Host gitlib.com</span><br><span class="line">    HostName gitlib.com</span><br><span class="line">    PreferredAuthentications publickey</span><br><span class="line">    IdentityFile ~/.ssh/id_rsa_gitlab</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 将id_rsa_github.pab内容添加到github中</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 测试结果</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> ssh -T git@github.com</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 将id_rsa_gitlab.pab内容添加到gitlab中</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> ~/mytest</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 在github中测试</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git remote add github https://github.com/zhcshine/mytest.git</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git push -u github master</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 在gitlab中测试</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git remote add gitlab http://192.168.0.19:1500/zhcshine/mytest.git</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git push -u gitlab master</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Github </tag>
            
            <tag> Gitlab </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nagios监控集群服务</title>
      <link href="/2017/04/20/Nagios%E7%9B%91%E6%8E%A7%E9%9B%86%E7%BE%A4%E6%9C%8D%E5%8A%A1/"/>
      <url>/2017/04/20/Nagios%E7%9B%91%E6%8E%A7%E9%9B%86%E7%BE%A4%E6%9C%8D%E5%8A%A1/</url>
      
        <content type="html"><![CDATA[<h2 id="安装服务器端">安装服务器端</h2><h3 id="安装lamp环境">安装lamp环境</h3><h3 id="配置nagios服务">配置nagios服务</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 192.168.0.206</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 创建nagiso用户</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo useradd nagios</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 创建apache用户，yum安装httpd服务会自动创建</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo useradd apache -M -s /sbin/nologin</span></span><br><span class="line">useradd：用户“apache”已存在</span><br><span class="line"><span class="meta">#</span><span class="bash"> 创建nagcmd用户组</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo groupadd nagcmd</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 将usermod加入nagcmd用户组</span></span><br><span class="line">sudo usermod -a -G nagcmd nagios</span><br><span class="line"><span class="meta">#</span><span class="bash"> 将apache用户加入nagcmd用户组</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo usermod -a -G nagcmd apache</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看nagios用户所属的组</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> id -n -G nagios</span></span><br><span class="line">nagios nagcmd</span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看apace用户所属的组</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> id -n -G apache</span></span><br><span class="line">apache nagcmd</span><br><span class="line"><span class="meta">#</span><span class="bash"> 安装nagiso服务</span></span><br><span class="line"><span class="meta">$</span><span class="bash">sudo yum install nagios</span></span><br><span class="line"><span class="meta">$</span><span class="bash">sudo yum install nagios-plugins-all</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 安装nrpe（服务器端和客户端都需要安装）</span></span><br><span class="line"><span class="meta">$</span><span class="bash">sudo yum install nrpe</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 启动和开机启动</span></span><br><span class="line"><span class="meta">$</span><span class="bash">sudo systemctl start nagios</span></span><br><span class="line"><span class="meta">$</span><span class="bash">sudo systemctl <span class="built_in">enable</span> nagios</span></span><br><span class="line"><span class="meta">$</span><span class="bash">sudo systemctl start nrpe</span></span><br><span class="line"><span class="meta">$</span><span class="bash">sudo systemctl <span class="built_in">enable</span> nrpe</span></span><br></pre></td></tr></table></figure><h3 id="配置web">配置web</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 取消认证</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo vim /etc/nagios/cgi.cfg</span></span><br><span class="line">use_authentication=0 # 此处将1改为0</span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看配置文件</span></span><br><span class="line"><span class="meta">$</span><span class="bash">ls /etc/httpd/conf.d</span></span><br><span class="line">autoindex.conf  nagios.conf  php.conf  README  userdir.conf  welcome.conf  xcache.conf</span><br><span class="line"><span class="meta">#</span><span class="bash"> 其中nagiso.conf就是nagios的web配置文件</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 访问http://192.168.0.206/nagios，其中登陆密码在/etc/nagios/passwd文件中，具体文件位置可以在/etc/httpd/conf.d/nagios.conf中查看</span></span><br></pre></td></tr></table></figure><h2 id="安装客户端">安装客户端</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 192.168.0.208</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 安装mysql，参考上方链接，配合生成check_mysql插件</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 安装nrpe（服务器端和客户端都需要安装）</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo yum -y install epel-release</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo yum install nrpe</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo yum install nagios-plugins-all</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 配置nagios客户端</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo vim /etc/nagios/nrpe.cfg</span></span><br><span class="line">allowed_hosts=127.0.0.1,192.168.0.206 # 监控当前客户端的nagios服务器地址</span><br><span class="line"><span class="meta">#</span><span class="bash"> 启动服务</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo systemctl restart nrpe</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo systemctl <span class="built_in">enable</span> nrpe</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 检查启动结果</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo netstat -lntup | grep nrpe</span></span><br><span class="line">tcp        0      0 0.0.0.0:5666            0.0.0.0:*               LISTEN      2540/nrpe           </span><br><span class="line">tcp6       0      0 :::5666                 :::*                    LISTEN      2540/nrpe</span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo ps -ef | grep nrpe | grep -v grep</span></span><br><span class="line">nrpe      2540     1  0 11:59 ?        00:00:00 /usr/sbin/nrpe -c /etc/nagios/nrpe.cfg -d</span><br></pre></td></tr></table></figure><h2 id="配置服务器端">配置服务器端</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 192.168.0.206</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> tree /etc/nagios</span></span><br><span class="line">.</span><br><span class="line">├── cgi.cfg  </span><br><span class="line">├── conf.d  # 添加新的监视客户端信息</span><br><span class="line">│   └── web_one.cfg</span><br><span class="line">├── nagios.cfg  # 配置服务器端nagios</span><br><span class="line">├── nrpe.cfg # 配置服务器端nrpe</span><br><span class="line">├── objects</span><br><span class="line">│   ├── commands.cfg</span><br><span class="line">│   ├── contacts.cfg</span><br><span class="line">│   ├── localhost.cfg</span><br><span class="line">│   ├── printer.cfg</span><br><span class="line">│   ├── switch.cfg</span><br><span class="line">│   ├── templates.cfg</span><br><span class="line">│   ├── timeperiods.cfg</span><br><span class="line">│   └── windows.cfg</span><br><span class="line">├── passwd</span><br><span class="line">└── private</span><br><span class="line">    └── resource.cfg</span><br><span class="line"></span><br><span class="line"><span class="meta">$</span><span class="bash"> cp /etc/nagios/objects/localhost.cfg  /etc/nagios/conf.d/web_one.cfg</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> vim /etc/nagios/conf.d/web_one.cfg <span class="comment"># 将localhost 改成web_one</span></span></span><br><span class="line">define host&#123;</span><br><span class="line">        use                     linux-server  </span><br><span class="line">        host_name         web_one</span><br><span class="line">        alias                   web_one</span><br><span class="line">        address              192.168.0.208</span><br><span class="line">&#125;</span><br><span class="line">define service&#123;</span><br><span class="line">        use                             local-service </span><br><span class="line">        host_name                 web_one</span><br><span class="line">        service_description    PING</span><br><span class="line">        check_command        check_ping!100.0,20%!500.0,60%</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Nagios </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Keepalived实现高可用集群</title>
      <link href="/2017/04/19/Keepalived%E5%AE%9E%E7%8E%B0%E9%AB%98%E5%8F%AF%E7%94%A8%E9%9B%86%E7%BE%A4/"/>
      <url>/2017/04/19/Keepalived%E5%AE%9E%E7%8E%B0%E9%AB%98%E5%8F%AF%E7%94%A8%E9%9B%86%E7%BE%A4/</url>
      
        <content type="html"><![CDATA[<h2 id="安装">安装</h2><h3 id="master">MASTER</h3><p><strong>CentOs6.8 192.168.0.106</strong> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 安装</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo yum install keepalived</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 配置</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo vim /etc/keepalived/keepalived.conf</span></span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">! Configuration File for keepalived</span><br><span class="line"></span><br><span class="line">global_defs &#123;</span><br><span class="line">    # 这些信息是配置报警发邮件信息</span><br><span class="line">   notification_email &#123;</span><br><span class="line">     acassen@firewall.loc</span><br><span class="line">     failover@firewall.loc</span><br><span class="line">     sysadmin@firewall.loc</span><br><span class="line">   &#125;</span><br><span class="line">   notification_email_from Alexandre.Cassen@firewall.loc</span><br><span class="line">   smtp_server 192.168.200.1</span><br><span class="line">   smtp_connect_timeout 30</span><br><span class="line">     # 路由标识，同一局域网应该唯一</span><br><span class="line">   router_id lb01</span><br><span class="line">&#125;</span><br><span class="line">vrrp_instance VI_1 &#123;</span><br><span class="line">    # 当前角色是master</span><br><span class="line">    state MASTER</span><br><span class="line">        # 对外提供网络的接口</span><br><span class="line">    interface eth0</span><br><span class="line">        # 虚拟路由id标识，数字，必须和backup里相同实例一致</span><br><span class="line">    virtual_router_id 55</span><br><span class="line">        # 优先级，数字必须比backup大</span><br><span class="line">    priority 150</span><br><span class="line">    advert_int 1</span><br><span class="line">        # 权限认证，和backup一致</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 1111</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">       192.168.0.200</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># 重启</span><br><span class="line">sudo /etc/init.d/keepalived restart</span><br><span class="line"># 查看结果</span><br><span class="line">ip addr | grep 192.168.0.200</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> nginx配置文件</span></span><br><span class="line">server &#123;</span><br><span class="line">    listen       192.168.0.200:80; # 这里需要指定虚拟vip监听</span><br><span class="line">    server_name  localhost;</span><br><span class="line"></span><br><span class="line">    location / &#123;</span><br><span class="line">              # 只访问web站点</span><br><span class="line">       proxy_pass http://www_server_pools;</span><br><span class="line">    &#125;</span><br><span class="line">    error_page   500 502 503 504  /50x.html;</span><br><span class="line">    location = /50x.html &#123;</span><br><span class="line">        root   html;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="backup">BACKUP</h3><p><strong>CentOs7.2 192.168.0.209</strong> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 安装</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo yum install keepalived</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 配置</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo vim /etc/keepalived/keepalived.conf</span></span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">! Configuration File for keepalived</span><br><span class="line"></span><br><span class="line">global_defs &#123;</span><br><span class="line">   notification_email &#123;</span><br><span class="line">     acassen@firewall.loc</span><br><span class="line">     failover@firewall.loc</span><br><span class="line">     sysadmin@firewall.loc</span><br><span class="line">   &#125;</span><br><span class="line">   notification_email_from Alexandre.Cassen@firewall.loc</span><br><span class="line">   smtp_server 192.168.200.1</span><br><span class="line">   smtp_connect_timeout 30</span><br><span class="line">   router_id lb02  # 和master不一致</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_1 &#123;</span><br><span class="line">    state BACKUP      # 和MASTER不一致</span><br><span class="line">    interface enp0s3</span><br><span class="line">    virtual_router_id 55</span><br><span class="line">    priority 100      # 和master不一致</span><br><span class="line">    advert_int 1</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 1111</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        192.168.0.200</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"># 重启</span><br><span class="line">sudo systemctl restart keepalived</span><br><span class="line"># 查看结果</span><br><span class="line">ip addr | grep 192.168.0.200</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> nginx配置文件</span></span><br><span class="line">server &#123;</span><br><span class="line">    listen       192.168.0.200:80;</span><br><span class="line">    server_name  localhost;</span><br><span class="line"></span><br><span class="line">    location / &#123;</span><br><span class="line">                 # 只访问phone站点</span><br><span class="line">       proxy_pass http://www_phone_pools;</span><br><span class="line">    &#125;</span><br><span class="line">    error_page   500 502 503 504  /50x.html;</span><br><span class="line">    location = /50x.html &#123;</span><br><span class="line">        root   html;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="测试结果">测试结果</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 开启192.168.0.106，192.168.0.209的keepalive服务</span></span><br><span class="line">    </span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看192.168.0.106</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> ip addr | grep 192.168.0.200</span></span><br><span class="line">inet 192.168.0.200/32 scope global eth0 # 应该有这行结果</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看192.168.0.209</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> ip addr | grep 192.168.0.200 <span class="comment"># 结果应该为空，如果有结果，表示脑裂，检查相关配置和防火墙</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 访问http://192.168.200 </span></span><br><span class="line">curl 192.168.0.200 # 结果应该只访问web网站</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 关停192.168.0.106的keepalive服务</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 访问http://192.168.200 </span></span><br><span class="line">curl 192.168.0.200 # 结果应该只访问phone网站</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看192.168.0.106</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> ip addr | grep 192.168.0.200</span></span><br><span class="line">inet 192.168.0.200/32 scope global eth0 # 结果应该为空</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看192.168.0.209</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> ip addr | grep 192.168.0.200 </span></span><br><span class="line">inet 192.168.0.200/32 scope global enp0s3 # 此时有这行结果</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 重启192.168.0.106的keepalive服务，应该恢复之前的测试结果</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Keepalived </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Unittest单元测试</title>
      <link href="/2016/11/30/Unittest%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95/"/>
      <url>/2016/11/30/Unittest%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95/</url>
      
        <content type="html"><![CDATA[<h2 id="基础方法">基础方法</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># calculator.py</span></span><br><span class="line"><span class="comment"># 需要测试的类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Count</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, a, b)</span>:</span></span><br><span class="line">        self.a = int(a)</span><br><span class="line">        self.b = int(b)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">add</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.a + self.b</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># test.py 测试类</span></span><br><span class="line"><span class="keyword">from</span> calculator <span class="keyword">import</span> Count</span><br><span class="line"><span class="keyword">import</span> unittest</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TestCount</span><span class="params">(unittest.TestCase)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">setUp</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">print</span> <span class="string">'test start'</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">test_add</span><span class="params">(self)</span>:</span></span><br><span class="line">        j = Count(<span class="number">2</span>,<span class="number">3</span>)</span><br><span class="line">        self.assertEqual(j.add(), <span class="number">5</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">test_add2</span><span class="params">(self)</span>:</span></span><br><span class="line">        j = Count(<span class="number">41</span>, <span class="number">76</span>)</span><br><span class="line">        self.assertEqual(j.add(), <span class="number">115</span>, <span class="string">'not equal'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">tearDown</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">print</span> <span class="string">'test end'</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    <span class="comment"># 测试全部方法</span></span><br><span class="line">    <span class="comment"># unittest.main()</span></span><br><span class="line">    <span class="comment"># 构造测试集</span></span><br><span class="line">    suite = unittest.TestSuite()</span><br><span class="line">    <span class="comment"># 指定测试方法</span></span><br><span class="line">    suite.addTest(TestCount(<span class="string">'test_add2'</span>))</span><br><span class="line">    <span class="comment"># 执行测试</span></span><br><span class="line">    runner = unittest.TextTestRunner()</span><br><span class="line">    runner.run(suite)</span><br></pre></td></tr></table></figure><h3 id="自动识别测试用例">自动识别测试用例</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># calculator.py</span></span><br><span class="line"><span class="comment"># 需要测试的类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Count</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, a, b)</span>:</span></span><br><span class="line">        self.a = int(a)</span><br><span class="line">        self.b = int(b)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">add</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.a + self.b</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">sub</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.a - self.b</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># testadd.py 测试类</span></span><br><span class="line"><span class="keyword">from</span> calculator <span class="keyword">import</span> Count</span><br><span class="line"><span class="keyword">import</span> unittest</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TestAdd</span><span class="params">(unittest.TestCase)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">setUp</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">print</span> <span class="string">'test add start'</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">test_add</span><span class="params">(self)</span>:</span></span><br><span class="line">        j = Count(<span class="number">2</span>,<span class="number">3</span>)</span><br><span class="line">        self.assertEqual(j.add(), <span class="number">5</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">test_add2</span><span class="params">(self)</span>:</span></span><br><span class="line">        j = Count(<span class="number">41</span>, <span class="number">76</span>)</span><br><span class="line">        self.assertEqual(j.add(), <span class="number">115</span>, <span class="string">'not equal'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">tearDown</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">print</span> <span class="string">'test add end'</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    <span class="comment"># 测试全部方法</span></span><br><span class="line">    unittest.main()</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># testsub.py 测试类</span></span><br><span class="line"><span class="keyword">from</span> calculator <span class="keyword">import</span> Count</span><br><span class="line"><span class="keyword">import</span> unittest</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TestSub</span><span class="params">(unittest.TestCase)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">setUp</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">print</span> <span class="string">'test sub start'</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">test_sub</span><span class="params">(self)</span>:</span></span><br><span class="line">        j = Count(<span class="number">2</span>,<span class="number">3</span>)</span><br><span class="line">        self.assertEqual(j.sub(), <span class="number">5</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">test_sub2</span><span class="params">(self)</span>:</span></span><br><span class="line">        j = Count(<span class="number">41</span>, <span class="number">76</span>)</span><br><span class="line">        self.assertEqual(j.sub(), <span class="number">115</span>, <span class="string">'not equal'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">tearDown</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">print</span> <span class="string">'test sub end'</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    <span class="comment"># 测试全部方法</span></span><br><span class="line">    unittest.main()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># runtest.py</span></span><br><span class="line"><span class="keyword">import</span> unittest</span><br><span class="line">test_dir = <span class="string">'./'</span></span><br><span class="line">discover = unittest.defaultTestLoader.discover(test_dir, pattern=<span class="string">'test*.py'</span>)</span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    runner = unittest.TextTestRunner()</span><br><span class="line">    runner.run(discover)</span><br></pre></td></tr></table></figure><h3 id="断言方法">断言方法</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># unittest.TestCase.assertEqual(a, b, msg=None)   a == b</span></span><br><span class="line"><span class="comment"># unittest.TestCase.assertNotEqual(a, b) a !=b  </span></span><br><span class="line"><span class="comment"># unittest.TestCase.assertTrue(x)   x is True</span></span><br><span class="line"><span class="comment"># unittest.TestCase.assertFalse(x)  x is False</span></span><br><span class="line"><span class="comment"># unittest.TestCase.assertIs(a, b)  x is b</span></span><br><span class="line"><span class="comment"># unittest.TestCase.assertIsNot(a, b)  a is not b</span></span><br><span class="line"><span class="comment"># unittest.TestCase.assertIsNotNone(x)  x is not None</span></span><br><span class="line"><span class="comment"># unittest.TestCase.assertIn(a, b)  a in b</span></span><br><span class="line"><span class="comment"># unittest.TestCase.assertNotIn(a, b) a not in b</span></span><br><span class="line"><span class="comment"># unittest.TestCase.assertNotIsInstance(a, b) isinstance(a,b)</span></span><br><span class="line"><span class="comment"># unittest.TestCase.assertNotIsInstance(a, b) not isinstance(a,b)</span></span><br></pre></td></tr></table></figure><h3 id="跳过测试与预期失败">跳过测试与预期失败</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># test.py</span></span><br><span class="line"><span class="keyword">import</span> unittest</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyTest</span><span class="params">(unittest.TestCase)</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">setUp</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">tearDown</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="meta">    @unittest.skip(u'直接跳过测试')</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">test_skip</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">print</span> <span class="string">'test aaa'</span></span><br><span class="line"></span><br><span class="line"><span class="meta">    @unittest.skipIf(3 &gt; 2, u'条件满足时跳过测试')</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">test_skip_if</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">print</span> <span class="string">'test bbb'</span></span><br><span class="line"></span><br><span class="line"><span class="meta">    @unittest.skipUnless(3 &gt; 2, u'条件满足时执行测试')</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">test_skip_unless</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">print</span> <span class="string">'test ccc'</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 不管测试成功与否，都标记为失败</span></span><br><span class="line"><span class="meta">    @unittest.expectedFailure</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">test_expected_failure</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">print</span> <span class="string">'test ddd'</span></span><br><span class="line">        self.assertEqual(<span class="number">2</span>, <span class="number">3</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    unittest.main()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Selenium入门基础</title>
      <link href="/2016/11/30/Selenium%E5%85%A5%E9%97%A8%E5%9F%BA%E7%A1%80/"/>
      <url>/2016/11/30/Selenium%E5%85%A5%E9%97%A8%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<h2 id="安装">安装</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 环境: ubuntu14.04</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> pip install seleninum</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> firefox</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> https://github.com/mozilla/geckodriver/releases 下载对应版本放在<span class="variable">$PATH</span>目录下</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> google</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> https://sites.google.com/a/chromium.org/chromedriver/downloads 下载对应版本放在<span class="variable">$PATH</span>目录下</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> http://www.seleniumhq.org/download/    其他浏览器参考</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> sudo apt-get install phantomjs  安装无界面webkit浏览器引擎</span></span><br></pre></td></tr></table></figure><h2 id="示例">示例</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.common.by <span class="keyword">import</span> By</span><br><span class="line"></span><br><span class="line">driver = webdriver.Firefox()</span><br><span class="line"><span class="comment"># driver = webdriver.Chrome()</span></span><br><span class="line"><span class="comment"># driver =  webdriver.PhantomJS(executable_path='/usr/bin/phantomjs')</span></span><br><span class="line">driver.get(<span class="string">'http://www.baidu.com'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 定位元素</span></span><br><span class="line"><span class="comment"># 根据id定位</span></span><br><span class="line">find_id = driver.find_element_by_id(<span class="string">'wrapper'</span>)</span><br><span class="line">find_id = driver.find_element(By.ID, <span class="string">'wrapper'</span>)</span><br><span class="line"><span class="comment"># 根据name属性定位</span></span><br><span class="line">find_name = driver.find_element_by_name(<span class="string">'wd'</span>)</span><br><span class="line">find_name = driver.find_element(By.NAME, <span class="string">'wd'</span>)</span><br><span class="line"><span class="comment"># 根据class定位</span></span><br><span class="line">find_class = driver.find_element_by_class_name(<span class="string">'head_wrapper'</span>)</span><br><span class="line">find_class = driver.find_element(By.CLASS_NAME, <span class="string">'head_wrapper'</span>)</span><br><span class="line"><span class="comment"># 根据标签名称定位</span></span><br><span class="line">find_tag = driver.find_element_by_tag_name(<span class="string">'div'</span>)</span><br><span class="line">find_tag = driver.find_element(By.TAG_NAME, <span class="string">'div'</span>)</span><br><span class="line"><span class="comment"># 根据链接文本定位</span></span><br><span class="line">find_a_text = driver.find_element_by_link_text(<span class="string">'hao123'</span>)</span><br><span class="line">find_a_text = driver.find_element(By.LINK_TEXT, <span class="string">'hao123'</span>)</span><br><span class="line"><span class="comment"># 根据部分链接文本定位</span></span><br><span class="line">find_a_text = driver.find_element_by_partial_link_text(<span class="string">'hao'</span>)</span><br><span class="line">find_a_text = driver.find_element(By.PARTIAL_LINK_TEXT, <span class="string">'hao'</span>)</span><br><span class="line"><span class="comment"># 根据绝对位置定位</span></span><br><span class="line">find_x_path = driver.find_elements_by_xpath(<span class="string">'/html/body/div'</span>)</span><br><span class="line">find_x_path = driver.find_element(By.XPATH, <span class="string">'/html/body/div'</span>)</span><br><span class="line"><span class="comment"># 支持层级，属性，逻辑运算符结合使用</span></span><br><span class="line">find_x_path = driver.find_element_by_xpath(<span class="string">"//input[@id='kw']"</span>)  <span class="comment"># // 当前目录下的某个目录下</span></span><br><span class="line"><span class="comment"># Css定位</span></span><br><span class="line">find_css = driver.find_elements_by_css_selector(<span class="string">'.s_ipt'</span>)</span><br><span class="line">find_css = driver.find_element(By.CSS_SELECTOR, <span class="string">'.s_ipt'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置浏览器宽高</span></span><br><span class="line">driver.set_window_size(<span class="number">480</span>, <span class="number">800</span>)</span><br><span class="line">driver.get(<span class="string">'http://www.126.com'</span>)</span><br><span class="line"><span class="comment"># 控制浏览器前进倒退</span></span><br><span class="line">driver.back()</span><br><span class="line">driver.forward()</span><br><span class="line"><span class="comment"># 刷新浏览器(F5)</span></span><br><span class="line">driver.refresh()</span><br><span class="line"><span class="comment"># 当前页面</span></span><br><span class="line"><span class="keyword">print</span> driver.current_url()</span><br><span class="line"><span class="comment"># 元素操作</span></span><br><span class="line"><span class="comment"># dom = driver.find_element(By.ID, 'kw')</span></span><br><span class="line"><span class="comment"># dom.clear()  # 清除文本</span></span><br><span class="line"><span class="comment"># dom.send_keys()  # 模拟键盘输入</span></span><br><span class="line"><span class="comment"># dom.click()  # 点击元素</span></span><br><span class="line"><span class="comment"># dom.submit()  # 模拟表单提交</span></span><br><span class="line"><span class="comment"># dom.size()  # 返回元素的尺寸</span></span><br><span class="line"><span class="comment"># dom.text()  # 返回元素的文本</span></span><br><span class="line"><span class="comment"># dom.get_attribute(name)  # 返回元素的属性值</span></span><br><span class="line"><span class="comment"># dom.is_displayed()  # 设置该元素是否可见</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 鼠标操作</span></span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.common.action_chains <span class="keyword">import</span> ActionChains</span><br><span class="line">driver.get(<span class="string">'http://www.baidu.com'</span>)</span><br><span class="line"><span class="comment"># context_click 鼠标右键点击</span></span><br><span class="line">right_click = driver.find_element_by_id(<span class="string">'xx'</span>)</span><br><span class="line"><span class="comment"># perform 执行所有ActionChains中存储的动作</span></span><br><span class="line">ActionChains(driver).context_click(right_click).perform()</span><br><span class="line"><span class="comment"># above 鼠标悬停</span></span><br><span class="line">above = driver.find_element_by_id(<span class="string">'xxx'</span>)</span><br><span class="line">ActionChains(driver).move_to_element(above).perform()</span><br><span class="line"><span class="comment"># double_click 鼠标双击</span></span><br><span class="line"><span class="comment"># drag_and_drop(source, target) 鼠标拖放</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 键盘事件</span></span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.common.keys <span class="keyword">import</span> Keys</span><br><span class="line">find_id.send_keys(Keys.BACK_SPACE) <span class="comment"># 删除键</span></span><br><span class="line">find_id.send_keys(Keys.SPACE)  <span class="comment"># 空格键</span></span><br><span class="line">find_id.send_keys(Keys.TAB)  <span class="comment"># tab键</span></span><br><span class="line">find_id.send_keys(Keys.ESCAPE)  <span class="comment"># ESC</span></span><br><span class="line">find_id.send_keys(Keys.ENTER)  <span class="comment"># 回车键</span></span><br><span class="line">find_id.send_keys(Keys.CONTROL, <span class="string">'c'</span>)  <span class="comment"># 复制</span></span><br><span class="line">find_id.send_keys(Keys.CONTROL, <span class="string">'v'</span>)  <span class="comment"># 剪贴</span></span><br><span class="line">find_id.send_keys(Keys.F1) <span class="comment"># F1</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># driver.quit()</span></span><br></pre></td></tr></table></figure><h2 id="webdriver">Webdriver</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">import</span> logging</span><br><span class="line"></span><br><span class="line">logging.basicConfig(level=logging.DEBUG)</span><br><span class="line">driver = webdriver.Firefox()</span><br><span class="line">driver.get(<span class="string">'http://www.baidu.com'</span>)</span><br><span class="line">driver.find_element_by_id(<span class="string">'kw'</span>).send_keys(<span class="string">'selenium'</span>)</span><br><span class="line">driver.find_element_by_id(<span class="string">'su'</span>).click()</span><br><span class="line">driver.quit()</span><br></pre></td></tr></table></figure><h2 id="显示等待">显示等待</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># 显示等待</span></span><br><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.common.by <span class="keyword">import</span> By</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.support.ui <span class="keyword">import</span> WebDriverWait</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.support <span class="keyword">import</span> expected_conditions <span class="keyword">as</span> EC</span><br><span class="line"></span><br><span class="line">driver = webdriver.Firefox()</span><br><span class="line">driver.get(<span class="string">'http://www.baidu.com'</span>)</span><br><span class="line"><span class="comment"># 显示等待</span></span><br><span class="line"><span class="comment"># 参数driver： 浏览器驱动</span></span><br><span class="line"><span class="comment"># 参数timeout： 最大超时时间，单位秒</span></span><br><span class="line"><span class="comment"># 参数poll_frequency： 检测的间隔时间，默认为0.5秒</span></span><br><span class="line"><span class="comment"># 参数ignored_exceptions: 超时异常信息，默认为NoSuchElementException</span></span><br><span class="line"><span class="comment"># WebDriverWait(driver, timeout, poll_frequency=0.5, ignored_exceptions=None)</span></span><br><span class="line"><span class="comment"># until(method, message='') 调用该方法提供的驱动程序作为参数，直到返回True</span></span><br><span class="line"><span class="comment"># until_not(method, message='') 调用该方法提供的驱动程序作为参数，直到返回False</span></span><br><span class="line"><span class="comment"># EC.title_is 判断当前页面的标题是否是否等于预期</span></span><br><span class="line"><span class="comment"># EC.title_contains 判断当前页面的标题是否包含预期的字符串</span></span><br><span class="line"><span class="comment"># EC.presence_of_element_located 判断元素是否被加载在DOM树中，并不代表当前元素可见</span></span><br><span class="line"><span class="comment"># EC.visibility_of_element_located 判断元素是否可见（可见并非代表元素非隐藏，并且元素的宽和高均不等于0）</span></span><br><span class="line"><span class="comment"># EC.visibility_of 与visibility_of_element_located相同，该方法接受的参数为定位后的元素</span></span><br><span class="line"><span class="comment"># EC.presence_of_all_elements_located 判断是否至少有一个元素存在与DOM树中</span></span><br><span class="line"><span class="comment"># EC.text_to_be_present_in_element 判断某个元素的text是否包含预期的字符串</span></span><br><span class="line"><span class="comment"># EC.text_to_be_present_in_element_value 判断某个元素的vaule属性是否包含了预期的字符串</span></span><br><span class="line"><span class="comment"># EC.frame_to_be_available_and_switch_to_it 判断该表单是否可以切换进去，如果可以，返回True并switch进去，否则返回false</span></span><br><span class="line"><span class="comment"># EC.invisibility_of_element_located 判断某个元素是否不存在于DOM树中或者不可见</span></span><br><span class="line"><span class="comment"># EC.element_to_be_clickable 判断某个元素是否可以点击</span></span><br><span class="line"><span class="comment"># EC.staleness_of 等到一个元素从DOM树中移除</span></span><br><span class="line"><span class="comment"># EC.element_to_be_selected 判断某个元素是否被选中，一般用于下拉菜单</span></span><br><span class="line"><span class="comment"># EC.element_selection_state_to_be 判断某个元素的选中状态是否符合预期, 参数为定位后的元素</span></span><br><span class="line"><span class="comment"># EC.element_located_selection_state_to_be 判断某个元素的选中状态是否符合预期,该方法接受的参数为定位</span></span><br><span class="line"><span class="comment"># EC.alert_is_present 判断页面上是否有alert</span></span><br><span class="line"><span class="comment"># driver.find_element_by_id().is_displayed() 判断元素是否可见</span></span><br><span class="line">element = WebDriverWait(driver, <span class="number">5</span>, <span class="number">0.5</span>).until(EC.presence_of_element_located((By.ID, <span class="string">'kw'</span>)))</span><br><span class="line">element.send_keys(<span class="string">'selenium'</span>)</span><br><span class="line"><span class="comment"># driver.quit()</span></span><br></pre></td></tr></table></figure><h2 id="隐式等待">隐式等待</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># 隐式等待</span></span><br><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">from</span> selenium.common.exceptions <span class="keyword">import</span> NoSuchElementException</span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> ctime</span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> sleep</span><br><span class="line">driver = webdriver.Firefox()</span><br><span class="line"><span class="comment"># sleep(10)</span></span><br><span class="line">driver.implicitly_wait(<span class="number">10</span>)</span><br><span class="line">driver.get(<span class="string">'http://www.baidu.com'</span>)</span><br><span class="line"><span class="keyword">print</span> ctime()</span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    driver.find_element_by_id(<span class="string">'kw22'</span>).send_keys(<span class="string">'selenium'</span>)</span><br><span class="line"><span class="keyword">except</span> NoSuchElementException <span class="keyword">as</span> e:</span><br><span class="line">    <span class="keyword">print</span> e</span><br><span class="line"><span class="keyword">finally</span>:</span><br><span class="line">    <span class="keyword">print</span> ctime()</span><br></pre></td></tr></table></figure><h2 id="执行js代码">执行js代码</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># 执行js代码</span></span><br><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> sleep</span><br><span class="line"></span><br><span class="line"><span class="comment"># 访问百度</span></span><br><span class="line">driver = webdriver.Firefox()</span><br><span class="line">driver.get(<span class="string">'http://www.baidu.com'</span>)</span><br><span class="line">driver.set_window_size(<span class="number">600</span>, <span class="number">600</span>)</span><br><span class="line">driver.find_element_by_id(<span class="string">'kw'</span>).send_keys(<span class="string">'selenium'</span>)</span><br><span class="line">driver.find_element_by_id(<span class="string">'su'</span>).click()</span><br><span class="line">sleep(<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">js = <span class="string">'window.scrollTo(100, 450);'</span></span><br><span class="line">driver.execute_script(js)</span><br><span class="line">sleep(<span class="number">3</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># driver.quit()</span></span><br></pre></td></tr></table></figure><h2 id="处理cookie">处理cookie</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># cookie处理</span></span><br><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line">driver = webdriver.Firefox()</span><br><span class="line">driver.get(<span class="string">'http://www.youdao.com'</span>)</span><br><span class="line">driver.add_cookie(&#123;<span class="string">'name'</span>: <span class="string">'name-a'</span>, <span class="string">'value'</span>: <span class="string">'value-b'</span>&#125;)</span><br><span class="line"><span class="comment"># 获取cookie信息</span></span><br><span class="line">cookies = driver.get_cookies()</span><br><span class="line"><span class="keyword">print</span> cookies</span><br><span class="line"><span class="keyword">for</span> cookie <span class="keyword">in</span> cookies:</span><br><span class="line">    <span class="keyword">print</span> cookie</span><br><span class="line">    <span class="keyword">print</span> <span class="string">'&#123;&#125; -&gt; &#123;&#125;'</span>.format(cookie[<span class="string">'name'</span>], cookie[<span class="string">'value'</span>])</span><br><span class="line">driver.quit()</span><br></pre></td></tr></table></figure><h2 id="截图">截图</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># 窗口截图</span></span><br><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> sleep</span><br><span class="line"></span><br><span class="line"><span class="comment"># driver = webdriver.Firefox()</span></span><br><span class="line">driver =  webdriver.PhantomJS(executable_path=<span class="string">'/usr/bin/phantomjs'</span>)</span><br><span class="line">driver.get(<span class="string">'http://www.baidu.com'</span>)</span><br><span class="line"></span><br><span class="line">driver.find_element_by_id(<span class="string">'kw'</span>).send_keys(<span class="string">'selenium'</span>)</span><br><span class="line">driver.find_element_by_id(<span class="string">'su'</span>).click()</span><br><span class="line">sleep(<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">driver.get_screenshot_as_file(<span class="string">'./screen.png'</span>)</span><br><span class="line">driver.quit()</span><br></pre></td></tr></table></figure><h2 id="播放视频">播放视频</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> sleep</span><br><span class="line"></span><br><span class="line">driver = webdriver.Firefox()</span><br><span class="line">driver.get(<span class="string">'http://videojs.com'</span>)</span><br><span class="line"></span><br><span class="line">video = driver.find_element_by_xpath(<span class="string">'body/Setion[1]/div/video'</span>)</span><br><span class="line"><span class="comment"># 返回播放文件地址</span></span><br><span class="line">url = driver.execute_script(<span class="string">'return arguments[0].currentSrc;'</span>, video)</span><br><span class="line"><span class="keyword">print</span> url</span><br><span class="line"></span><br><span class="line"><span class="comment"># 播放视频</span></span><br><span class="line"><span class="keyword">print</span> <span class="string">'start'</span></span><br><span class="line">driver.execute_script(<span class="string">'return arguments[0].play()'</span>, video)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 播放15秒</span></span><br><span class="line">sleep(<span class="number">15</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 暂停播放</span></span><br><span class="line"><span class="keyword">print</span> <span class="string">'stop'</span></span><br><span class="line">driver.execute_script(<span class="string">'arguments[0].pause()'</span>, video)</span><br><span class="line"></span><br><span class="line"><span class="comment"># driver.quit()</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Wordpress插件开发基础入门</title>
      <link href="/2016/11/10/Wordpress%E6%8F%92%E4%BB%B6%E5%BC%80%E5%8F%91%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8/"/>
      <url>/2016/11/10/Wordpress%E6%8F%92%E4%BB%B6%E5%BC%80%E5%8F%91%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="插件">插件</h2><h3 id="创建">创建</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">├── hanchang-copyright</span><br><span class="line">│   └── hanchang-copyright.php</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># hanchang-copyright.php</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">Plugin Name: hanchang-copyright</span></span><br><span class="line"><span class="comment">Plugin URI: http://www.zhuohc.com</span></span><br><span class="line"><span class="comment">Description: 在页脚显示一段版权信息</span></span><br><span class="line"><span class="comment">Version: 1.0</span></span><br><span class="line"><span class="comment">Author: hanchang</span></span><br><span class="line"><span class="comment">Author URI: http://www.zhuohc.com</span></span><br><span class="line"><span class="comment">License: GPLv2</span></span><br><span class="line"><span class="comment">    */</span></span><br></pre></td></tr></table></figure><h3 id="插件启用和停用初始化">插件启用和停用初始化</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># hanchang-copyright.php</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">Plugin Name: hanchang-copyright</span></span><br><span class="line"><span class="comment">Plugin URI: http://www.zhuohc.com</span></span><br><span class="line"><span class="comment">Description: 在页脚显示一段版权信息</span></span><br><span class="line"><span class="comment">Version: 1.0</span></span><br><span class="line"><span class="comment">Author: hanchang</span></span><br><span class="line"><span class="comment">Author URI: http://www.zhuohc.com</span></span><br><span class="line"><span class="comment">License: GPLv2</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//定义插件启动时候调用的方法</span></span><br><span class="line">register_activation_hook( <span class="keyword">__FILE__</span>, <span class="string">'hanchang_copyright_install'</span>);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">hanchang_copyright_install</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//插件启动，添加一个默认的版权信息</span></span><br><span class="line">    update_option( <span class="string">"hanchang_copyright_text"</span>, <span class="string">"&lt;p style='color:red'&gt;本站点所有文章均为原创，转载请注明出处！&lt;/p&gt;"</span> );</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//定义插件停用时候调用的方法</span></span><br><span class="line">register_deactivation_hook( <span class="keyword">__FILE__</span>, <span class="string">'hanchang_copyright_deactivation'</span>);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">hanchang_copyright_deactivation</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//插件停用，设置停用标识为1</span></span><br><span class="line">    update_option( <span class="string">"hanchang_copyright_deactivation"</span>, <span class="string">"yes"</span> );</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="删除插件">删除插件</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── hanchang-copyright.php</span><br><span class="line">└── uninstall.php # 删除插件执行的文件</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># uninstall.php</span></span><br><span class="line"><span class="meta">&lt;?</span></span><br><span class="line"><span class="comment">// 如果 uninstall 不是从 WordPress 调用，则退出</span></span><br><span class="line"><span class="keyword">if</span>( !defined( <span class="string">'WP_UNINSTALL_PLUGIN'</span> ) )</span><br><span class="line"><span class="keyword">exit</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">//删除插件创建的项目，以确保不占用数据库资源</span></span><br><span class="line">delete_option( <span class="string">'hanchang_copyright_deactivation'</span> );</span><br><span class="line">delete_option( <span class="string">'hanchang_copyright_text'</span> );</span><br></pre></td></tr></table></figure><h3 id="add_action">add_action</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">add_action(&quot;$tag钩子名称&quot;, &quot;$function_to_do执行函数&quot;, $priorrity执行优先级, $accepted_arga带参数函数的参数个数)</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># hanchang-copyright.php</span></span><br><span class="line">    </span><br><span class="line"><span class="comment">//为 wp_footer 钩子挂载一个新的动作 hc_copyright_insert</span></span><br><span class="line">add_action( <span class="string">"wp_footer"</span>, <span class="string">"hc_copyright_insert"</span> );</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">hc_copyright_insert</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//输出一段字符串</span></span><br><span class="line">    <span class="keyword">echo</span> get_option( <span class="string">"hc_copyright_text"</span> );</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">add_action( <span class="string">"wp_head"</span>, <span class="string">"hanchang_copyright_insert_new"</span> );</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">hanchang_copyright_insert_new</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"&lt;script&gt;alert(1);&lt;/script&gt;"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">add_action( <span class="string">'save_post'</span>, <span class="string">'save_post_meta'</span>, <span class="number">10</span>, <span class="number">2</span> );</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">save_post_meta</span><span class="params">( $post_id, $post )</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    update_post_meta( $post_id, <span class="string">"save-time"</span>, <span class="string">"更新时间："</span> . date(<span class="string">"Y-m-d H:i:s"</span>) );</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="常见钩子">常见钩子</h3><ul><li><p>init 加载初始化</p></li><li><p>wp_head 加载添加到head标签中的内容</p></li><li><p>wp_enqueue_scripts 加载css或者js文件</p></li><li><p>wp_foot 加载添加到底部内容</p></li><li><p>save_post 添加保存文章</p></li><li><p>wp_trash_post 将文章添加到回收站</p></li><li><p>delete_post 将文章删除</p></li><li><p>wp_insert_comment 插入评论</p></li><li><p>user_register 用户注册</p></li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># hanchang-copyright.php</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">Plugin Name: hanchang-copyright</span></span><br><span class="line"><span class="comment">Plugin URI: http://www.zhuohc.com</span></span><br><span class="line"><span class="comment">Description: 在页脚显示一段版权信息</span></span><br><span class="line"><span class="comment">Version: 1.0</span></span><br><span class="line"><span class="comment">Author: hanchang</span></span><br><span class="line"><span class="comment">Author URI: http://www.zhuohc.com</span></span><br><span class="line"><span class="comment">License: GPLv2</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//定义插件启动时候调用的方法</span></span><br><span class="line">register_activation_hook( <span class="keyword">__FILE__</span>, <span class="string">'hanchang_copyright_install'</span>);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">hanchang_copyright_install</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//插件启动，添加一个默认的版权信息</span></span><br><span class="line">    update_option( <span class="string">"hanchang_copyright_text"</span>, <span class="string">"&lt;p style='color:red'&gt;本站点所有文章均为原创，转载请注明出处！&lt;/p&gt;"</span> );</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//定义插件停用时候调用的方法</span></span><br><span class="line">register_deactivation_hook( <span class="keyword">__FILE__</span>, <span class="string">'hanchang_copyright_deactivation'</span>);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">hanchang_copyright_deactivation</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//插件停用，设置停用标识为1</span></span><br><span class="line">    update_option( <span class="string">"hanchang_copyright_deactivation"</span>, <span class="string">"yes"</span> );</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//为 wp_footer 钩子挂载一个新的动作 hc_copyright_insert</span></span><br><span class="line">add_action( <span class="string">"wp_footer"</span>, <span class="string">"hc_copyright_insert"</span> );</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">hc_copyright_insert</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//输出一段字符串</span></span><br><span class="line">    <span class="keyword">echo</span> get_option( <span class="string">"hc_copyright_text"</span> );</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">add_action( <span class="string">"wp_head"</span>, <span class="string">"hanchang_copyright_insert_new"</span> );</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">hanchang_copyright_insert_new</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"&lt;script&gt;alert(1);&lt;/script&gt;"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">add_action( <span class="string">'save_post'</span>, <span class="string">'save_post_meta'</span>, <span class="number">10</span>, <span class="number">2</span> );</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">save_post_meta</span><span class="params">( $post_id, $post )</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    update_post_meta( $post_id, <span class="string">"save-time"</span>, <span class="string">"更新时间："</span> . date(<span class="string">"Y-m-d H:i:s"</span>) );</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//在输出内容之前，给页面管理添加摘要功能</span></span><br><span class="line">add_action( <span class="string">'init'</span>, <span class="string">'hc_add_excerpts_to_pages'</span> );</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">hc_add_excerpts_to_pages</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//给页面管理添加摘要的功能</span></span><br><span class="line">    add_post_type_support( <span class="string">'page'</span>, <span class="keyword">array</span>( <span class="string">'excerpt'</span> ) );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//wp_head钩子</span></span><br><span class="line">add_action(<span class="string">'wp_head'</span>,<span class="string">'hc_wp_head'</span>);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">hc_wp_head</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//只有首页输出描述</span></span><br><span class="line">    <span class="keyword">if</span>( is_home() )&#123; <span class="meta">?&gt;</span></span><br><span class="line">        &lt;meta name=<span class="string">"description"</span> content=<span class="string">"&lt;? bloginfo('description'); ?&gt;"</span> /&gt;</span><br><span class="line">    <span class="meta">&lt;?</span> &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//自定义引用样式表</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">hc_enqueue_style</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    wp_enqueue_style( <span class="string">'core'</span>, plugins_url(<span class="string">'css/hc_copyrighy.css'</span>, <span class="keyword">__FILE__</span>) , <span class="keyword">false</span> );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//自定义引用脚本文件</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">hc_enqueue_script</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    wp_enqueue_script( <span class="string">'my-js'</span>, plugins_url(<span class="string">'js/hc_copyrighy.js'</span>, <span class="keyword">__FILE__</span>), <span class="keyword">false</span> );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//引用文件的钩子</span></span><br><span class="line">add_action( <span class="string">'wp_enqueue_scripts'</span>, <span class="string">'hc_enqueue_style'</span>, <span class="number">5</span> );</span><br><span class="line">add_action( <span class="string">'wp_enqueue_scripts'</span>, <span class="string">'hc_enqueue_script'</span>, <span class="number">7</span> );</span><br><span class="line"></span><br><span class="line"><span class="comment">//删除所有挂载在 wp_enqueue_scripts 钩子上的方法</span></span><br><span class="line">remove_all_actions( <span class="string">'wp_enqueue_scripts'</span>, <span class="number">5</span> );</span><br><span class="line"></span><br><span class="line"><span class="comment">//评论被添加的时候触发</span></span><br><span class="line">add_action( <span class="string">'wp_insert_comment'</span>, <span class="string">'comment_inserted'</span>, <span class="number">10</span>, <span class="number">2</span> );</span><br><span class="line"></span><br><span class="line"><span class="comment">//移除 wp_insert_comment 钩子上的 comment_inserted 方法</span></span><br><span class="line">remove_action( <span class="string">'wp_insert_comment'</span>, <span class="string">'comment_inserted'</span>, <span class="number">10</span> );</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">comment_inserted</span><span class="params">($comment_id, $comment_object )</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//获取该评论所在文章的评论总数</span></span><br><span class="line">    $comments_count = wp_count_comments( $comment_object-&gt;comment_post_ID );</span><br><span class="line"></span><br><span class="line">    $commentarr = <span class="keyword">array</span>();</span><br><span class="line">    $commentarr[<span class="string">'comment_ID'</span>] = $comment_id;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//修改评论的内容，在评论内容前加上 “第&#123;$comments_count-&gt;total_comments&#125;个评论：” 这么一段字符串</span></span><br><span class="line">    $commentarr[<span class="string">'comment_content'</span>] = <span class="string">"第&#123;$comments_count-&gt;total_comments&#125;个评论："</span> . $comment_object-&gt;comment_content;</span><br><span class="line"></span><br><span class="line">    wp_update_comment( $commentarr );</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">add_action( <span class="string">'user_register'</span>, <span class="string">'myplugin_registration_save'</span>, <span class="number">10</span>, <span class="number">1</span> );</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">myplugin_registration_save</span><span class="params">( $user_id )</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//将新用户的个人说明，设置为注册时间</span></span><br><span class="line">    wp_update_user( <span class="keyword">array</span>( <span class="string">'ID'</span> =&gt; $user_id, <span class="string">'description'</span> =&gt; <span class="string">"注册时间："</span> . date(<span class="string">"Y-m-d H:i:s"</span>) ) );</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="过滤器">过滤器</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">add_filter($tag过滤器名称, $function_to_add需要添加的函数, $priority优先级, $acceptedargs添加的参数数量)</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># hanchang-copyright.php</span></span><br><span class="line"><span class="comment">//一开始，我们设置一个变量</span></span><br><span class="line">$value = <span class="string">"hello"</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//给名为 hc_filter 的过滤器，挂载一个 hc_filter_fun 方法，传递给 hc_filter 的变量都会经过 hc_filter_fun 方法进行过滤</span></span><br><span class="line"><span class="comment">//add_filter( "hc_filter", "hc_filter_fun" );</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//给名为 hc_filter 的过滤器，再挂载一个 hc_filter_fun_add_time 方法，传递给 hc_filter 的变量都会经过 hc_filter_fun、hc_filter_fun_add_time 两个方法进行过滤</span></span><br><span class="line"><span class="comment">//add_filter( "hc_filter", "hc_filter_fun_add_time" );</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//对 $value 值使用名为 hc_filter 的过滤器进行过滤，这个时候，由于 hc_filter 过滤器只挂载了 hc_filter_fun 方法，因此，只使用 hc_filter_fun 方法 过滤了一次，并且返回给 $myvar 变量</span></span><br><span class="line"><span class="comment">//$myvar = apply_filters( "hc_filter", $value );</span></span><br><span class="line"></span><br><span class="line">add_filter( <span class="string">"the_content"</span>, <span class="string">"hc_filter_fun"</span> );</span><br><span class="line">add_filter( <span class="string">"the_content"</span>, <span class="string">"hc_filter_fun_add_time"</span> );</span><br></pre></td></tr></table></figure><h3 id="带参数的过滤器">带参数的过滤器</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># hanchang-copyright.php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">suppress_if_blurb</span><span class="params">( $title, $id = null )</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ( in_category(<span class="string">'wpcj'</span>, $id ) ) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">'不显示标题'</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> $title . <span class="string">"..."</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//对 the_title 过滤器挂载一个 suppress_if_blurb 方法，优先级为10，传递的参数有2个</span></span><br><span class="line">add_filter( <span class="string">'the_title'</span>, <span class="string">'suppress_if_blurb'</span>, <span class="number">10</span>, <span class="number">2</span> );</span><br></pre></td></tr></table></figure><h3 id="常见过滤器">常见过滤器</h3><ul><li>the_content 文章内容</li><li>content_save_pre 文章保存前</li><li>the_title 文章标题</li><li>wp_handle_upload_prefilter 上传文件之前</li></ul><h3 id="创建菜单">创建菜单</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">add_menu_page  # 添加菜单</span><br><span class="line">add_submenu_page  # 添加子菜单</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># hanchang-copyright.php</span></span><br><span class="line"><span class="comment">// admin_menu钩子挂载创建菜单方法</span></span><br><span class="line">add_action( <span class="string">'admin_menu'</span>, <span class="string">'hc_create_menu'</span> );</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">hc_create_menu</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 创建顶级菜单</span></span><br><span class="line">    add_menu_page(</span><br><span class="line">        <span class="string">'Hanchang的插件首页'</span>, <span class="comment">// 菜单title标题</span></span><br><span class="line">        <span class="string">'hanchang-copyright'</span>,  <span class="comment">// 菜单名称，显示在后台管理页面侧边栏</span></span><br><span class="line">        <span class="string">'manage_options'</span>, <span class="comment">// 浏览插件所需要的权限=管理员权限</span></span><br><span class="line">        <span class="string">'hanchang_copyright'</span> ,  <span class="comment">// 菜单别名，不能与其他插件冲突</span></span><br><span class="line">        <span class="string">'hanchang_settings_page'</span>,  <span class="comment">// 菜单需要显示的页面，调用的哪个方法</span></span><br><span class="line">        plugins_url( <span class="string">'/images/icon.png'</span>, <span class="keyword">__FILE__</span> )  <span class="comment">// 调用图标</span></span><br><span class="line">    );</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 创建子菜单</span></span><br><span class="line">    add_submenu_page(</span><br><span class="line">        <span class="string">'hanchang_copyright'</span>,  <span class="comment">// 父级菜单别名</span></span><br><span class="line">        <span class="string">'关于HC的插件'</span>,  <span class="comment">// 菜单title标题</span></span><br><span class="line">        <span class="string">'关于'</span>,  <span class="comment">//  菜单名称，显示在后台管理页面侧边栏</span></span><br><span class="line">        <span class="string">'manage_options'</span>,  <span class="comment">// 浏览插件所需要的权限=管理员权限</span></span><br><span class="line">        <span class="string">'hc_copyright_about'</span>,  <span class="comment">// 菜单别名，不能与其他插件冲突</span></span><br><span class="line">        <span class="string">'hc_create_submenu_menu'</span>  <span class="comment">// 调用方法</span></span><br><span class="line">    );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">hanchang_settings_page</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="meta">?&gt;</span></span><br><span class="line">    &lt;h2&gt;插件顶级菜单&lt;/h2&gt;</span><br><span class="line">    <span class="meta">&lt;?</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">hc_create_submenu_menu</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">?&gt;</span></span><br><span class="line">    &lt;h2&gt;子菜单&lt;/h2&gt;</span><br><span class="line">    <span class="meta">&lt;?</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="小工具">小工具</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#hanchang-copyright.php</span></span><br><span class="line"><span class="comment">// 使用 widgets_init 动作钩子来执行自定义的函数</span></span><br><span class="line">add_action( <span class="string">'widgets_init'</span>, <span class="string">'hc_register_widgets'</span> );</span><br><span class="line"></span><br><span class="line"><span class="comment">// 注册小工具</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">hc_register_widgets</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    register_widget( <span class="string">'hc_widget_info'</span> );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//使用 WP_Widget 类来创建小工具</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">hc_widget_info</span> <span class="keyword">extends</span> <span class="title">WP_Widget</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//构造函数</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        $widget_ops = <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">'classname'</span> =&gt; <span class="string">'hc_widget_info'</span>,</span><br><span class="line">            <span class="string">'description'</span> =&gt; <span class="string">'显示作者的个人信息'</span></span><br><span class="line">        );</span><br><span class="line">        <span class="keyword">$this</span>-&gt;WP_Widget( <span class="string">'显示作者个人信息'</span>, <span class="string">'作者的小工具'</span>, $widget_ops );</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//小工具管理界面</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">form</span><span class="params">( $instance )</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        $defaults = <span class="keyword">array</span>( <span class="string">'title'</span> =&gt; <span class="string">'作者的个人信息'</span>, <span class="string">'xingming'</span> =&gt; <span class="string">'作者'</span>, <span class="string">'book'</span> =&gt; <span class="string">'《作者》'</span> );</span><br><span class="line">        $instance = wp_parse_args( (<span class="keyword">array</span>) $instance, $defaults );</span><br><span class="line"></span><br><span class="line">        $title = $instance[<span class="string">'title'</span>];</span><br><span class="line">        $xingming = $instance[<span class="string">'xingming'</span>];</span><br><span class="line">        $book = $instance[<span class="string">'book'</span>];</span><br><span class="line">        <span class="meta">?&gt;</span></span><br><span class="line">        &lt;p&gt;标题: &lt;input class="widefat" name="&lt;?php echo $this-&gt;get_field_name( 'title' ); ?&gt;" type="text" value="&lt;?php echo esc_attr( $title ); ?&gt;" /&gt;&lt;/p&gt;</span><br><span class="line">        &lt;p&gt;姓名: &lt;input class="widefat" name="&lt;?php echo $this-&gt;get_field_name( 'xingming' ); ?&gt; "type="text" value="&lt;?php echo esc_attr( $xingming ); ?&gt; " /&gt;&lt;/p&gt;</span><br><span class="line">        &lt;p&gt;著作: &lt;textarea class="widefat" name=" &lt;?php echo $this-&gt;get_field_name( 'book' ); ?&gt; " /&gt;&lt;?php echo esc_attr( $book ); ?&gt;&lt;/textarea&gt; &lt;/p&gt;</span><br><span class="line">        <span class="meta">&lt;?php</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//保存小工具设置</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">update</span><span class="params">( $new_instance, $old_instance )</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        $instance = $old_instance;</span><br><span class="line"></span><br><span class="line">        $instance[<span class="string">'title'</span>] = strip_tags( trim( $new_instance[<span class="string">'title'</span>] ) );</span><br><span class="line">        $instance[<span class="string">'xingming'</span>] = strip_tags( trim(  $new_instance[<span class="string">'xingming'</span>] ) );</span><br><span class="line">        $instance[<span class="string">'book'</span>] = strip_tags( trim( $new_instance[<span class="string">'book'</span>] ) );</span><br><span class="line">        <span class="keyword">return</span> $instance;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//显示小工具</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">widget</span><span class="params">( $args, $instance )</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        extract( $args );</span><br><span class="line"></span><br><span class="line">        $title = apply_filters( <span class="string">'widget_title'</span>, $instance[<span class="string">'title'</span>] );</span><br><span class="line">        $xingming = <span class="keyword">empty</span>( $instance[<span class="string">'xingming'</span>] ) ? <span class="string">' '</span> : $instance[<span class="string">'xingming'</span>];</span><br><span class="line">        $book = <span class="keyword">empty</span>( $instance[<span class="string">'book'</span>] ) ? <span class="string">' '</span> : $instance[<span class="string">'book'</span>];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'&lt;p&gt; 标题: '</span> . $title . <span class="string">'&lt;/p&gt;'</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'&lt;p&gt; 姓名: '</span> . $xingming . <span class="string">'&lt;/p&gt;'</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'&lt;p&gt; 著作: '</span> . $book . <span class="string">'&lt;/p&gt;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="添加元数据框">添加元数据框</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># hanchang-copyright.php</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 添加一个元数据框到 post 和 page 的管理界面中</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">myplugin_add_meta_box</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    $screens = <span class="keyword">array</span>( <span class="string">'post'</span>, <span class="string">'page'</span> );</span><br><span class="line"></span><br><span class="line">    add_meta_box(</span><br><span class="line">        <span class="string">'myplugin_sectionid'</span>,  <span class="comment">// 元数据框的html代码中的id值</span></span><br><span class="line">        <span class="string">'转载自'</span>,  <span class="comment">// 元数据框标题</span></span><br><span class="line">        <span class="string">'myplugin_meta_box_callback'</span>,  <span class="comment">// 回调函数名称，输出元数据框中的内容</span></span><br><span class="line">        $screens  <span class="comment">// 元数据框需要添加在哪个分类内的（文章或者页面）</span></span><br><span class="line">    );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//需要给 add_meta_boxes 钩子，挂载一个自定义的方法</span></span><br><span class="line">add_action( <span class="string">'add_meta_boxes'</span>, <span class="string">'myplugin_add_meta_box'</span> );</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 元数据框展示代码</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">myplugin_meta_box_callback</span><span class="params">( $post )</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 添加一个验证信息，这个在保存元数据的时候用到</span></span><br><span class="line">    wp_nonce_field( <span class="string">'myplugin_save_meta_box_data'</span>, <span class="string">'myplugin_meta_box_nonce'</span> );</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     * 输出元数据信息</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    $value = get_post_meta( $post-&gt;ID, <span class="string">'_zzurl'</span>, <span class="keyword">true</span> );</span><br><span class="line"></span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'&lt;label for="myplugin_new_field"&gt;'</span>;</span><br><span class="line">    _e( <span class="string">'本文章转载自：'</span> );</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'&lt;/label&gt; '</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'&lt;input type="text" id="_zzurl" name="_zzurl" value="'</span> . esc_attr( $value ) . <span class="string">'" size="25" /&gt;'</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">myplugin_save_meta_box_data</span><span class="params">( $post_id )</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//验证是否为有效信息</span></span><br><span class="line">    <span class="keyword">if</span> ( ! <span class="keyword">isset</span>( $_POST[<span class="string">'myplugin_meta_box_nonce'</span>] ) ) &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ( ! wp_verify_nonce( $_POST[<span class="string">'myplugin_meta_box_nonce'</span>], <span class="string">'myplugin_save_meta_box_data'</span> ) ) &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ( defined( <span class="string">'DOING_AUTOSAVE'</span> ) &amp;&amp; DOING_AUTOSAVE ) &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Check the user's permissions.</span></span><br><span class="line">    <span class="keyword">if</span> ( <span class="keyword">isset</span>( $_POST[<span class="string">'post_type'</span>] ) &amp;&amp; <span class="string">'page'</span> == $_POST[<span class="string">'post_type'</span>] ) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> ( ! current_user_can( <span class="string">'edit_page'</span>, $post_id ) ) &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> ( ! current_user_can( <span class="string">'edit_post'</span>, $post_id ) ) &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ( ! <span class="keyword">isset</span>( $_POST[<span class="string">'_zzurl'</span>] ) ) &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    $my_data = sanitize_text_field( $_POST[<span class="string">'_zzurl'</span>] );</span><br><span class="line"></span><br><span class="line">    update_post_meta( $post_id, <span class="string">'_zzurl'</span>, $my_data );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//文章保存的时候，会调用 save_post 钩子，因此我们要借助这个钩子来保存元数据框内的数据</span></span><br><span class="line">add_action( <span class="string">'save_post'</span>, <span class="string">'myplugin_save_meta_box_data'</span> );</span><br></pre></td></tr></table></figure><h3 id="后台常见css样式表">后台常见css样式表</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># copyright.php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">hanchang_settings_page</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="meta">?&gt;</span></span><br><span class="line">    &lt;div class="wrap"&gt;</span><br><span class="line">        &lt;h2&gt;插件顶级菜单&lt;/h2&gt;</span><br><span class="line">        &lt;div id="message" class="updated"&gt;设置保存成功&lt;/div&gt;</span><br><span class="line">        &lt;div id="message" class="error"&gt;保存出现错误&lt;/div&gt;</span><br><span class="line">        &lt;p&gt;</span><br><span class="line">            &lt;input type=<span class="string">"submit"</span> name=<span class="string">"Save"</span> value=<span class="string">"保存设置"</span> /&gt;</span><br><span class="line">            &lt;input type="submit" name="Save" value="保存设置" class="button" /&gt;</span><br><span class="line">            &lt;input type="submit" name="Save" value="保存设置" class="button button-primary" /&gt;</span><br><span class="line">            &lt;input type="submit" name="Save" value="保存设置" class="button button-secondary" /&gt;</span><br><span class="line">            &lt;input type="submit" name="Save" value="保存设置" class="button button-large" /&gt;</span><br><span class="line">            &lt;input type="submit" name="Save" value="保存设置" class="button button-small" /&gt;</span><br><span class="line">            &lt;input type="submit" name="Save" value="保存设置" class="button button-hero" /&gt;</span><br><span class="line">        &lt;/p&gt;</span><br><span class="line">        &lt;p&gt;</span><br><span class="line">            &lt;a href=<span class="string">"#"</span>&gt;搜索&lt;/a&gt;</span><br><span class="line">            &lt;a href="#" class="button"&gt;搜索&lt;/a&gt;</span><br><span class="line">            &lt;a href="#" class="button button-primary"&gt;搜索&lt;/a&gt;</span><br><span class="line">            &lt;a href="#" class="button button-secondary"&gt;搜索&lt;/a&gt;</span><br><span class="line">            &lt;a href="#" class="button button-large"&gt;搜索&lt;/a&gt;</span><br><span class="line">            &lt;a href="#" class="button button-small"&gt;搜索&lt;/a&gt;</span><br><span class="line">            &lt;a href="#" class="button button-hero"&gt;搜索&lt;/a&gt;</span><br><span class="line">        &lt;/p&gt;</span><br><span class="line"></span><br><span class="line">        &lt;form method=<span class="string">"POST"</span> action=<span class="string">""</span>&gt;</span><br><span class="line">            &lt;table class="form-table"&gt;</span><br><span class="line">                &lt;tr valign=<span class="string">"top"</span>&gt;</span><br><span class="line">                    &lt;th&gt;&lt;label <span class="keyword">for</span>=<span class="string">"xingming"</span>&gt;姓名：&lt;/label&gt;&lt;/th&gt;</span><br><span class="line">                    &lt;td&gt;&lt;input id=<span class="string">"xingming"</span> name=<span class="string">"xingming"</span> /&gt;&lt;/td&gt;</span><br><span class="line">                &lt;/tr&gt;</span><br><span class="line">                &lt;tr valign=<span class="string">"top"</span>&gt;</span><br><span class="line">                    &lt;th&gt;&lt;label <span class="keyword">for</span>=<span class="string">"shenfen"</span>&gt;身份：&lt;/label&gt;&lt;/th&gt;</span><br><span class="line">                    &lt;td&gt;</span><br><span class="line">                        &lt;select name=<span class="string">"shenfen"</span>&gt;</span><br><span class="line">                            &lt;option value=<span class="string">"在校"</span>&gt;在校&lt;/option&gt;</span><br><span class="line">                            &lt;option value=<span class="string">"毕业"</span>&gt;毕业&lt;/option&gt;</span><br><span class="line">                        &lt;/select&gt;</span><br><span class="line">                    &lt;/td&gt;</span><br><span class="line">                &lt;/tr&gt;</span><br><span class="line">                &lt;tr valign=<span class="string">"top"</span>&gt;</span><br><span class="line">                    &lt;th&gt;&lt;label <span class="keyword">for</span>=<span class="string">"tongyi"</span>&gt;同意注册&lt;/label&gt;&lt;/th&gt;</span><br><span class="line">                    &lt;td&gt;&lt;input type=<span class="string">"checkbox"</span> name=<span class="string">"tongyi"</span> /&gt;&lt;/td&gt;</span><br><span class="line">                &lt;/tr&gt;</span><br><span class="line">                &lt;tr valign=<span class="string">"top"</span>&gt;</span><br><span class="line">                    &lt;th&gt;&lt;label <span class="keyword">for</span>=<span class="string">"xingbie"</span>&gt;性别&lt;/label&gt;&lt;/th&gt;</span><br><span class="line">                    &lt;td&gt;</span><br><span class="line">                        &lt;input type=<span class="string">"radio"</span> name=<span class="string">"xingbie"</span> value=<span class="string">"男"</span> /&gt; 男</span><br><span class="line">                        &lt;input type=<span class="string">"radio"</span> name=<span class="string">"xingbie"</span> value=<span class="string">"女"</span> /&gt; 女</span><br><span class="line">                    &lt;/td&gt;</span><br><span class="line">                &lt;/tr&gt;</span><br><span class="line">                &lt;tr valign=<span class="string">"top"</span>&gt;</span><br><span class="line">                    &lt;th&gt;&lt;label <span class="keyword">for</span>=<span class="string">"beizhu"</span>&gt;备注&lt;/label&gt;&lt;/th&gt;</span><br><span class="line">                    &lt;td&gt;&lt;textarea name=<span class="string">"beizhu"</span>&gt;&lt;/textarea&gt;&lt;/td&gt;</span><br><span class="line">                &lt;/tr&gt;</span><br><span class="line">                &lt;tr valign=<span class="string">"top"</span>&gt;</span><br><span class="line">                    &lt;td&gt;</span><br><span class="line">                        &lt;input type="submit" name="save" value="保存" class="button-primary" /&gt;</span><br><span class="line">                        &lt;input type="submit" name="reset" value="重置" class="button-secondary" /&gt;</span><br><span class="line">                    &lt;/td&gt;</span><br><span class="line">                &lt;/tr&gt;</span><br><span class="line">            &lt;/table&gt;</span><br><span class="line">        &lt;/form&gt;</span><br><span class="line"></span><br><span class="line">        &lt;table class="widefat striped"&gt;</span><br><span class="line">            &lt;thead&gt;</span><br><span class="line">            &lt;tr&gt;</span><br><span class="line">                &lt;th&gt;序号&lt;/th&gt;</span><br><span class="line">                &lt;th&gt;姓名&lt;/th&gt;</span><br><span class="line">            &lt;/tr&gt;</span><br><span class="line">            &lt;/thead&gt;</span><br><span class="line">            &lt;tbody&gt;</span><br><span class="line">            &lt;tr&gt;</span><br><span class="line">                &lt;td&gt;<span class="number">1</span>&lt;/td&gt;</span><br><span class="line">                &lt;td&gt;黄聪&lt;/td&gt;</span><br><span class="line">            &lt;/tr&gt;</span><br><span class="line">            &lt;tr&gt;</span><br><span class="line">                &lt;td&gt;<span class="number">2</span>&lt;/td&gt;</span><br><span class="line">                &lt;td&gt;黄聪&lt;/td&gt;</span><br><span class="line">            &lt;/tr&gt;</span><br><span class="line">            &lt;tr&gt;</span><br><span class="line">                &lt;td&gt;<span class="number">3</span>&lt;/td&gt;</span><br><span class="line">                &lt;td&gt;黄聪&lt;/td&gt;</span><br><span class="line">            &lt;/tr&gt;</span><br><span class="line">            &lt;/tbody&gt;</span><br><span class="line">            &lt;tfoot&gt;</span><br><span class="line">            &lt;tr&gt;</span><br><span class="line">                &lt;th&gt;序号&lt;/th&gt;</span><br><span class="line">                &lt;th&gt;姓名&lt;/th&gt;</span><br><span class="line">            &lt;/tr&gt;</span><br><span class="line">            &lt;/tfoot&gt;</span><br><span class="line">        &lt;/table&gt;</span><br><span class="line"></span><br><span class="line">        &lt;div class="tablenav"&gt;</span><br><span class="line">            &lt;div class="tablenav-pages"&gt;</span><br><span class="line">                &lt;span class="displaying-num"&gt;第1页，共458页&lt;/span&gt;</span><br><span class="line">                &lt;span class="page-numbers current"&gt;1&lt;/span&gt;</span><br><span class="line">                &lt;a href="#" class="page-numbers"&gt;2&lt;/a&gt;</span><br><span class="line">                &lt;a href="#" class="page-numbers"&gt;3&lt;/a&gt;</span><br><span class="line">                &lt;a href="#" class="page-numbers"&gt;4&lt;/a&gt;</span><br><span class="line">                &lt;a href="#" class="next page-numbers"&gt;»&lt;/a&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    <span class="meta">&lt;?</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="保存插件设置到数据库中">保存插件设置到数据库中</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">├── hc-test</span><br><span class="line">│   ├── css</span><br><span class="line">│   ├── hc-test.php</span><br><span class="line">│   ├── images</span><br><span class="line">│   └── js</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br></pre></td><td class="code"><pre><span class="line">hc-test.php</span><br><span class="line">    </span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">Plugin Name: hc-test</span></span><br><span class="line"><span class="comment">Plugin URI: http://zhuohc.com</span></span><br><span class="line"><span class="comment">Description: 测试插件</span></span><br><span class="line"><span class="comment">Version: 1.0</span></span><br><span class="line"><span class="comment">Author: hc</span></span><br><span class="line"><span class="comment">Author URI: http://zhuohc.com</span></span><br><span class="line"><span class="comment">License: GPLv2</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//设置时区为 亚洲/上海</span></span><br><span class="line">date_default_timezone_set(<span class="string">'Asia/Shanghai'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//定义插件启动时候调用的方法</span></span><br><span class="line">register_activation_hook( <span class="keyword">__FILE__</span>, <span class="string">'hc_test_install'</span>);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">hc_test_install</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">global</span> $wpdb;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">if</span>( $wpdb-&gt;get_var( <span class="string">"SHOW TABLES LIKE '&#123;$wpdb-&gt;prefix&#125;test'"</span> ) != <span class="string">"&#123;$wpdb-&gt;prefix&#125;test"</span> ) </span><br><span class="line">   &#123;</span><br><span class="line">      $sql = <span class="string">"CREATE TABLE IF NOT EXISTS `&#123;$wpdb-&gt;prefix&#125;test` (</span></span><br><span class="line"><span class="string">           `id` int(11) NOT NULL auto_increment COMMENT '编号',</span></span><br><span class="line"><span class="string">           `color` varchar(10) DEFAULT '' COMMENT '字体颜色',</span></span><br><span class="line"><span class="string">           `size`  varchar(10) DEFAULT '' COMMENT '字体大小',</span></span><br><span class="line"><span class="string">           PRIMARY KEY  (`id`)</span></span><br><span class="line"><span class="string">         ) DEFAULT CHARSET=utf8 AUTO_INCREMENT=0;"</span>;</span><br><span class="line">      $wpdb-&gt;query( $sql );</span><br><span class="line"></span><br><span class="line">      $sql = <span class="string">"REPLACE INTO `&#123;$wpdb-&gt;prefix&#125;test` VALUES (1, '#FF0000','20');"</span>;</span><br><span class="line">      $wpdb-&gt;query( $sql );</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">add_action( <span class="string">'admin_menu'</span>, <span class="string">'hc_test_create_menu'</span> );</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">hc_test_create_menu</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">   <span class="comment">//创建顶级菜单</span></span><br><span class="line">   add_menu_page( </span><br><span class="line">      <span class="string">'HC-TEST'</span>, </span><br><span class="line">      <span class="string">'HC的插件'</span>,</span><br><span class="line">      <span class="string">'manage_options'</span>, </span><br><span class="line">      <span class="string">'hc_test'</span> ,</span><br><span class="line">      <span class="string">'hc_settings_page'</span>,</span><br><span class="line">      plugins_url( <span class="string">'/images/icon.png'</span>, <span class="keyword">__FILE__</span> )</span><br><span class="line">   );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">hc_settings_page</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">global</span> $wpdb;</span><br><span class="line"></span><br><span class="line">   <span class="comment">//当提交了，并且验证信息正确</span></span><br><span class="line">   <span class="keyword">if</span>( !<span class="keyword">empty</span>( $_POST ) &amp;&amp; check_admin_referer( <span class="string">'hc_test_nonce'</span> ) ) &#123;</span><br><span class="line"></span><br><span class="line">      <span class="comment">//更新设置</span></span><br><span class="line">      update_option( <span class="string">'hc_test_bold'</span>, $_POST[<span class="string">'hc_test_bold'</span>] );</span><br><span class="line"></span><br><span class="line">      $wpdb-&gt;update( <span class="string">"&#123;$wpdb-&gt;prefix&#125;test"</span>, <span class="keyword">array</span>( <span class="string">'color'</span> =&gt; $_POST[<span class="string">'color'</span>], <span class="string">'size'</span> =&gt; $_POST[<span class="string">'size'</span>] ), <span class="keyword">array</span>( <span class="string">'id'</span> =&gt; <span class="number">1</span> ) );</span><br><span class="line">      <span class="meta">?&gt;</span></span><br><span class="line">      &lt;div id="message" class="updated"&gt;</span><br><span class="line">         &lt;p&gt;&lt;strong&gt;保存成功！&lt;/strong&gt;&lt;/p&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">      <span class="meta">&lt;?</span></span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   $sql = <span class="string">"SELECT * FROM `&#123;$wpdb-&gt;prefix&#125;test`"</span>;</span><br><span class="line">   $row = $wpdb-&gt;get_row( $sql, ARRAY_A );</span><br><span class="line"></span><br><span class="line">   $color = $row[<span class="string">'color'</span>];</span><br><span class="line">   $size = $row[<span class="string">'size'</span>];</span><br><span class="line">   <span class="meta">?&gt;</span></span><br><span class="line">   &lt;div class="wrap"&gt;</span><br><span class="line">      &lt;h2&gt;插件顶级菜单&lt;/h2&gt;</span><br><span class="line">      &lt;form action=<span class="string">""</span> method=<span class="string">"post"</span>&gt;</span><br><span class="line">         &lt;p&gt;&lt;label <span class="keyword">for</span>=<span class="string">"color"</span>&gt;字体颜色：&lt;/label&gt;&lt;input type=<span class="string">"text"</span> name=<span class="string">"color"</span> value=<span class="string">"&lt;?php echo $color; ?&gt;"</span> /&gt;&lt;/p&gt;</span><br><span class="line">         &lt;p&gt;&lt;label <span class="keyword">for</span>=<span class="string">"size"</span>&gt;字体大小：&lt;/label&gt;</span><br><span class="line">         &lt;select name=<span class="string">"size"</span>&gt;</span><br><span class="line">            &lt;option value=<span class="string">"12"</span> <span class="meta">&lt;?</span> selected( <span class="string">'12'</span>, $size ); <span class="meta">?&gt;</span>&gt;<span class="number">12</span>&lt;/option&gt;</span><br><span class="line">            &lt;option value=<span class="string">"14"</span> <span class="meta">&lt;?</span> selected( <span class="string">'14'</span>, $size ); <span class="meta">?&gt;</span>&gt;<span class="number">14</span>&lt;/option&gt;</span><br><span class="line">            &lt;option value=<span class="string">"16"</span> <span class="meta">&lt;?</span> selected( <span class="string">'16'</span>, $size ); <span class="meta">?&gt;</span>&gt;<span class="number">16</span>&lt;/option&gt;</span><br><span class="line">            &lt;option value=<span class="string">"18"</span> <span class="meta">&lt;?</span> selected( <span class="string">'18'</span>, $size ); <span class="meta">?&gt;</span>&gt;<span class="number">18</span>&lt;/option&gt;</span><br><span class="line">            &lt;option value=<span class="string">"20"</span> <span class="meta">&lt;?</span> selected( <span class="string">'20'</span>, $size ); <span class="meta">?&gt;</span>&gt;<span class="number">20</span>&lt;/option&gt;</span><br><span class="line">         &lt;/select&gt;&lt;/p&gt;</span><br><span class="line">         &lt;p&gt;&lt;label <span class="keyword">for</span>=<span class="string">"hc_test_obold"</span>&gt;字体加粗：&lt;/label&gt;&lt;input name=<span class="string">"hc_test_bold"</span> type=<span class="string">"checkbox"</span>  value=<span class="string">"1"</span> <span class="meta">&lt;?</span> checked( <span class="number">1</span>, get_option( <span class="string">'hc_test_bold'</span> ) ); <span class="meta">?&gt;</span> /&gt; 加粗&lt;/p&gt;</span><br><span class="line">         &lt;p&gt;&lt;input type=<span class="string">"submit"</span> name=<span class="string">"submit"</span> value=<span class="string">"保存设置"</span> /&gt;&lt;/p&gt;</span><br><span class="line">         <span class="meta">&lt;?</span></span><br><span class="line">            <span class="comment">//输出一个验证信息</span></span><br><span class="line">            wp_nonce_field(<span class="string">'hc_test_nonce'</span>);</span><br><span class="line">         <span class="meta">?&gt;</span></span><br><span class="line">      &lt;/form&gt;</span><br><span class="line">   &lt;/div&gt;</span><br><span class="line">   <span class="meta">&lt;?</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">add_action( <span class="string">'wp_head'</span>, <span class="string">'hc_test_head_fun'</span> );</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">hc_test_head_fun</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">global</span> $wpdb;</span><br><span class="line"></span><br><span class="line">   <span class="comment">//获取自定义数据库中的设置</span></span><br><span class="line">   $sql = <span class="string">"SELECT * FROM `&#123;$wpdb-&gt;prefix&#125;test`"</span>;</span><br><span class="line">   $row = $wpdb-&gt;get_row( $sql, ARRAY_A );</span><br><span class="line"></span><br><span class="line">   <span class="comment">//获取options表中的设置选项</span></span><br><span class="line">   $bold = get_option( <span class="string">"hc_test_bold"</span> ) == <span class="number">1</span> ? <span class="string">"bold"</span> : <span class="string">"normal"</span>;</span><br><span class="line"></span><br><span class="line">   <span class="meta">?&gt;</span>&lt;style&gt;body&#123;color:<span class="meta">&lt;?</span> <span class="keyword">echo</span> $row[<span class="string">"color"</span>] <span class="meta">?&gt;</span>;font-size:<span class="meta">&lt;?</span> <span class="keyword">echo</span> $row[<span class="string">"size"</span>] <span class="meta">?&gt;</span>px;font-weight:<span class="meta">&lt;?</span> <span class="keyword">echo</span> $bold; <span class="meta">?&gt;</span>;&#125;&lt;/style&gt;<span class="meta">&lt;?</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="使用wordpress内置api设置插件属性">使用wordpress内置api设置插件属性</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># hc-test.php</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">Plugin Name: hc-test</span></span><br><span class="line"><span class="comment">Plugin URI: http://zhuohc.com</span></span><br><span class="line"><span class="comment">Description: 测试插件</span></span><br><span class="line"><span class="comment">Version: 1.0</span></span><br><span class="line"><span class="comment">Author: hc</span></span><br><span class="line"><span class="comment">Author URI: http://zhuohc.com</span></span><br><span class="line"><span class="comment">License: GPLv2</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//设置时区为 亚洲/上海</span></span><br><span class="line">date_default_timezone_set(<span class="string">'Asia/Shanghai'</span>);</span><br><span class="line"></span><br><span class="line">add_action( <span class="string">'admin_menu'</span>, <span class="string">'test_create_menu'</span> );</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">test_create_menu</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">   <span class="comment">//创建顶级菜单</span></span><br><span class="line">   add_menu_page(</span><br><span class="line">      <span class="string">'HC的插件首页'</span>,</span><br><span class="line">      <span class="string">'HC的插件'</span>,</span><br><span class="line">      <span class="string">'manage_options'</span>,</span><br><span class="line">      <span class="string">'hc_test'</span> ,</span><br><span class="line">      <span class="string">'hc_settings_page'</span>,</span><br><span class="line">      plugins_url( <span class="string">'/images/icon.png'</span>, <span class="keyword">__FILE__</span> )</span><br><span class="line">   );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">add_action( <span class="string">'admin_init'</span>, <span class="string">'register_hc_test_setting'</span> );</span><br><span class="line"></span><br><span class="line"><span class="comment">//使用register_setting()注册要存储的字段</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">register_hc_test_setting</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">   <span class="comment">//注册一个选项，用于装载所有插件设置项</span></span><br><span class="line">   $option_group = <span class="string">"hc_test_group"</span>;</span><br><span class="line">   register_setting( $option_group, <span class="string">'hc_test_option'</span> );</span><br><span class="line"></span><br><span class="line">   <span class="comment">//添加选项设置区域</span></span><br><span class="line">   $setting_section = <span class="string">"hc_test_setting_section"</span>;</span><br><span class="line">   add_settings_section(</span><br><span class="line">      $setting_section,</span><br><span class="line">      <span class="string">'设置'</span>,  <span class="comment">// 标题</span></span><br><span class="line">      <span class="string">'hc_test_setting_section_function'</span>,  <span class="comment">// 调用方法，自定义输出</span></span><br><span class="line">      $option_group</span><br><span class="line">   );</span><br><span class="line"></span><br><span class="line">   <span class="comment">//设置字体颜色</span></span><br><span class="line">   add_settings_field(</span><br><span class="line">      <span class="string">'hc_test_color'</span>,  <span class="comment">// 字段id</span></span><br><span class="line">      <span class="string">'字体颜色'</span>,  <span class="comment">// 字段标题</span></span><br><span class="line">      <span class="string">'hc_test_color_function'</span>, <span class="comment">// 字段对应函数方法</span></span><br><span class="line">      $option_group,  <span class="comment">// 字段对应分组</span></span><br><span class="line">      $setting_section  <span class="comment">// 字段对应设置选项</span></span><br><span class="line">   );</span><br><span class="line"></span><br><span class="line">   <span class="comment">//设置字体大小</span></span><br><span class="line">   add_settings_field(</span><br><span class="line">      <span class="string">'hc_test_size'</span>,</span><br><span class="line">      <span class="string">'字体大小'</span>,</span><br><span class="line">      <span class="string">'hc_test_size_function'</span>,</span><br><span class="line">      $option_group,</span><br><span class="line">      $setting_section</span><br><span class="line">   );</span><br><span class="line"></span><br><span class="line">   <span class="comment">//设置字体加粗</span></span><br><span class="line">   add_settings_field(</span><br><span class="line">      <span class="string">'hc_test_bold'</span>,</span><br><span class="line">      <span class="string">'字体加粗'</span>,</span><br><span class="line">      <span class="string">'hc_test_bold_function'</span>,</span><br><span class="line">      $option_group,</span><br><span class="line">      $setting_section</span><br><span class="line">   );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">hc_test_bold_function</span><span class="params">()</span> </span>&#123;</span><br><span class="line">   $hc_test_option = get_option( <span class="string">"hc_test_option"</span> );</span><br><span class="line">   <span class="meta">?&gt;</span></span><br><span class="line">   &lt;input name=<span class="string">"hc_test_option[bold]"</span> type=<span class="string">"checkbox"</span>  value=<span class="string">"1"</span> <span class="meta">&lt;?</span> checked( <span class="number">1</span>, $hc_test_option[<span class="string">"bold"</span>] ); <span class="meta">?&gt;</span> /&gt; 加粗</span><br><span class="line">   <span class="meta">&lt;?</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">hc_test_size_function</span><span class="params">()</span> </span>&#123;</span><br><span class="line">   $hc_test_option = get_option( <span class="string">"hc_test_option"</span> );</span><br><span class="line">   $size = $hc_test_option[<span class="string">"size"</span>];</span><br><span class="line">   <span class="meta">?&gt;</span></span><br><span class="line">   &lt;select name=<span class="string">"hc_test_option[size]"</span>&gt;</span><br><span class="line">      &lt;option value=<span class="string">"12"</span> <span class="meta">&lt;?</span> selected( <span class="string">'12'</span>, $size ); <span class="meta">?&gt;</span>&gt;<span class="number">12</span>&lt;/option&gt;</span><br><span class="line">      &lt;option value=<span class="string">"14"</span> <span class="meta">&lt;?</span> selected( <span class="string">'14'</span>, $size ); <span class="meta">?&gt;</span>&gt;<span class="number">14</span>&lt;/option&gt;</span><br><span class="line">      &lt;option value=<span class="string">"16"</span> <span class="meta">&lt;?</span> selected( <span class="string">'16'</span>, $size ); <span class="meta">?&gt;</span>&gt;<span class="number">16</span>&lt;/option&gt;</span><br><span class="line">      &lt;option value=<span class="string">"18"</span> <span class="meta">&lt;?</span> selected( <span class="string">'18'</span>, $size ); <span class="meta">?&gt;</span>&gt;<span class="number">18</span>&lt;/option&gt;</span><br><span class="line">      &lt;option value=<span class="string">"20"</span> <span class="meta">&lt;?</span> selected( <span class="string">'20'</span>, $size ); <span class="meta">?&gt;</span>&gt;<span class="number">20</span>&lt;/option&gt;</span><br><span class="line">   &lt;/select&gt;</span><br><span class="line">   <span class="meta">&lt;?</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">hc_test_color_function</span><span class="params">()</span> </span>&#123;</span><br><span class="line">   $hc_test_option = get_option( <span class="string">"hc_test_option"</span> );</span><br><span class="line">   <span class="meta">?&gt;</span></span><br><span class="line">   &lt;input name=<span class="string">'hc_test_option[color]'</span> type=<span class="string">'text'</span> value=<span class="string">'&lt;? echo $hc_test_option["color"]; ?&gt;'</span> /&gt;</span><br><span class="line">   <span class="meta">&lt;?</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">hc_settings_page</span><span class="params">()</span> </span>&#123;</span><br><span class="line">   <span class="meta">?&gt;</span></span><br><span class="line">   &lt;div class="wrap"&gt;</span><br><span class="line">      &lt;h2&gt;插件顶级菜单&lt;/h2&gt;</span><br><span class="line">      &lt;form action=<span class="string">"options.php"</span> method=<span class="string">"post"</span>&gt;</span><br><span class="line">         <span class="meta">&lt;?</span></span><br><span class="line">         $option_group = <span class="string">"hc_test_group"</span>;</span><br><span class="line"></span><br><span class="line">         <span class="comment">//输出一些必要的字段，包括验证信息等</span></span><br><span class="line">         settings_fields( $option_group );</span><br><span class="line"></span><br><span class="line">         <span class="comment">//输出选项设置区域</span></span><br><span class="line">         do_settings_sections( $option_group );</span><br><span class="line"></span><br><span class="line">         <span class="comment">//输出按钮</span></span><br><span class="line">         submit_button();</span><br><span class="line">         <span class="meta">?&gt;</span></span><br><span class="line">      &lt;/form&gt;</span><br><span class="line">   &lt;/div&gt;</span><br><span class="line">   <span class="meta">&lt;?</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">add_action( <span class="string">'wp_head'</span>, <span class="string">'hc_test_head_fun'</span> );</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">hc_test_head_fun</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">   $hc_test_option = get_option( <span class="string">"hc_test_option"</span> );</span><br><span class="line"></span><br><span class="line">   $bold = $hc_test_option[<span class="string">"bold"</span>] == <span class="number">1</span> ? <span class="string">"bold"</span> : <span class="string">"normal"</span>;</span><br><span class="line">   <span class="meta">?&gt;</span>&lt;style&gt;body&#123;color:<span class="meta">&lt;?</span> <span class="keyword">echo</span> $hc_test_option[<span class="string">"color"</span>] <span class="meta">?&gt;</span>;font-size:<span class="meta">&lt;?</span> <span class="keyword">echo</span> $hc_test_option[<span class="string">"size"</span>] <span class="meta">?&gt;</span>px;font-weight:<span class="meta">&lt;?</span> <span class="keyword">echo</span> $bold; <span class="meta">?&gt;</span>;&#125;&lt;/style&gt;<span class="meta">&lt;?</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="将插件改写成类的形式">将插件改写成类的形式</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#hc-test.php</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">Plugin Name: hc-test</span></span><br><span class="line"><span class="comment">Plugin URI: http://zhuohc.com</span></span><br><span class="line"><span class="comment">Description: 测试插件</span></span><br><span class="line"><span class="comment">Version: 1.0</span></span><br><span class="line"><span class="comment">Author: hc</span></span><br><span class="line"><span class="comment">Author URI: http://zhuohc.com</span></span><br><span class="line"><span class="comment">License: GPLv2</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//设置时区为 亚洲/上海</span></span><br><span class="line">date_default_timezone_set(<span class="string">'Asia/Shanghai'</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">hcsem_change_font_style</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">   <span class="comment">//声明类里面的属性，用 var 开头</span></span><br><span class="line">   <span class="keyword">var</span> $icon_url = <span class="string">"/images/icon.png"</span>;</span><br><span class="line">   <span class="keyword">var</span> $option_group = <span class="string">"hc_test_group"</span>;</span><br><span class="line"></span><br><span class="line">   <span class="comment">//构造方法，创建类的时候调用</span></span><br><span class="line">   <span class="function"><span class="keyword">function</span> <span class="title">hcsem_change_font_style</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">      <span class="comment">//创建菜单</span></span><br><span class="line">      add_action( <span class="string">'admin_menu'</span>, <span class="keyword">array</span>( <span class="keyword">$this</span>, <span class="string">'hc_create_menu'</span> ) );</span><br><span class="line">      add_action( <span class="string">'admin_init'</span>, <span class="keyword">array</span>( <span class="keyword">$this</span>, <span class="string">'register_hc_test_setting'</span> ) );</span><br><span class="line">      add_action( <span class="string">'wp_head'</span>,  <span class="keyword">array</span>( <span class="keyword">$this</span>,  <span class="string">'hc_test_head_fun'</span> ) );</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">//使用register_setting()注册要存储的字段</span></span><br><span class="line">   <span class="function"><span class="keyword">function</span> <span class="title">register_hc_test_setting</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">      <span class="comment">//注册一个选项，用于装载所有插件设置项</span></span><br><span class="line">      register_setting( <span class="keyword">$this</span>-&gt;option_group, <span class="string">'hc_test_option'</span> );</span><br><span class="line"></span><br><span class="line">      <span class="comment">//添加选项设置区域</span></span><br><span class="line">      $setting_section = <span class="string">"hc_test_setting_section"</span>;</span><br><span class="line">      add_settings_section(</span><br><span class="line">         $setting_section,</span><br><span class="line">         <span class="string">''</span>,</span><br><span class="line">         <span class="string">''</span>,</span><br><span class="line">         <span class="keyword">$this</span>-&gt;option_group</span><br><span class="line">      );</span><br><span class="line"></span><br><span class="line">      <span class="comment">//设置字体颜色</span></span><br><span class="line">      add_settings_field(</span><br><span class="line">         <span class="string">'hc_test_color'</span>,</span><br><span class="line">         <span class="string">'字体颜色'</span>,</span><br><span class="line">         <span class="keyword">array</span>( <span class="keyword">$this</span>, <span class="string">'hc_test_color_function'</span> ),</span><br><span class="line">         <span class="keyword">$this</span>-&gt;option_group,</span><br><span class="line">         $setting_section</span><br><span class="line">      );</span><br><span class="line"></span><br><span class="line">      <span class="comment">//设置字体大小</span></span><br><span class="line">      add_settings_field(</span><br><span class="line">         <span class="string">'hc_test_size'</span>,</span><br><span class="line">         <span class="string">'字体大小'</span>,</span><br><span class="line">         <span class="keyword">array</span>( <span class="keyword">$this</span>, <span class="string">'hc_test_size_function'</span> ),</span><br><span class="line">         <span class="keyword">$this</span>-&gt;option_group,</span><br><span class="line">         $setting_section</span><br><span class="line">      );</span><br><span class="line"></span><br><span class="line">      <span class="comment">//设置字体加粗</span></span><br><span class="line">      add_settings_field(</span><br><span class="line">         <span class="string">'hc_test_bold'</span>,</span><br><span class="line">         <span class="string">'字体加粗'</span>,</span><br><span class="line">         <span class="keyword">array</span>( <span class="keyword">$this</span>, <span class="string">'hc_test_bold_function'</span> ),</span><br><span class="line">         <span class="keyword">$this</span>-&gt;option_group,</span><br><span class="line">         $setting_section</span><br><span class="line">      );</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">function</span> <span class="title">hc_test_bold_function</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      $hc_test_option = get_option( <span class="string">"hc_test_option"</span> );</span><br><span class="line">      <span class="meta">?&gt;</span></span><br><span class="line">      &lt;input name=<span class="string">"hc_test_option[bold]"</span> type=<span class="string">"checkbox"</span>  value=<span class="string">"1"</span> <span class="meta">&lt;?</span> checked( <span class="number">1</span>, $hc_test_option[<span class="string">"bold"</span>] ); <span class="meta">?&gt;</span> /&gt; 加粗</span><br><span class="line">      <span class="meta">&lt;?</span></span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">function</span> <span class="title">hc_test_size_function</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      $hc_test_option = get_option( <span class="string">"hc_test_option"</span> );</span><br><span class="line">      $size = $hc_test_option[<span class="string">"size"</span>];</span><br><span class="line">      <span class="meta">?&gt;</span></span><br><span class="line">      &lt;select name=<span class="string">"hc_test_option[size]"</span>&gt;</span><br><span class="line">         &lt;option value=<span class="string">"12"</span> <span class="meta">&lt;?</span> selected( <span class="string">'12'</span>, $size ); <span class="meta">?&gt;</span>&gt;<span class="number">12</span>&lt;/option&gt;</span><br><span class="line">         &lt;option value=<span class="string">"14"</span> <span class="meta">&lt;?</span> selected( <span class="string">'14'</span>, $size ); <span class="meta">?&gt;</span>&gt;<span class="number">14</span>&lt;/option&gt;</span><br><span class="line">         &lt;option value=<span class="string">"16"</span> <span class="meta">&lt;?</span> selected( <span class="string">'16'</span>, $size ); <span class="meta">?&gt;</span>&gt;<span class="number">16</span>&lt;/option&gt;</span><br><span class="line">         &lt;option value=<span class="string">"18"</span> <span class="meta">&lt;?</span> selected( <span class="string">'18'</span>, $size ); <span class="meta">?&gt;</span>&gt;<span class="number">18</span>&lt;/option&gt;</span><br><span class="line">         &lt;option value=<span class="string">"20"</span> <span class="meta">&lt;?</span> selected( <span class="string">'20'</span>, $size ); <span class="meta">?&gt;</span>&gt;<span class="number">20</span>&lt;/option&gt;</span><br><span class="line">      &lt;/select&gt;</span><br><span class="line">      <span class="meta">&lt;?</span></span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">function</span> <span class="title">hc_test_color_function</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      $hc_test_option = get_option( <span class="string">"hc_test_option"</span> );</span><br><span class="line">      <span class="meta">?&gt;</span></span><br><span class="line">      &lt;input name=<span class="string">'hc_test_option[color]'</span> type=<span class="string">'text'</span> value=<span class="string">'&lt;? echo $hc_test_option["color"]; ?&gt;'</span> /&gt;</span><br><span class="line">      <span class="meta">&lt;?</span></span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">function</span> <span class="title">hc_create_menu</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">      <span class="comment">//创建顶级菜单</span></span><br><span class="line">      add_menu_page(</span><br><span class="line">         <span class="string">'HC的插件首页'</span>,</span><br><span class="line">         <span class="string">'HC的插件'</span>,</span><br><span class="line">         <span class="string">'manage_options'</span>,</span><br><span class="line">         <span class="string">'hc_test'</span> ,</span><br><span class="line">         <span class="keyword">array</span>( <span class="keyword">$this</span>, <span class="string">'hc_settings_page'</span> ),</span><br><span class="line">         plugins_url( <span class="keyword">$this</span>-&gt;icon_url, <span class="keyword">__FILE__</span> )</span><br><span class="line">      );</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">function</span> <span class="title">hc_settings_page</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      <span class="meta">?&gt;</span></span><br><span class="line">      &lt;div class="wrap"&gt;</span><br><span class="line">         &lt;h2&gt;插件顶级菜单&lt;/h2&gt;</span><br><span class="line">         &lt;form action=<span class="string">"options.php"</span> method=<span class="string">"post"</span>&gt;</span><br><span class="line">            <span class="meta">&lt;?</span></span><br><span class="line">            <span class="comment">//输出一些必要的字段，包括验证信息等</span></span><br><span class="line">            settings_fields( <span class="keyword">$this</span>-&gt;option_group );</span><br><span class="line"></span><br><span class="line">            <span class="comment">//输出选项设置区域</span></span><br><span class="line">            do_settings_sections( <span class="keyword">$this</span>-&gt;option_group );</span><br><span class="line"></span><br><span class="line">            <span class="comment">//输出按钮</span></span><br><span class="line">            submit_button();</span><br><span class="line">            <span class="meta">?&gt;</span></span><br><span class="line">         &lt;/form&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">      <span class="meta">&lt;?</span></span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">function</span> <span class="title">hc_test_head_fun</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">      $hc_test_option = get_option( <span class="string">"hc_test_option"</span> );</span><br><span class="line"></span><br><span class="line">      $bold = $hc_test_option[<span class="string">"bold"</span>] == <span class="number">1</span> ? <span class="string">"bold"</span> : <span class="string">"normal"</span>;</span><br><span class="line">      <span class="meta">?&gt;</span>&lt;style&gt;body&#123;color:<span class="meta">&lt;?</span> <span class="keyword">echo</span> $hc_test_option[<span class="string">"color"</span>] <span class="meta">?&gt;</span>;font-size:<span class="meta">&lt;?</span> <span class="keyword">echo</span> $hc_test_option[<span class="string">"size"</span>] <span class="meta">?&gt;</span>px;font-weight:<span class="meta">&lt;?</span> <span class="keyword">echo</span> $bold; <span class="meta">?&gt;</span>;&#125;&lt;/style&gt;<span class="meta">&lt;?</span></span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">new</span> hcsem_change_font_style();</span><br></pre></td></tr></table></figure><h3 id="将插件设置内容转移到wordpress设置里">将插件设置内容转移到wordpress设置里</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># hc-test.php</span></span><br><span class="line">  </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">hcsem_change_font_style</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">var</span> $option_group = <span class="string">"general"</span>;  <span class="comment">// general常规 writing撰写 reading阅读 discussion讨论 media多媒体 permalink固定链接</span></span><br><span class="line"></span><br><span class="line">   <span class="comment">//构造方法，创建类的时候调用</span></span><br><span class="line">   <span class="function"><span class="keyword">function</span> <span class="title">hcsem_change_font_style</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">      add_action( <span class="string">'admin_init'</span>, <span class="keyword">array</span>( <span class="keyword">$this</span>, <span class="string">'register_hc_test_setting'</span> ) );</span><br><span class="line">      add_action( <span class="string">'wp_head'</span>,  <span class="keyword">array</span>( <span class="keyword">$this</span>,  <span class="string">'hc_test_head_fun'</span> ) );</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">//使用register_setting()注册要存储的字段</span></span><br><span class="line">   <span class="function"><span class="keyword">function</span> <span class="title">register_hc_test_setting</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">      <span class="comment">//注册一个选项，用于装载所有插件设置项</span></span><br><span class="line">      register_setting( <span class="keyword">$this</span>-&gt;option_group, <span class="string">'hc_test_option'</span> );</span><br><span class="line"></span><br><span class="line">      <span class="comment">//设置字体颜色</span></span><br><span class="line">      add_settings_field(</span><br><span class="line">         <span class="string">'hc_test_color'</span>,</span><br><span class="line">         <span class="string">'字体颜色'</span>,</span><br><span class="line">         <span class="keyword">array</span>( <span class="keyword">$this</span>, <span class="string">'hc_test_color_function'</span> ),</span><br><span class="line">         <span class="keyword">$this</span>-&gt;option_group</span><br><span class="line">      );</span><br><span class="line"></span><br><span class="line">      <span class="comment">//设置字体大小</span></span><br><span class="line">      add_settings_field(</span><br><span class="line">         <span class="string">'hc_test_size'</span>,</span><br><span class="line">         <span class="string">'字体大小'</span>,</span><br><span class="line">         <span class="keyword">array</span>( <span class="keyword">$this</span>, <span class="string">'hc_test_size_function'</span> ),</span><br><span class="line">         <span class="keyword">$this</span>-&gt;option_group</span><br><span class="line">      );</span><br><span class="line"></span><br><span class="line">      <span class="comment">//设置字体加粗</span></span><br><span class="line">      add_settings_field(</span><br><span class="line">         <span class="string">'hc_test_bold'</span>,</span><br><span class="line">         <span class="string">'字体加粗'</span>,</span><br><span class="line">         <span class="keyword">array</span>( <span class="keyword">$this</span>, <span class="string">'hc_test_bold_function'</span> ),</span><br><span class="line">         <span class="keyword">$this</span>-&gt;option_group</span><br><span class="line">      );</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">function</span> <span class="title">hc_test_bold_function</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      $hc_test_option = get_option( <span class="string">"hc_test_option"</span> );</span><br><span class="line">      <span class="meta">?&gt;</span></span><br><span class="line">      &lt;input name=<span class="string">"hc_test_option[bold]"</span> type=<span class="string">"checkbox"</span>  value=<span class="string">"1"</span> <span class="meta">&lt;?</span> checked( <span class="number">1</span>, $hc_test_option[<span class="string">"bold"</span>] ); <span class="meta">?&gt;</span> /&gt; 加粗</span><br><span class="line">      <span class="meta">&lt;?</span></span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">function</span> <span class="title">hc_test_size_function</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      $hc_test_option = get_option( <span class="string">"hc_test_option"</span> );</span><br><span class="line">      $size = $hc_test_option[<span class="string">"size"</span>];</span><br><span class="line">      <span class="meta">?&gt;</span></span><br><span class="line">      &lt;select name=<span class="string">"hc_test_option[size]"</span>&gt;</span><br><span class="line">         &lt;option value=<span class="string">"12"</span> <span class="meta">&lt;?</span> selected( <span class="string">'12'</span>, $size ); <span class="meta">?&gt;</span>&gt;<span class="number">12</span>&lt;/option&gt;</span><br><span class="line">         &lt;option value=<span class="string">"14"</span> <span class="meta">&lt;?</span> selected( <span class="string">'14'</span>, $size ); <span class="meta">?&gt;</span>&gt;<span class="number">14</span>&lt;/option&gt;</span><br><span class="line">         &lt;option value=<span class="string">"16"</span> <span class="meta">&lt;?</span> selected( <span class="string">'16'</span>, $size ); <span class="meta">?&gt;</span>&gt;<span class="number">16</span>&lt;/option&gt;</span><br><span class="line">         &lt;option value=<span class="string">"18"</span> <span class="meta">&lt;?</span> selected( <span class="string">'18'</span>, $size ); <span class="meta">?&gt;</span>&gt;<span class="number">18</span>&lt;/option&gt;</span><br><span class="line">         &lt;option value=<span class="string">"20"</span> <span class="meta">&lt;?</span> selected( <span class="string">'20'</span>, $size ); <span class="meta">?&gt;</span>&gt;<span class="number">20</span>&lt;/option&gt;</span><br><span class="line">      &lt;/select&gt;</span><br><span class="line">      <span class="meta">&lt;?</span></span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">function</span> <span class="title">hc_test_color_function</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      $hc_test_option = get_option( <span class="string">"hc_test_option"</span> );</span><br><span class="line">      <span class="meta">?&gt;</span></span><br><span class="line">      &lt;input name=<span class="string">'hc_test_option[color]'</span> type=<span class="string">'text'</span> value=<span class="string">'&lt;? echo $hc_test_option["color"]; ?&gt;'</span> /&gt;</span><br><span class="line">      <span class="meta">&lt;?</span></span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">function</span> <span class="title">hc_test_head_fun</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">      $hc_test_option = get_option( <span class="string">"hc_test_option"</span> );</span><br><span class="line"></span><br><span class="line">      $bold = $hc_test_option[<span class="string">"bold"</span>] == <span class="number">1</span> ? <span class="string">"bold"</span> : <span class="string">"normal"</span>;</span><br><span class="line">      <span class="meta">?&gt;</span>&lt;style&gt;body&#123;color:<span class="meta">&lt;?</span> <span class="keyword">echo</span> $hc_test_option[<span class="string">"color"</span>] <span class="meta">?&gt;</span>;font-size:<span class="meta">&lt;?</span> <span class="keyword">echo</span> $hc_test_option[<span class="string">"size"</span>] <span class="meta">?&gt;</span>px;font-weight:<span class="meta">&lt;?</span> <span class="keyword">echo</span> $bold; <span class="meta">?&gt;</span>;&#125;&lt;/style&gt;<span class="meta">&lt;?</span></span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">new</span> hcsem_change_font_style();</span><br></pre></td></tr></table></figure><h3 id="调用ajax">调用ajax</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># hc-test.php</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">Plugin Name: hc-test</span></span><br><span class="line"><span class="comment">Plugin URI: http://zhuohc.com</span></span><br><span class="line"><span class="comment">Description: 测试插件</span></span><br><span class="line"><span class="comment">Version: 1.0</span></span><br><span class="line"><span class="comment">Author: hc</span></span><br><span class="line"><span class="comment">Author URI: http://zhuohc.com</span></span><br><span class="line"><span class="comment">License: GPLv2</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//设置时区为 亚洲/上海</span></span><br><span class="line">date_default_timezone_set(<span class="string">'Asia/Shanghai'</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">hcsem_change_font_style</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">   <span class="comment">//声明类里面的属性，用 var 开头</span></span><br><span class="line">   <span class="keyword">var</span> $icon_url = <span class="string">"/images/icon.png"</span>;</span><br><span class="line">   <span class="keyword">var</span> $option_group = <span class="string">"hc_test_group"</span>;</span><br><span class="line"></span><br><span class="line">   <span class="comment">//构造方法，创建类的时候调用</span></span><br><span class="line">   <span class="function"><span class="keyword">function</span> <span class="title">hcsem_change_font_style</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">      <span class="comment">//创建菜单</span></span><br><span class="line">      add_action( <span class="string">'admin_menu'</span>, <span class="keyword">array</span>( <span class="keyword">$this</span>, <span class="string">'hc_create_menu'</span> ) );</span><br><span class="line">      add_action( <span class="string">'admin_init'</span>, <span class="keyword">array</span>( <span class="keyword">$this</span>, <span class="string">'register_hc_test_setting'</span> ) );</span><br><span class="line">      add_action( <span class="string">'wp_head'</span>,  <span class="keyword">array</span>( <span class="keyword">$this</span>,  <span class="string">'hc_test_head_fun'</span> ) );</span><br><span class="line"></span><br><span class="line">      <span class="comment">//使用ajax校验信息</span></span><br><span class="line">      wp_enqueue_script( <span class="string">'hc_test'</span>, plugins_url(<span class="string">'js/hc_test.js'</span>, <span class="keyword">__FILE__</span>), <span class="keyword">array</span>(<span class="string">'jquery'</span>) );</span><br><span class="line">      wp_localize_script( <span class="string">'hc_test'</span>, <span class="string">'ajax_object'</span>, <span class="keyword">array</span>( <span class="string">'ajax_url'</span> =&gt; admin_url( <span class="string">'admin-ajax.php'</span> ) ) );</span><br><span class="line"></span><br><span class="line">      add_action( <span class="string">'wp_ajax_color_check_action'</span> , <span class="keyword">array</span>( <span class="keyword">$this</span>, <span class="string">'color_check_action_fun'</span>) );</span><br><span class="line">      add_action( <span class="string">'wp_ajax_nopriv_hcsem_description'</span> , <span class="keyword">array</span>( <span class="keyword">$this</span>, <span class="string">'hcsem_description_fun'</span>) );</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">function</span> <span class="title">color_check_action_fun</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span>( trim( $_POST[<span class="string">'color'</span>] ) != <span class="string">""</span> )&#123; <span class="keyword">echo</span> <span class="string">"ok"</span>; &#125;</span><br><span class="line">      wp_die();</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">function</span> <span class="title">hcsem_description_fun</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">echo</span> <span class="string">"hc的笔记本："</span> . $_POST[<span class="string">'description'</span>];</span><br><span class="line">      wp_die();</span><br><span class="line"></span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">//使用register_setting()注册要存储的字段</span></span><br><span class="line">   <span class="function"><span class="keyword">function</span> <span class="title">register_hc_test_setting</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">      <span class="comment">//注册一个选项，用于装载所有插件设置项</span></span><br><span class="line">      register_setting( <span class="keyword">$this</span>-&gt;option_group, <span class="string">'hc_test_option'</span> );</span><br><span class="line"></span><br><span class="line">      <span class="comment">//添加选项设置区域</span></span><br><span class="line">      $setting_section = <span class="string">"hc_test_setting_section"</span>;</span><br><span class="line">      add_settings_section(</span><br><span class="line">         $setting_section,</span><br><span class="line">         <span class="string">''</span>,</span><br><span class="line">         <span class="string">''</span>,</span><br><span class="line">         <span class="keyword">$this</span>-&gt;option_group</span><br><span class="line">      );</span><br><span class="line"></span><br><span class="line">      <span class="comment">//设置字体颜色</span></span><br><span class="line">      add_settings_field(</span><br><span class="line">         <span class="string">'hc_test_color'</span>,</span><br><span class="line">         <span class="string">'字体颜色'</span>,</span><br><span class="line">         <span class="keyword">array</span>( <span class="keyword">$this</span>, <span class="string">'hc_test_color_function'</span> ),</span><br><span class="line">         <span class="keyword">$this</span>-&gt;option_group,</span><br><span class="line">         $setting_section</span><br><span class="line">      );</span><br><span class="line"></span><br><span class="line">      <span class="comment">//设置字体大小</span></span><br><span class="line">      add_settings_field(</span><br><span class="line">         <span class="string">'hc_test_size'</span>,</span><br><span class="line">         <span class="string">'字体大小'</span>,</span><br><span class="line">         <span class="keyword">array</span>( <span class="keyword">$this</span>, <span class="string">'hc_test_size_function'</span> ),</span><br><span class="line">         <span class="keyword">$this</span>-&gt;option_group,</span><br><span class="line">         $setting_section</span><br><span class="line">      );</span><br><span class="line"></span><br><span class="line">      <span class="comment">//设置字体加粗</span></span><br><span class="line">      add_settings_field(</span><br><span class="line">         <span class="string">'hc_test_bold'</span>,</span><br><span class="line">         <span class="string">'字体加粗'</span>,</span><br><span class="line">         <span class="keyword">array</span>( <span class="keyword">$this</span>, <span class="string">'hc_test_bold_function'</span> ),</span><br><span class="line">         <span class="keyword">$this</span>-&gt;option_group,</span><br><span class="line">         $setting_section</span><br><span class="line">      );</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">function</span> <span class="title">hc_test_bold_function</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      $hc_test_option = get_option( <span class="string">"hc_test_option"</span> );</span><br><span class="line">      <span class="meta">?&gt;</span></span><br><span class="line">      &lt;input name=<span class="string">"hc_test_option[bold]"</span> type=<span class="string">"checkbox"</span>  value=<span class="string">"1"</span> <span class="meta">&lt;?</span> checked( <span class="number">1</span>, $hc_test_option[<span class="string">"bold"</span>] ); <span class="meta">?&gt;</span> /&gt; 加粗</span><br><span class="line">      <span class="meta">&lt;?</span></span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">function</span> <span class="title">hc_test_size_function</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      $hc_test_option = get_option( <span class="string">"hc_test_option"</span> );</span><br><span class="line">      $size = $hc_test_option[<span class="string">"size"</span>];</span><br><span class="line">      <span class="meta">?&gt;</span></span><br><span class="line">      &lt;select name=<span class="string">"hc_test_option[size]"</span>&gt;</span><br><span class="line">         &lt;option value=<span class="string">"12"</span> <span class="meta">&lt;?</span> selected( <span class="string">'12'</span>, $size ); <span class="meta">?&gt;</span>&gt;<span class="number">12</span>&lt;/option&gt;</span><br><span class="line">         &lt;option value=<span class="string">"14"</span> <span class="meta">&lt;?</span> selected( <span class="string">'14'</span>, $size ); <span class="meta">?&gt;</span>&gt;<span class="number">14</span>&lt;/option&gt;</span><br><span class="line">         &lt;option value=<span class="string">"16"</span> <span class="meta">&lt;?</span> selected( <span class="string">'16'</span>, $size ); <span class="meta">?&gt;</span>&gt;<span class="number">16</span>&lt;/option&gt;</span><br><span class="line">         &lt;option value=<span class="string">"18"</span> <span class="meta">&lt;?</span> selected( <span class="string">'18'</span>, $size ); <span class="meta">?&gt;</span>&gt;<span class="number">18</span>&lt;/option&gt;</span><br><span class="line">         &lt;option value=<span class="string">"20"</span> <span class="meta">&lt;?</span> selected( <span class="string">'20'</span>, $size ); <span class="meta">?&gt;</span>&gt;<span class="number">20</span>&lt;/option&gt;</span><br><span class="line">      &lt;/select&gt;</span><br><span class="line">      <span class="meta">&lt;?</span></span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">function</span> <span class="title">hc_test_color_function</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      $hc_test_option = get_option( <span class="string">"hc_test_option"</span> );</span><br><span class="line">      <span class="meta">?&gt;</span></span><br><span class="line">      &lt;input name=<span class="string">'hc_test_option[color]'</span> type=<span class="string">'text'</span> value=<span class="string">'&lt;? echo $hc_test_option["color"]; ?&gt;'</span> /&gt;</span><br><span class="line">      &lt;font id=<span class="string">"error_color"</span>&gt;&lt;/font&gt;&lt;/div&gt;</span><br><span class="line">      <span class="meta">&lt;?</span></span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">function</span> <span class="title">hc_create_menu</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">      <span class="comment">//创建顶级菜单</span></span><br><span class="line">      add_menu_page(</span><br><span class="line">         <span class="string">'HC的插件首页'</span>,</span><br><span class="line">         <span class="string">'HC的插件'</span>,</span><br><span class="line">         <span class="string">'manage_options'</span>,</span><br><span class="line">         <span class="string">'hc_test'</span> ,</span><br><span class="line">         <span class="keyword">array</span>( <span class="keyword">$this</span>, <span class="string">'hc_settings_page'</span> ),</span><br><span class="line">         plugins_url( <span class="keyword">$this</span>-&gt;icon_url, <span class="keyword">__FILE__</span> )</span><br><span class="line">      );</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">function</span> <span class="title">hc_settings_page</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      <span class="meta">?&gt;</span></span><br><span class="line">      &lt;div class="wrap"&gt;</span><br><span class="line">         &lt;h2&gt;插件顶级菜单&lt;/h2&gt;</span><br><span class="line">         &lt;form action=<span class="string">"options.php"</span> method=<span class="string">"post"</span>&gt;</span><br><span class="line">            <span class="meta">&lt;?</span></span><br><span class="line">            <span class="comment">//输出一些必要的字段，包括验证信息等</span></span><br><span class="line">            settings_fields( <span class="keyword">$this</span>-&gt;option_group );</span><br><span class="line"></span><br><span class="line">            <span class="comment">//输出选项设置区域</span></span><br><span class="line">            do_settings_sections( <span class="keyword">$this</span>-&gt;option_group );</span><br><span class="line"></span><br><span class="line">            <span class="comment">//输出按钮</span></span><br><span class="line">            submit_button();</span><br><span class="line">            <span class="meta">?&gt;</span></span><br><span class="line">         &lt;/form&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">      <span class="meta">&lt;?</span></span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">function</span> <span class="title">hc_test_head_fun</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">      $hc_test_option = get_option( <span class="string">"hc_test_option"</span> );</span><br><span class="line"></span><br><span class="line">      $bold = $hc_test_option[<span class="string">"bold"</span>] == <span class="number">1</span> ? <span class="string">"bold"</span> : <span class="string">"normal"</span>;</span><br><span class="line">      <span class="meta">?&gt;</span>&lt;style&gt;body&#123;color:<span class="meta">&lt;?</span> <span class="keyword">echo</span> $hc_test_option[<span class="string">"color"</span>] <span class="meta">?&gt;</span>;font-size:<span class="meta">&lt;?</span> <span class="keyword">echo</span> $hc_test_option[<span class="string">"size"</span>] <span class="meta">?&gt;</span>px;font-weight:<span class="meta">&lt;?</span> <span class="keyword">echo</span> $bold; <span class="meta">?&gt;</span>;&#125;&lt;/style&gt;<span class="meta">&lt;?</span></span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">new</span> hcsem_change_font_style();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># js/hc_test.js</span></span><br><span class="line">jQuery(document).ready( <span class="function"><span class="keyword">function</span><span class="params">($)</span> </span>&#123;</span><br><span class="line">   $(<span class="string">"input[name='hc_test_option[color]']"</span>).blur( <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      $.ajax(&#123;</span><br><span class="line">         type: <span class="string">"POST"</span>,</span><br><span class="line">         data: <span class="string">"color="</span> + $(this).val() + <span class="string">"&amp;action=hc_color_check"</span>,</span><br><span class="line">         url: ajax_object.ajax_url,</span><br><span class="line">         beforeSend: <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            $(<span class="string">'#error_color'</span>).html(<span class="string">'校验中...'</span>); </span><br><span class="line">         &#125;,</span><br><span class="line">         success: <span class="function"><span class="keyword">function</span><span class="params">( $data )</span> </span>&#123;</span><br><span class="line">            <span class="keyword">if</span>( $data == <span class="string">'ok'</span>)&#123;</span><br><span class="line">                $(<span class="string">'#error_color'</span>).html(<span class="string">'输入正确'</span>);  </span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                $(<span class="string">'#error_color'</span>).html(<span class="string">'颜色不能为空！'</span>); </span><br><span class="line">            &#125;</span><br><span class="line">         &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">   &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">jQuery(document).ready( <span class="function"><span class="keyword">function</span><span class="params">($)</span> </span>&#123;</span><br><span class="line">   $(<span class="string">".description"</span>).click( <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      $.ajax(&#123;</span><br><span class="line">         type: <span class="string">"POST"</span>,</span><br><span class="line">         data: <span class="string">"description="</span> + $(this).text() + <span class="string">"&amp;action=hcsem_description"</span>,</span><br><span class="line">         url: ajax_object.ajax_url,</span><br><span class="line">         success : <span class="function"><span class="keyword">function</span><span class="params">( $data )</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>( $data != <span class="string">"0"</span> ) &#123;</span><br><span class="line">               $(<span class="string">".description"</span>).text( $data );</span><br><span class="line">            &#125;</span><br><span class="line">         &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">   &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="实现插件翻译功能">实现插件翻译功能</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── css</span><br><span class="line">│   └── hc_copyrighy.css</span><br><span class="line">├── hc-test.php</span><br><span class="line">├── images</span><br><span class="line">│   └── icon.png</span><br><span class="line">├── js</span><br><span class="line">│   └── hc_test.js</span><br><span class="line">└── languages</span><br><span class="line">    ├── zh_CN.mo</span><br><span class="line">    └── zh_CN.po</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># hc-test.php</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">Plugin Name: hc-test</span></span><br><span class="line"><span class="comment">Plugin URI: http://zhuohc.com</span></span><br><span class="line"><span class="comment">Description: 测试插件</span></span><br><span class="line"><span class="comment">Version: 1.0</span></span><br><span class="line"><span class="comment">Author: hc</span></span><br><span class="line"><span class="comment">Author URI: http://zhuohc.com</span></span><br><span class="line"><span class="comment">License: GPLv2</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//设置时区为 亚洲/上海</span></span><br><span class="line">date_default_timezone_set(<span class="string">'Asia/Shanghai'</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">hcsem_change_font_style</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">   <span class="comment">//声明类里面的属性，用 var 开头</span></span><br><span class="line">   <span class="keyword">var</span> $icon_url = <span class="string">"/images/icon.png"</span>;</span><br><span class="line">   <span class="keyword">var</span> $option_group = <span class="string">"hc_test_group"</span>;</span><br><span class="line"></span><br><span class="line">   <span class="comment">//构造方法，创建类的时候调用</span></span><br><span class="line">   <span class="function"><span class="keyword">function</span> <span class="title">hcsem_change_font_style</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">      <span class="comment">//创建菜单</span></span><br><span class="line">      add_action( <span class="string">'admin_menu'</span>, <span class="keyword">array</span>( <span class="keyword">$this</span>, <span class="string">'hc_create_menu'</span> ) );</span><br><span class="line">      add_action( <span class="string">'admin_init'</span>, <span class="keyword">array</span>( <span class="keyword">$this</span>, <span class="string">'register_hc_test_setting'</span> ) );</span><br><span class="line">      add_action( <span class="string">'wp_head'</span>,  <span class="keyword">array</span>( <span class="keyword">$this</span>,  <span class="string">'hc_test_head_fun'</span> ) );</span><br><span class="line"></span><br><span class="line">      <span class="comment">//使用ajax校验信息</span></span><br><span class="line">      wp_enqueue_script( <span class="string">'hc_test'</span>, plugins_url(<span class="string">'js/hc_test.js'</span>, <span class="keyword">__FILE__</span>), <span class="keyword">array</span>(<span class="string">'jquery'</span>) );</span><br><span class="line">      wp_localize_script( <span class="string">'hc_test'</span>, <span class="string">'ajax_object'</span>, <span class="keyword">array</span>( <span class="string">'ajax_url'</span> =&gt; admin_url( <span class="string">'admin-ajax.php'</span> ) ) );</span><br><span class="line"></span><br><span class="line">      add_action( <span class="string">'wp_ajax_color_check_action'</span> , <span class="keyword">array</span>( <span class="keyword">$this</span>, <span class="string">'color_check_action_fun'</span>) );</span><br><span class="line">      add_action( <span class="string">'wp_ajax_nopriv_hcsem_description'</span> , <span class="keyword">array</span>( <span class="keyword">$this</span>, <span class="string">'hcsem_description_fun'</span>) );</span><br><span class="line"></span><br><span class="line">      add_action( <span class="string">'init'</span>, <span class="keyword">array</span>( <span class="keyword">$this</span>, <span class="string">'hcsem_load_textdomain'</span> ) );</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">function</span> <span class="title">hcsem_load_textdomain</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">      <span class="comment">//加载 languages 目录下的翻译文件 zh_CN</span></span><br><span class="line">      $currentLocale = get_locale();</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span>( !<span class="keyword">empty</span>( $currentLocale ) ) &#123;</span><br><span class="line"></span><br><span class="line">         $moFile = dirname(<span class="keyword">__FILE__</span>) . <span class="string">"/languages/&#123;$currentLocale&#125;.mo"</span>;</span><br><span class="line"></span><br><span class="line">         <span class="keyword">if</span>( @file_exists( $moFile ) &amp;&amp; is_readable( $moFile ) ) load_textdomain( <span class="string">'hc-test'</span>, $moFile );</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">function</span> <span class="title">color_check_action_fun</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span>( trim( $_POST[<span class="string">'color'</span>] ) != <span class="string">""</span> )&#123; <span class="keyword">echo</span> <span class="string">"ok"</span>; &#125;</span><br><span class="line">      wp_die();</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">function</span> <span class="title">hcsem_description_fun</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">echo</span> <span class="string">"HC的笔记本："</span> . $_POST[<span class="string">'description'</span>];</span><br><span class="line">      wp_die();</span><br><span class="line"></span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">//使用register_setting()注册要存储的字段</span></span><br><span class="line">   <span class="function"><span class="keyword">function</span> <span class="title">register_hc_test_setting</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">      <span class="comment">//注册一个选项，用于装载所有插件设置项</span></span><br><span class="line">      register_setting( <span class="keyword">$this</span>-&gt;option_group, <span class="string">'hc_test_option'</span> );</span><br><span class="line"></span><br><span class="line">      <span class="comment">//添加选项设置区域</span></span><br><span class="line">      $setting_section = <span class="string">"hc_test_setting_section"</span>;</span><br><span class="line">      add_settings_section(</span><br><span class="line">         $setting_section,</span><br><span class="line">         <span class="string">''</span>,</span><br><span class="line">         <span class="string">''</span>,</span><br><span class="line">         <span class="keyword">$this</span>-&gt;option_group</span><br><span class="line">      );</span><br><span class="line"></span><br><span class="line">      <span class="comment">//设置字体颜色</span></span><br><span class="line">      add_settings_field(</span><br><span class="line">         <span class="string">'hc_test_color'</span>,</span><br><span class="line">         __( <span class="string">'color'</span>, <span class="string">'hc-test'</span> ),</span><br><span class="line">         <span class="keyword">array</span>( <span class="keyword">$this</span>, <span class="string">'hc_test_color_function'</span> ),</span><br><span class="line">         <span class="keyword">$this</span>-&gt;option_group,</span><br><span class="line">         $setting_section</span><br><span class="line">      );</span><br><span class="line"></span><br><span class="line">      <span class="comment">//设置字体大小</span></span><br><span class="line">      add_settings_field(</span><br><span class="line">         <span class="string">'hc_test_size'</span>,</span><br><span class="line">         __( <span class="string">'size'</span>, <span class="string">'hc-test'</span> ),</span><br><span class="line">         <span class="keyword">array</span>( <span class="keyword">$this</span>, <span class="string">'hc_test_size_function'</span> ),</span><br><span class="line">         <span class="keyword">$this</span>-&gt;option_group,</span><br><span class="line">         $setting_section</span><br><span class="line">      );</span><br><span class="line"></span><br><span class="line">      <span class="comment">//设置字体加粗</span></span><br><span class="line">      add_settings_field(</span><br><span class="line">         <span class="string">'hc_test_bold'</span>,</span><br><span class="line">         __( <span class="string">'bold'</span>, <span class="string">'hc-test'</span> ),</span><br><span class="line">         <span class="keyword">array</span>( <span class="keyword">$this</span>, <span class="string">'hc_test_bold_function'</span> ),</span><br><span class="line">         <span class="keyword">$this</span>-&gt;option_group,</span><br><span class="line">         $setting_section</span><br><span class="line">      );</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">function</span> <span class="title">hc_test_bold_function</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      $hc_test_option = get_option( <span class="string">"hc_test_option"</span> );</span><br><span class="line">      <span class="meta">?&gt;</span></span><br><span class="line">      &lt;input name=<span class="string">"hc_test_option[bold]"</span> type=<span class="string">"checkbox"</span>  value=<span class="string">"1"</span> <span class="meta">&lt;?</span> checked( <span class="number">1</span>, $hc_test_option[<span class="string">"bold"</span>] ); <span class="meta">?&gt;</span> /&gt; <span class="meta">&lt;?</span> _e( <span class="string">'set bold'</span>, <span class="string">'hc-test'</span> ); <span class="meta">?&gt;</span></span><br><span class="line">      <span class="meta">&lt;?</span></span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">function</span> <span class="title">hc_test_size_function</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      $hc_test_option = get_option( <span class="string">"hc_test_option"</span> );</span><br><span class="line">      $size = $hc_test_option[<span class="string">"size"</span>];</span><br><span class="line">      <span class="meta">?&gt;</span></span><br><span class="line">      &lt;select name=<span class="string">"hc_test_option[size]"</span>&gt;</span><br><span class="line">         &lt;option value=<span class="string">"12"</span> <span class="meta">&lt;?</span> selected( <span class="string">'12'</span>, $size ); <span class="meta">?&gt;</span>&gt;<span class="number">12</span>&lt;/option&gt;</span><br><span class="line">         &lt;option value=<span class="string">"14"</span> <span class="meta">&lt;?</span> selected( <span class="string">'14'</span>, $size ); <span class="meta">?&gt;</span>&gt;<span class="number">14</span>&lt;/option&gt;</span><br><span class="line">         &lt;option value=<span class="string">"16"</span> <span class="meta">&lt;?</span> selected( <span class="string">'16'</span>, $size ); <span class="meta">?&gt;</span>&gt;<span class="number">16</span>&lt;/option&gt;</span><br><span class="line">         &lt;option value=<span class="string">"18"</span> <span class="meta">&lt;?</span> selected( <span class="string">'18'</span>, $size ); <span class="meta">?&gt;</span>&gt;<span class="number">18</span>&lt;/option&gt;</span><br><span class="line">         &lt;option value=<span class="string">"20"</span> <span class="meta">&lt;?</span> selected( <span class="string">'20'</span>, $size ); <span class="meta">?&gt;</span>&gt;<span class="number">20</span>&lt;/option&gt;</span><br><span class="line">      &lt;/select&gt;</span><br><span class="line">      <span class="meta">&lt;?</span></span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">function</span> <span class="title">hc_test_color_function</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      $hc_test_option = get_option( <span class="string">"hc_test_option"</span> );</span><br><span class="line">      <span class="meta">?&gt;</span></span><br><span class="line">      &lt;input name=<span class="string">'hc_test_option[color]'</span> type=<span class="string">'text'</span> value=<span class="string">'&lt;? echo $hc_test_option["color"]; ?&gt;'</span> /&gt;</span><br><span class="line">      &lt;font id=<span class="string">"error_color"</span>&gt;&lt;/font&gt;&lt;/div&gt;</span><br><span class="line">      <span class="meta">&lt;?</span></span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">function</span> <span class="title">hc_create_menu</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">      <span class="comment">//创建顶级菜单</span></span><br><span class="line">      add_menu_page(</span><br><span class="line">         <span class="string">'hc的插件首页'</span>,</span><br><span class="line">         <span class="string">'hc的插件'</span>,</span><br><span class="line">         <span class="string">'manage_options'</span>,</span><br><span class="line">         <span class="string">'hc_test'</span> ,</span><br><span class="line">         <span class="keyword">array</span>( <span class="keyword">$this</span>, <span class="string">'hc_settings_page'</span> ),</span><br><span class="line">         plugins_url( <span class="keyword">$this</span>-&gt;icon_url, <span class="keyword">__FILE__</span> )</span><br><span class="line">      );</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">function</span> <span class="title">hc_settings_page</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      <span class="meta">?&gt;</span></span><br><span class="line">      &lt;div class="wrap"&gt;</span><br><span class="line">         &lt;h2&gt;插件顶级菜单&lt;/h2&gt;</span><br><span class="line">         &lt;form action=<span class="string">"options.php"</span> method=<span class="string">"post"</span>&gt;</span><br><span class="line">            <span class="meta">&lt;?</span></span><br><span class="line">            <span class="comment">//输出一些必要的字段，包括验证信息等</span></span><br><span class="line">            settings_fields( <span class="keyword">$this</span>-&gt;option_group );</span><br><span class="line"></span><br><span class="line">            <span class="comment">//输出选项设置区域</span></span><br><span class="line">            do_settings_sections( <span class="keyword">$this</span>-&gt;option_group );</span><br><span class="line"></span><br><span class="line">            <span class="comment">//输出按钮</span></span><br><span class="line">            submit_button();</span><br><span class="line">            <span class="meta">?&gt;</span></span><br><span class="line">         &lt;/form&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">      <span class="meta">&lt;?</span></span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">function</span> <span class="title">hc_test_head_fun</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">      $hc_test_option = get_option( <span class="string">"hc_test_option"</span> );</span><br><span class="line"></span><br><span class="line">      $bold = $hc_test_option[<span class="string">"bold"</span>] == <span class="number">1</span> ? <span class="string">"bold"</span> : <span class="string">"normal"</span>;</span><br><span class="line">      <span class="meta">?&gt;</span>&lt;style&gt;body&#123;color:<span class="meta">&lt;?</span> <span class="keyword">echo</span> $hc_test_option[<span class="string">"color"</span>] <span class="meta">?&gt;</span>;font-size:<span class="meta">&lt;?</span> <span class="keyword">echo</span> $hc_test_option[<span class="string">"size"</span>] <span class="meta">?&gt;</span>px;font-weight:<span class="meta">&lt;?</span> <span class="keyword">echo</span> $bold; <span class="meta">?&gt;</span>;&#125;&lt;/style&gt;<span class="meta">&lt;?</span></span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">new</span> hcsem_change_font_style();</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Php </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>pythonTkinter入门基础</title>
      <link href="/2016/11/10/PythonTkinter%E5%85%A5%E9%97%A8%E5%9F%BA%E7%A1%80/"/>
      <url>/2016/11/10/PythonTkinter%E5%85%A5%E9%97%A8%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<h2 id="python环境">Python环境</h2><p><a href="/2016/11/09/Python入门基础/" title="python入门基础">python入门基础</a></p><h2 id="tkinter安装">Tkinter安装</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo apt-get install python-tk</span></span><br></pre></td></tr></table></figure><h2 id="示例">示例</h2><h3 id="配置组件外观">配置组件外观</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="comment"># -*- coding: UTF-8 -*-</span></span><br><span class="line"><span class="keyword">from</span> Tkinter <span class="keyword">import</span> *</span><br><span class="line">root = Tk()</span><br><span class="line"><span class="comment"># 定义图标</span></span><br><span class="line"><span class="keyword">if</span> sys.platform == <span class="string">'win32'</span>:</span><br><span class="line">    root.iconbitmap(<span class="string">'favicon.ico'</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    icon = PhotoImage(file=<span class="string">'phone.gif'</span>)</span><br><span class="line">    root.tk.call(<span class="string">'wm'</span>, <span class="string">'iconphoto'</span>, root._w, icon)</span><br><span class="line"><span class="comment"># 定义字体，字号，类型</span></span><br><span class="line">label_font = (<span class="string">'Ubuntu'</span>, <span class="number">20</span>, <span class="string">'bold underline italic'</span>)</span><br><span class="line"><span class="comment"># 创建组件</span></span><br><span class="line">widget = Label(root, text=<span class="string">'Hello,云克隆'</span>, padx=<span class="number">100</span>, pady=<span class="number">20</span>)</span><br><span class="line"><span class="comment"># 配置组件字体</span></span><br><span class="line">widget.config(font=label_font)</span><br><span class="line"><span class="comment"># 组件宽，高</span></span><br><span class="line">widget.config(height=<span class="number">3</span>, width=<span class="number">20</span>)</span><br><span class="line"><span class="comment"># 组件背景颜色</span></span><br><span class="line">widget.config(bg=<span class="string">'#FF0'</span>)</span><br><span class="line"><span class="comment"># 组件字体颜色</span></span><br><span class="line">widget.config(fg=<span class="string">'#F0F'</span>)</span><br><span class="line"><span class="comment"># 组件边框宽度</span></span><br><span class="line">widget.config(bd=<span class="number">3</span>)</span><br><span class="line"><span class="comment"># 组件边框外形, FLAT扁平, SUNKEN凹陷, RAISED凸起, GROOVE凹槽, SOLID加粗, RIDGE脊状,</span></span><br><span class="line">widget.config(relief=SUNKEN)</span><br><span class="line"><span class="comment"># 组件鼠标手势, 'gumby', 'watch', 'pencil', 'crdss', hand2</span></span><br><span class="line">widget.config(cursor=<span class="string">'gumby'</span>)</span><br><span class="line"><span class="comment"># 组件状态, DISABLE禁用, NORMAL正常, READONLY只读</span></span><br><span class="line">widget.config(state=DISABLED)</span><br><span class="line"><span class="comment"># 布置组件</span></span><br><span class="line"><span class="comment"># expand设置是否可以扩展，fill表示随父组件扩展方向，可以设置BOTH, X, Y</span></span><br><span class="line"><span class="comment"># 设置组件padding值</span></span><br><span class="line"><span class="comment"># side表示按钮布置窗口的位置</span></span><br><span class="line">widget.pack(expand=<span class="literal">True</span>, fill=X, padx=<span class="number">10</span>, pady=<span class="number">50</span>, side=LEFT)</span><br><span class="line">root.mainloop()</span><br></pre></td></tr></table></figure><h3 id="标准弹出框">标准弹出框</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: UTF-8 -*-</span></span><br><span class="line"><span class="keyword">from</span> Tkinter <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> tkMessageBox <span class="keyword">import</span> *</span><br><span class="line"><span class="comment"># python3</span></span><br><span class="line"><span class="comment"># from Tkinter.messagebox import *</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">callback</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">if</span> askyesno(<span class="string">'Verify'</span>, <span class="string">'Do you ready want to quit?'</span>):</span><br><span class="line">        showwarning(<span class="string">'Yes'</span>, <span class="string">'Quit not yet'</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        showinfo(<span class="string">'No'</span>, <span class="string">'Quit has been cancelled'</span>)</span><br><span class="line"></span><br><span class="line">errmsg = <span class="string">'Sorry, no spam allowed'</span></span><br><span class="line">Button(<span class="literal">None</span>, text=<span class="string">'Quit'</span>, command=callback).pack(fill=X)</span><br><span class="line">Button(<span class="literal">None</span>, text=<span class="string">'spam'</span>, command=(<span class="keyword">lambda</span>: showerror(<span class="string">'spam'</span>, errmsg))).pack(fill=X)</span><br><span class="line">mainloop()</span><br></pre></td></tr></table></figure><h3 id="常见弹框">常见弹框</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># gui6.py</span></span><br><span class="line"><span class="comment"># -*- coding: UTF-8 -*-</span></span><br><span class="line"><span class="keyword">from</span> Tkinter <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> tkMessageBox <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> tkFileDialog <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> tkColorChooser <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> tkSimpleDialog <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">demos = &#123;</span><br><span class="line">    <span class="string">'Open'</span>: askopenfilename,</span><br><span class="line">    <span class="string">'Color'</span>: askcolor,</span><br><span class="line">    <span class="string">'Query'</span>: <span class="keyword">lambda</span>: askquestion(<span class="string">'Warning'</span>, <span class="string">'You typed "rm *"\nconfirm?'</span>),</span><br><span class="line">    <span class="string">'Error'</span>: <span class="keyword">lambda</span>: showerror(<span class="string">'Error!'</span>, <span class="string">'He is dead'</span>),</span><br><span class="line">    <span class="string">'Input'</span>: <span class="keyword">lambda</span>: askfloat(<span class="string">'Entry'</span>, <span class="string">'Enter credit card number'</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Demo</span><span class="params">(Frame)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, parent=None, **options)</span>:</span></span><br><span class="line">        Frame.__init__(self, parent, **options)</span><br><span class="line">        self.pack()</span><br><span class="line">        Label(self, text=<span class="string">'Basic demos'</span>).pack()</span><br><span class="line">        <span class="keyword">for</span> (key, value) <span class="keyword">in</span> demos.items():</span><br><span class="line">            Button(self, text=key, command=value).pack(side=TOP, fill=BOTH)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    Demo().mainloop()</span><br><span class="line">自定义弹框</span><br><span class="line"></span><br><span class="line"><span class="comment"># -*- coding: UTF-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">from</span> Tkinter <span class="keyword">import</span> *</span><br><span class="line">makemodal = (len(sys.argv) &gt; <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">dialog</span><span class="params">()</span>:</span></span><br><span class="line">    win = Toplevel()</span><br><span class="line">    Label(win, text=<span class="string">'Hard drive reformatted!'</span>).pack()</span><br><span class="line">    Button(win, text=<span class="string">'OK'</span>, command=win.destroy).pack()</span><br><span class="line">    <span class="keyword">if</span> makemodal:</span><br><span class="line">        <span class="comment"># 获取输入的焦点</span></span><br><span class="line">        win.focus_set()</span><br><span class="line">        <span class="comment"># 打开的时候，禁用其他窗口</span></span><br><span class="line">        win.grab_set()</span><br><span class="line">        <span class="comment"># 在win销毁之前，继续等待</span></span><br><span class="line">        win.wait_window()</span><br><span class="line">    <span class="keyword">print</span> <span class="string">'dialog exit'</span></span><br><span class="line"></span><br><span class="line">root = Tk()</span><br><span class="line">Button(root, text=<span class="string">'popup'</span>, command=dialog).pack()</span><br><span class="line">root.mainloop()</span><br></pre></td></tr></table></figure><h3 id="绑定事件">绑定事件</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: UTF-8 -*-</span></span><br><span class="line"><span class="keyword">from</span> Tkinter <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">showPosEvent</span><span class="params">(event)</span>:</span></span><br><span class="line">    print(<span class="string">'Widget=%s, X=%s, Y=%s'</span> % (event.widget, event.x, event.y))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">showAllEvent</span><span class="params">(event)</span>:</span></span><br><span class="line">    print(event)</span><br><span class="line">    <span class="keyword">for</span> attr <span class="keyword">in</span> dir(event):</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> attr.startswith(<span class="string">'__'</span>):</span><br><span class="line">            print(attr, <span class="string">'=&gt;'</span>, getattr(event, attr))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">onKeyPress</span><span class="params">(event)</span>:</span></span><br><span class="line">    print(<span class="string">'Got key press: '</span>, event.char)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">onArrowKey</span><span class="params">(event)</span>:</span></span><br><span class="line">    print(<span class="string">'Got up arrow key press'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">onReturnKey</span><span class="params">(event)</span>:</span></span><br><span class="line">    print(<span class="string">'Got return key press'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">onLeftClick</span><span class="params">(event)</span>:</span></span><br><span class="line">    print(<span class="string">'Got left mouse button click: '</span>)</span><br><span class="line">    showPosEvent(event)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">onRightClick</span><span class="params">(event)</span>:</span></span><br><span class="line">    print(<span class="string">'Got right mouse button click: '</span>)</span><br><span class="line">    showPosEvent(event)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">onMiddleClick</span><span class="params">(event)</span>:</span></span><br><span class="line">    print(<span class="string">'Got middle mouse button click: '</span>)</span><br><span class="line">    showPosEvent(event)</span><br><span class="line">    showAllEvent(event)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">onLeftDrag</span><span class="params">(event)</span>:</span></span><br><span class="line">    print(<span class="string">'Got left mouse drag click: '</span>)</span><br><span class="line">    showPosEvent(event)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">onDoubleLeftClick</span><span class="params">(event)</span>:</span></span><br><span class="line">    print(<span class="string">'Got double left mouse click: '</span>)</span><br><span class="line">    showPosEvent(event)</span><br><span class="line">    tkroot.quit()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">tkroot = Tk()</span><br><span class="line">labelfont = (<span class="string">'courier'</span>, <span class="number">20</span>, <span class="string">'bold'</span>)</span><br><span class="line">widget = Label(tkroot, text=<span class="string">'Hello bind world'</span>)</span><br><span class="line">widget.config(bg=<span class="string">'red'</span>, font=labelfont)</span><br><span class="line">widget.config(height=<span class="number">5</span>, width=<span class="number">20</span>)</span><br><span class="line">widget.pack(expand=YES, fill=BOTH)</span><br><span class="line"><span class="comment"># 绑定单击左键</span></span><br><span class="line">widget.bind(<span class="string">'&lt;Button-1&gt;'</span>, onLeftClick)</span><br><span class="line"><span class="comment"># 绑定单击右键</span></span><br><span class="line">widget.bind(<span class="string">'&lt;Button-3&gt;'</span>, onRightClick)</span><br><span class="line"><span class="comment"># 绑定单击中键</span></span><br><span class="line">widget.bind(<span class="string">'&lt;Button-2&gt;'</span>, onMiddleClick)</span><br><span class="line"><span class="comment"># 绑定双击左键</span></span><br><span class="line">widget.bind(<span class="string">'&lt;Double-1&gt;'</span>, onDoubleLeftClick)</span><br><span class="line"><span class="comment"># 绑定拖拽 B1表示点击左键，Motion表示拖拽</span></span><br><span class="line">widget.bind(<span class="string">'&lt;B1-Motion&gt;'</span>, onLeftDrag)</span><br><span class="line"><span class="comment"># 绑定键盘按键</span></span><br><span class="line">widget.bind(<span class="string">'&lt;KeyPress&gt;'</span>, onKeyPress)</span><br><span class="line"><span class="comment"># 绑定按下箭头键</span></span><br><span class="line">widget.bind(<span class="string">'&lt;Up&gt;'</span>, onArrowKey)</span><br><span class="line"><span class="comment"># 绑定回车，返回键</span></span><br><span class="line">widget.bind(<span class="string">'&lt;Return&gt;'</span>, onReturnKey)</span><br><span class="line">widget.focus()</span><br><span class="line">tkroot.title(<span class="string">'CLICK ME'</span>)</span><br><span class="line">tkroot.mainloop()</span><br><span class="line"></span><br><span class="line"><span class="comment"># &lt;ButtonPress&gt; 按下按钮</span></span><br><span class="line"><span class="comment"># &lt;ButtonRelease&gt; 松开按钮</span></span><br><span class="line"><span class="comment"># &lt;Motion&gt; 鼠标指针移动</span></span><br><span class="line"><span class="comment"># &lt;Configure&gt; 窗口大小，位置改变时候</span></span><br><span class="line"><span class="comment"># &lt;Destroy&gt; 销毁窗口</span></span><br><span class="line"><span class="comment"># &lt;FocusIn&gt; 获取焦点</span></span><br><span class="line"><span class="comment"># &lt;FocusOut&gt; 失去焦点</span></span><br><span class="line"><span class="comment"># &lt;Map&gt; 窗口打开</span></span><br><span class="line"><span class="comment"># &lt;Unmap&gt; 窗口最小化</span></span><br><span class="line"><span class="comment"># &lt;Escape&gt;, &lt;BackSpace&gt;, &lt;Tab&gt; 捕获特点ESC键，回车键，tab键</span></span><br><span class="line"><span class="comment"># &lt;Down&gt;, &lt;Up&gt;, &lt;Left&gt;, &lt;Right&gt; 捕获方向键</span></span><br><span class="line"><span class="comment"># &lt;B1-Motion&gt; 按下左键并拖拽</span></span><br><span class="line"><span class="comment"># &lt;KeyPress-a&gt; 按下按键“a”，大小写敏感</span></span><br></pre></td></tr></table></figure><h3 id="输入框">输入框</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: UTF-8 -*-</span></span><br><span class="line"><span class="keyword">from</span> Tkinter <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> quitGui <span class="keyword">import</span> Quitter</span><br><span class="line"></span><br><span class="line">fields = <span class="string">'Name'</span>, <span class="string">'Job'</span>, <span class="string">'Pay'</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fetch</span><span class="params">(entries)</span>:</span></span><br><span class="line">    <span class="keyword">for</span> entry <span class="keyword">in</span> entries:</span><br><span class="line">        print(<span class="string">'Input =&gt; %s'</span> % entry.get())  <span class="comment"># 获取文本信息</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">makeform</span><span class="params">(root, fields)</span>:</span></span><br><span class="line">    entries = []</span><br><span class="line">    <span class="keyword">for</span> field <span class="keyword">in</span> fields:</span><br><span class="line">        row = Frame(root)</span><br><span class="line">        lab = Label(row, width=<span class="number">5</span>, text=field)</span><br><span class="line">        ent = Entry(row)</span><br><span class="line">        row.pack(side=TOP, fill=X)</span><br><span class="line">        lab.pack(side=LEFT)</span><br><span class="line">        ent.pack(side=RIGHT, expand=YES, fill=X)</span><br><span class="line">        entries.append(ent)</span><br><span class="line">    <span class="keyword">return</span> entries</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">show</span><span class="params">(entries, popup)</span>:</span></span><br><span class="line">    fetch(entries)  <span class="comment"># 必须在销毁前取出</span></span><br><span class="line">    popup.destroy()  <span class="comment"># 如果修改了stmt， order， msgs会随之失败</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">ask</span><span class="params">()</span>:</span></span><br><span class="line">    popup = Toplevel()  <span class="comment"># 在模拟对话框窗口中显示表单</span></span><br><span class="line">    ents = makeform(popup, fields)</span><br><span class="line">    Button(popup, text=<span class="string">'OK'</span>, command=(<span class="keyword">lambda</span>: show(ents, popup))).pack()</span><br><span class="line">    popup.grab_set()  <span class="comment"># 打开的时候，禁用其他窗口</span></span><br><span class="line">    popup.focus_set()  <span class="comment"># 获取输入的焦点</span></span><br><span class="line">    popup.wait_window()  <span class="comment"># 在这里等待销毁</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    root = Tk()</span><br><span class="line">    Button(root, text=<span class="string">'Dialog'</span>, command=ask).pack()</span><br><span class="line">    root.mainloop()</span><br></pre></td></tr></table></figure><h3 id="复选框">复选框</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># gui13.py</span></span><br><span class="line"><span class="comment"># -*- coding: UTF-8 -*-</span></span><br><span class="line"><span class="keyword">from</span> Tkinter <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> gui6 <span class="keyword">import</span> demos</span><br><span class="line"><span class="keyword">from</span> quitGui <span class="keyword">import</span> Quitter</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Demo</span><span class="params">(Frame)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, parent=None, **options)</span>:</span></span><br><span class="line">        Frame.__init__(self, parent, **options)</span><br><span class="line">        self.pack()</span><br><span class="line">        self.tools()</span><br><span class="line">        Label(self, text=<span class="string">'Ckech demos'</span>).pack()</span><br><span class="line">        self.vars = []</span><br><span class="line">        <span class="keyword">for</span> key <span class="keyword">in</span> demos:</span><br><span class="line">            var = IntVar()</span><br><span class="line">            Checkbutton(self, text=key, variable=var, command=demos[key]).pack(side=LEFT)</span><br><span class="line">            self.vars.append(var)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">report</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">for</span> var <span class="keyword">in</span> self.vars:</span><br><span class="line">            print(var.get())  <span class="comment"># 当前开关设置1或者0</span></span><br><span class="line">        print()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">tools</span><span class="params">(self)</span>:</span></span><br><span class="line">        frm = Frame(self)</span><br><span class="line">        frm.pack(side=RIGHT)</span><br><span class="line">        Button(frm, text=<span class="string">'State'</span>, command=self.report).pack(fill=X)</span><br><span class="line">        Quitter(frm).pack(fill=X)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    Demo().mainloop()</span><br></pre></td></tr></table></figure><h3 id="单选按钮">单选按钮</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#gui14.py</span></span><br><span class="line"><span class="comment"># -*- coding: UTF-8 -*-</span></span><br><span class="line"><span class="keyword">from</span> Tkinter <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> gui6 <span class="keyword">import</span> demos</span><br><span class="line"><span class="keyword">from</span> quitGui <span class="keyword">import</span> Quitter</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Demo</span><span class="params">(Frame)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, parent=None, **options)</span>:</span></span><br><span class="line">        Frame.__init__(self, parent, **options)</span><br><span class="line">        self.pack()</span><br><span class="line">        Label(self, text=<span class="string">'Radio demos'</span>).pack(side=TOP)</span><br><span class="line">        self.var = StringVar()</span><br><span class="line">        <span class="comment"># variable表示单选按钮的变量，相当与html的name标签</span></span><br><span class="line">        <span class="comment"># value表示单选按钮的变量值，相当与html的value标签</span></span><br><span class="line">        <span class="keyword">for</span> key <span class="keyword">in</span> demos:</span><br><span class="line">            Radiobutton(self, text=key, command=self.onPress, variable=self.var, value=key).pack(anchor=NW)</span><br><span class="line">        self.var.set(key)  <span class="comment"># 选中最后一个开始</span></span><br><span class="line">        Button(self, text=<span class="string">'State'</span>, command=self.report).pack(fill=X)</span><br><span class="line">        Quitter(self).pack(fill=X)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">onPress</span><span class="params">(self)</span>:</span></span><br><span class="line">        pick = self.var.get()</span><br><span class="line">        print(<span class="string">'you pressed'</span>, pick)</span><br><span class="line">        print(<span class="string">'result: '</span>, demos[pick]())  <span class="comment"># 按钮使用返回的值</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">report</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(self.var.get())</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    Demo().mainloop()</span><br></pre></td></tr></table></figure><h3 id="标尺滚动条">标尺滚动条</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># gui16.py</span></span><br><span class="line"><span class="comment"># -*- coding: UTF-8 -*-</span></span><br><span class="line"><span class="keyword">from</span> Tkinter <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> gui6 <span class="keyword">import</span> demos</span><br><span class="line"><span class="keyword">from</span> quitGui <span class="keyword">import</span> Quitter</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Demo</span><span class="params">(Frame)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, parent=None, **options)</span>:</span></span><br><span class="line">        Frame.__init__(self, parent, **options)</span><br><span class="line">        self.pack()</span><br><span class="line">        Label(self, text=<span class="string">'Scale demos'</span>).pack()</span><br><span class="line">        self.var = IntVar()</span><br><span class="line">        Scale(self, label=<span class="string">'Pick demo number'</span>,</span><br><span class="line">              command=self.onMove, variable=self.var,</span><br><span class="line">              from_=<span class="number">0</span>, to=len(demos)<span class="number">-1</span>).pack()</span><br><span class="line">        Scale(self, label=<span class="string">'Pick demo number'</span>,  <span class="comment"># 标尺的文本</span></span><br><span class="line">              command=self.onMove,  <span class="comment"># 绑定回调</span></span><br><span class="line">              variable=self.var,  <span class="comment"># 变量</span></span><br><span class="line">              from_=<span class="number">0</span>,   <span class="comment"># 标尺最小值</span></span><br><span class="line">              to=len(demos) - <span class="number">1</span>,   <span class="comment"># 标尺最大值</span></span><br><span class="line">              length = <span class="number">200</span>,  <span class="comment"># 长度</span></span><br><span class="line">              tickinterval = <span class="number">2</span>,   <span class="comment"># 每隔几个单位显示标记单位</span></span><br><span class="line">              showvalue = YES,  <span class="comment"># 显示或隐藏标尺滑动条旁边的当前值</span></span><br><span class="line">              orient = <span class="string">'horizontal'</span>  <span class="comment"># 横向展示</span></span><br><span class="line">              ).pack()</span><br><span class="line">        Quitter(self).pack(side=RIGHT)</span><br><span class="line">        Button(self, text=<span class="string">'Run demo'</span>, command=self.onRun).pack(side=LEFT)</span><br><span class="line">        Button(self, text=<span class="string">'State'</span>, command=self.report).pack(side=RIGHT)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">onMove</span><span class="params">(self, value)</span>:</span></span><br><span class="line">        print(<span class="string">'in onMove'</span>, value)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">onRun</span><span class="params">(self)</span>:</span></span><br><span class="line">        pos = self.var.get()</span><br><span class="line">        print(<span class="string">'you picked'</span>, pos)</span><br><span class="line">        demo = list(demos.values())[pos]</span><br><span class="line">        print(demo())</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">report</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(self.var.get())</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    print(list(demos.keys()))</span><br><span class="line">    Demo().mainloop()</span><br></pre></td></tr></table></figure><h3 id="创建图片">创建图片</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># gui17.py</span></span><br><span class="line"><span class="comment"># -*- coding: UTF-8 -*-</span></span><br><span class="line"><span class="keyword">from</span> Tkinter <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">gifdir = <span class="string">'./gif/'</span></span><br><span class="line">win = Tk()</span><br><span class="line">igm = PhotoImage(file=gifdir + <span class="string">'logo.png'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 按钮上绑定图片</span></span><br><span class="line"><span class="comment"># Button(win, image=igm).pack()</span></span><br><span class="line"><span class="comment"># win.mainloop()</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建画布</span></span><br><span class="line">can = Canvas(win)</span><br><span class="line">can.pack(fill=BOTH)</span><br><span class="line">can.config(width=igm.width() + <span class="number">4</span>, height=igm.height() + <span class="number">4</span>)</span><br><span class="line">can.create_image(<span class="number">2</span>,  <span class="comment"># x坐标</span></span><br><span class="line">                 <span class="number">2</span>,  <span class="comment"># y坐标</span></span><br><span class="line">                 image=igm, anchor=NW)</span><br><span class="line">win.mainloop()</span><br></pre></td></tr></table></figure><h3 id="按钮随机读取图片">按钮随机读取图片</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># gui18.py</span></span><br><span class="line"><span class="comment"># -*- coding: UTF-8 -*-</span></span><br><span class="line"><span class="keyword">from</span> glob <span class="keyword">import</span> glob</span><br><span class="line"><span class="keyword">from</span> gui13 <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"></span><br><span class="line">gifdir = <span class="string">'./gif/'</span></span><br><span class="line"></span><br><span class="line"><span class="string">" 按钮随机读取图片 "</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ButtonPicsDemo</span><span class="params">(Frame)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, gifdir=gifdir, parent=None)</span>:</span></span><br><span class="line">        Frame.__init__(self, parent)</span><br><span class="line">        self.pack()</span><br><span class="line">        self.lbl = Label(self, text=<span class="string">'none'</span>, bg=<span class="string">'blue'</span>, fg=<span class="string">'red'</span>)</span><br><span class="line">        self.pix = Button(self, text=<span class="string">'press me'</span>, command=self.draw, bg=<span class="string">'white'</span>)</span><br><span class="line">        self.lbl.pack(fill=BOTH)</span><br><span class="line">        self.pix.pack(pady=<span class="number">10</span>)</span><br><span class="line">        Demo(self, relief=SUNKEN, bd=<span class="number">2</span>).pack(fill=BOTH)</span><br><span class="line">        <span class="comment"># glob模块， glob方法，返回所有匹配的文件列表</span></span><br><span class="line">        files = glob(gifdir + <span class="string">'*.png'</span>)</span><br><span class="line">        self.images = [(x, PhotoImage(file=x)) <span class="keyword">for</span> x <span class="keyword">in</span> files]</span><br><span class="line">        print(files)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">draw</span><span class="params">(self)</span>:</span></span><br><span class="line">        name, photo = random.choice(self.images)</span><br><span class="line">        self.lbl.config(text=name)</span><br><span class="line">        self.pix.config(image=photo)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    <span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">        ButtonPicsDemo().mainloop()</span><br></pre></td></tr></table></figure><h3 id="缩略图">缩略图</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># gui19.py</span></span><br><span class="line"><span class="comment"># -*- coding: UTF-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> math</span><br><span class="line"><span class="keyword">import</span> PIL</span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"><span class="keyword">from</span> Tkinter <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">make_thumbs</span><span class="params">(img_dir, size=<span class="params">(<span class="number">100</span>, <span class="number">100</span>)</span>, subdir=<span class="string">'thumbs'</span>)</span>:</span></span><br><span class="line">    thumb_dir = os.path.join(img_dir, subdir)</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(thumb_dir):</span><br><span class="line">        os.mkdir(thumb_dir)</span><br><span class="line">    thumbs = []</span><br><span class="line">    <span class="keyword">for</span> img_file <span class="keyword">in</span> os.listdir(img_dir):</span><br><span class="line">        thumb_path = os.path.join(thumb_dir, img_file)</span><br><span class="line">        <span class="keyword">if</span> os.path.exists(thumb_path):</span><br><span class="line">            thumb_obj = PIL.Image.open(thumb_path)</span><br><span class="line">            thumbs.append((img_file, thumb_obj))</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="string">'making'</span>, thumb_path)</span><br><span class="line">            img_path = os.path.join(img_dir, img_file)</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                img_obj = PIL.Image.open(img_path)</span><br><span class="line">                img_obj.thumbnail(size, PIL.Image.ANTIALIAS)</span><br><span class="line">                img_obj.save(thumb_path)</span><br><span class="line">                thumbs.append((img_file, img_obj))</span><br><span class="line">            <span class="keyword">except</span> Exception, e:</span><br><span class="line">                print(<span class="string">'skipping: '</span>, img_path)</span><br><span class="line">                <span class="keyword">print</span> e</span><br><span class="line">    <span class="keyword">return</span> thumbs</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ViewOne</span><span class="params">(Toplevel)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, img_dir, img_file)</span>:</span></span><br><span class="line">        Toplevel.__init__(self)</span><br><span class="line">        self.title(img_file)</span><br><span class="line">        img_path = os.path.join(img_dir, img_file)</span><br><span class="line">        img_obj = PhotoImage(file=img_path)</span><br><span class="line">        Label(self, image=img_obj).pack()</span><br><span class="line">        print(img_path, img_obj.width(), img_obj.height())</span><br><span class="line">        self.savephoto = img_obj</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">viewer</span><span class="params">(img_dir, kind=Toplevel, cols=None)</span>:</span></span><br><span class="line">    win = kind()</span><br><span class="line">    win.title(<span class="string">'VIEWER: '</span> + img_dir)</span><br><span class="line">    thumbs = make_thumbs(img_dir)</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> cols:</span><br><span class="line">        <span class="comment"># 固定大小 或者N×N</span></span><br><span class="line">        cols = int(math.ceil(math.sqrt(len(thumbs))))</span><br><span class="line">    savephotos = []</span><br><span class="line">    <span class="keyword">while</span> thumbs:</span><br><span class="line">        thumbs_row, thumbs = thumbs[:cols], thumbs[cols:]</span><br><span class="line">        row = Frame(win)</span><br><span class="line">        row.pack(fill=BOTH)</span><br><span class="line">        <span class="keyword">for</span>(img_file, img_obj) <span class="keyword">in</span> thumbs_row:</span><br><span class="line">            size = max(img_obj.size)</span><br><span class="line">            photo = PhotoImage(file=os.path.join(img_dir, <span class="string">'thumbs'</span>, img_file))</span><br><span class="line">            link = Button(row, image=photo)</span><br><span class="line">        handler = <span class="keyword">lambda</span> savefile=img_file: ViewOne(img_dir, savefile)</span><br><span class="line">        link.config(command=handler, width=size, height=size)</span><br><span class="line">        link.pack(side=LEFT, expand=YES)</span><br><span class="line">        savephotos.append(photo)</span><br><span class="line">    Button(win, text=<span class="string">'Quit'</span>, command=win.quit, bg=<span class="string">'beige'</span>).pack(fill=X)</span><br><span class="line">    <span class="keyword">return</span> win, savephotos</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    img_dir = len(sys.argv) &gt; <span class="number">1</span> <span class="keyword">and</span> sys.argv[<span class="number">1</span>] <span class="keyword">or</span> <span class="string">'gif'</span></span><br><span class="line">    main, save = viewer(img_dir, kind=Tk)</span><br><span class="line">    main.mainloop()</span><br></pre></td></tr></table></figure><h3 id="创建基础顶级菜单">创建基础顶级菜单</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># gui20.py</span></span><br><span class="line"><span class="comment"># -*- coding: UTF-8 -*-</span></span><br><span class="line"><span class="keyword">from</span> Tkinter <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> tkMessageBox <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">not_done</span><span class="params">()</span>:</span></span><br><span class="line">    showerror(<span class="string">'Not implemented'</span>, <span class="string">'Not yet available'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">make_menu</span><span class="params">(win)</span>:</span></span><br><span class="line">    top = Menu(win)  <span class="comment"># 定义顶级菜单</span></span><br><span class="line">    win.config(menu=top)</span><br><span class="line">    file = Menu(top, tearoff=<span class="literal">True</span>)  <span class="comment"># 一级菜单 tearoff:设置菜单下的虚线是否显示</span></span><br><span class="line">    file.add_command(label=<span class="string">'New...'</span>, command=not_done, underline=<span class="number">0</span>)</span><br><span class="line">    file.add_command(label=<span class="string">'Open...'</span>, command=not_done, underline=<span class="number">0</span>)</span><br><span class="line">    file.add_command(label=<span class="string">'Quit...'</span>, command=win.quit,  underline=<span class="number">0</span>)</span><br><span class="line">    top.add_cascade(label=<span class="string">'File'</span>, menu=file, underline=<span class="number">0</span>)  <span class="comment"># 在顶级菜单中添加一级菜单</span></span><br><span class="line"></span><br><span class="line">    edit = Menu(top, tearoff=<span class="literal">False</span>)  <span class="comment"># 一级菜单</span></span><br><span class="line">    edit.add_command(label=<span class="string">'Cut'</span>, command=not_done, underline=<span class="number">0</span>)</span><br><span class="line">    edit.add_command(label=<span class="string">'Paste'</span>, command=not_done, underline=<span class="number">0</span>)</span><br><span class="line">    edit.add_separator()  <span class="comment"># 添加下划线</span></span><br><span class="line">    top.add_cascade(label=<span class="string">'Edit'</span>, menu=edit, underline=<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">    submenu = Menu(edit, tearoff=<span class="literal">True</span>)  <span class="comment"># 二级菜单</span></span><br><span class="line">    submenu.add_command(label=<span class="string">'Spam'</span>, command=win.quit, underline=<span class="number">0</span>)</span><br><span class="line">    submenu.add_command(label=<span class="string">'Eggs'</span>, command=not_done, underline=<span class="number">0</span>)</span><br><span class="line">    edit.add_cascade(label=<span class="string">'Stuff'</span>, menu=submenu, underline=<span class="number">0</span>)  <span class="comment"># 在一级菜单中添加二级菜单</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    root = Tk()</span><br><span class="line">    root.title(<span class="string">'menu_win'</span>)</span><br><span class="line">    make_menu(root)</span><br><span class="line">    msg = Label(root, text=<span class="string">'Window menu basic'</span>)</span><br><span class="line">    msg.pack(expand=YES, fill=BOTH)</span><br><span class="line">    msg.config(relief=SUNKEN, width=<span class="number">40</span>, height=<span class="number">7</span>, bg=<span class="string">'beige'</span>)</span><br><span class="line">    root.mainloop()</span><br></pre></td></tr></table></figure><h3 id="创建框架级别菜单">创建框架级别菜单</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># gui21.py</span></span><br><span class="line"><span class="comment"># -*- coding: UTF-8 -*-</span></span><br><span class="line"><span class="keyword">from</span> Tkinter <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> tkMessageBox <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">not_done</span><span class="params">()</span>:</span></span><br><span class="line">    showerror(<span class="string">'Not implemented'</span>, <span class="string">'Not yet available'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">make_menu</span><span class="params">(parent)</span>:</span></span><br><span class="line">    menu_bar = Frame(parent)</span><br><span class="line">    menu_bar.pack(side=TOP, fill=X)</span><br><span class="line"></span><br><span class="line">    f_button = Menubutton(menu_bar, text=<span class="string">'File'</span>, underline=<span class="number">0</span>)</span><br><span class="line">    f_button.pack(side=LEFT)</span><br><span class="line">    file = Menu(f_button)</span><br><span class="line">    file.add_command(label=<span class="string">'New...'</span>, command=not_done, underline=<span class="number">0</span>)</span><br><span class="line">    file.add_command(label=<span class="string">'Open...'</span>, command=not_done, underline=<span class="number">0</span>)</span><br><span class="line">    file.add_command(label=<span class="string">'Quit...'</span>, command=parent.quit,  underline=<span class="number">0</span>)</span><br><span class="line">    f_button.config(menu=file)</span><br><span class="line"></span><br><span class="line">    e_button = Menubutton(menu_bar, text=<span class="string">'Edit'</span>, underline=<span class="number">0</span>)</span><br><span class="line">    e_button.pack(side=LEFT)</span><br><span class="line">    edit = Menu(e_button)</span><br><span class="line">    edit.add_command(label=<span class="string">'Cut'</span>, command=not_done, underline=<span class="number">0</span>)</span><br><span class="line">    edit.add_command(label=<span class="string">'Paste'</span>, command=not_done, underline=<span class="number">0</span>)</span><br><span class="line">    edit.add_separator()</span><br><span class="line">    e_button.config(menu=edit)</span><br><span class="line"></span><br><span class="line">    sub_menu = Menu(edit, tearoff=<span class="literal">True</span>)</span><br><span class="line">    sub_menu.add_command(label=<span class="string">'Spam'</span>, command=parent.quit, underline=<span class="number">0</span>)</span><br><span class="line">    sub_menu.add_command(label=<span class="string">'Eggs'</span>, command=not_done, underline=<span class="number">0</span>)</span><br><span class="line">    edit.add_cascade(label=<span class="string">'Stuff'</span>, menu=sub_menu, underline=<span class="number">0</span>)</span><br><span class="line">    <span class="keyword">return</span> menu_bar</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    root = Tk()</span><br><span class="line">    root.title(<span class="string">'menu_fra'</span>)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">2</span>):</span><br><span class="line">        mnu = make_menu(root)</span><br><span class="line">        mnu.config(bd=<span class="number">2</span>, relief=RAISED)</span><br><span class="line">        Label(root, bg=<span class="string">'black'</span>, height=<span class="number">5</span>, width=<span class="number">25</span>).pack(expand=YES, fill=BOTH)</span><br><span class="line">    Button(root, text=<span class="string">'Bye'</span>, command=root.quit).pack()</span><br><span class="line">    root.mainloop()</span><br></pre></td></tr></table></figure><h3 id="图片菜单">图片菜单</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># gui22.py</span></span><br><span class="line"><span class="comment"># -*- coding:UTF-8 -*-</span></span><br><span class="line"><span class="keyword">from</span> Tkinter <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> tkMessageBox <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">NewMenuDemo</span><span class="params">(Frame)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, parent=None)</span>:</span></span><br><span class="line">        Frame.__init__(self, parent)</span><br><span class="line">        self.pack(expand=YES, fill=BOTH)</span><br><span class="line">        self.create_widgets()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_widgets</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.make_menubar()</span><br><span class="line">        self.make_toolbar()</span><br><span class="line">        l = Label(self, text=<span class="string">'Menu and Toolbar Demo'</span>)</span><br><span class="line">        l.config(relief=SUNKEN, width=<span class="number">40</span>, height=<span class="number">10</span>, bg=<span class="string">'white'</span>)</span><br><span class="line">        l.pack(expand=YES, fill=BOTH)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">make_toolbar</span><span class="params">(self, size=<span class="params">(<span class="number">30</span>, <span class="number">30</span>)</span>)</span>:</span></span><br><span class="line">        toolbar = Frame(self, cursor=<span class="string">'hand2'</span>, relief=SUNKEN, bd=<span class="number">2</span>)</span><br><span class="line">        toolbar.pack(side=BOTTOM, fill=X)</span><br><span class="line">        Button(toolbar, text=<span class="string">'Quit'</span>, command=self.quit).pack(side=RIGHT)</span><br><span class="line">        photo_files = (<span class="string">'at.png'</span>, <span class="string">'bd.png'</span>, <span class="string">'dk.png'</span>)</span><br><span class="line">        self.tool_photo_objs = []</span><br><span class="line">        <span class="keyword">for</span> file <span class="keyword">in</span> photo_files:</span><br><span class="line">            img = PhotoImage(file=<span class="string">'./gif/thumbs/'</span> + file)</span><br><span class="line">            btn = Button(toolbar, image=img, command=self.greeting)</span><br><span class="line">            btn.config(bd=<span class="number">5</span>, relief=RIDGE)</span><br><span class="line">            btn.config(width=size[<span class="number">0</span>], height=size[<span class="number">0</span>])</span><br><span class="line">            btn.pack(side=LEFT)</span><br><span class="line">            self.tool_photo_objs.append(img)</span><br><span class="line">        Button(toolbar, text=<span class="string">'Hello'</span>, command=self.greeting).pack(side=LEFT)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">make_menubar</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.menubar = Menu(self.master)</span><br><span class="line">        self.master.config(menu=self.menubar)</span><br><span class="line">        self.file_menu()</span><br><span class="line">        self.edit_menu()</span><br><span class="line">        self.image_menu()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">file_menu</span><span class="params">(self)</span>:</span></span><br><span class="line">        pulldown = Menu(self.menubar)</span><br><span class="line">        pulldown.add_command(label=<span class="string">'OPEN...'</span>, command=self.notdone)</span><br><span class="line">        pulldown.add_command(label=<span class="string">'QUIT'</span>, command=self.quit)</span><br><span class="line">        self.menubar.add_cascade(label=<span class="string">'FILE'</span>, underline=<span class="number">0</span>, menu=pulldown)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">edit_menu</span><span class="params">(self)</span>:</span></span><br><span class="line">        pulldown = Menu(self.menubar)</span><br><span class="line">        pulldown.add_command(label=<span class="string">'PASTE'</span>, command=self.notdone)</span><br><span class="line">        pulldown.add_command(label=<span class="string">'SPAM'</span>, command=self.greeting)</span><br><span class="line">        pulldown.add_separator()</span><br><span class="line">        pulldown.add_command(label=<span class="string">'DELETE'</span>, command=self.greeting)</span><br><span class="line">        pulldown.entryconfig(<span class="number">4</span>, state=DISABLED)</span><br><span class="line">        self.menubar.add_cascade(label=<span class="string">'EDIT'</span>, underline=<span class="number">0</span>, menu=pulldown)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">image_menu</span><span class="params">(self)</span>:</span></span><br><span class="line">        photo_files = (<span class="string">'at.png'</span>, <span class="string">'bd.png'</span>, <span class="string">'dk.png'</span>)</span><br><span class="line">        pulldown = Menu(self.menubar)</span><br><span class="line">        self.photo_objs = []</span><br><span class="line">        <span class="keyword">for</span> file <span class="keyword">in</span> photo_files:</span><br><span class="line">            img = PhotoImage(file=<span class="string">'./gif/'</span> + file)</span><br><span class="line">            pulldown.add_command(image=img, command=self.notdone)</span><br><span class="line">            self.photo_objs.append(img)</span><br><span class="line">        self.menubar.add_cascade(label=<span class="string">'IMAGE'</span>, underline=<span class="number">0</span>, menu=pulldown)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">greeting</span><span class="params">(self)</span>:</span></span><br><span class="line">        showinfo(<span class="string">'greeting'</span>, <span class="string">'GREETING'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">notdone</span><span class="params">(self)</span>:</span></span><br><span class="line">        showerror(<span class="string">'NOT DONE'</span>, <span class="string">'NOT DONE'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">quit</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> askyesno(<span class="string">'Verify quit'</span>, <span class="string">'Sure?'</span>):</span><br><span class="line">            Frame.quit(self)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    NewMenuDemo().mainloop()</span><br></pre></td></tr></table></figure><h3 id="滚动条与列表">滚动条与列表</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># gui23.py</span></span><br><span class="line"><span class="comment"># -*- coding: UTF-8 -*-</span></span><br><span class="line"><span class="keyword">from</span> Tkinter <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ScrolledList</span><span class="params">(Frame)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, options, parent=None)</span>:</span></span><br><span class="line">        Frame.__init__(self, parent)</span><br><span class="line">        self.pack(expand=YES, fill=BOTH)</span><br><span class="line">        self.makeWidgets(options)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">handle_list</span><span class="params">(self, event)</span>:</span></span><br><span class="line">        index = self.listbox.curselection()  <span class="comment"># 鼠标选中的行</span></span><br><span class="line">        label = self.listbox.get(index)  <span class="comment"># 获取鼠标选中的值</span></span><br><span class="line">        self.runCommand(label)  <span class="comment"># 打印出值</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">makeWidgets</span><span class="params">(self, options)</span>:</span></span><br><span class="line">        <span class="comment"># sbar = Scrollbar(self, orient='horizontal')  # 横向滚动</span></span><br><span class="line">        sbar = Scrollbar(self)</span><br><span class="line">        list = Listbox(self, relief=SUNKEN)</span><br><span class="line">        sbar.config(command=list.yview)  <span class="comment"># 移动滚动条启用回调： 按比例调节列表框的显示，</span></span><br><span class="line">        list.config(yscrollcommand=sbar.set)  <span class="comment"># 移动列表框启用回调：按比例调节滚动条</span></span><br><span class="line">        sbar.pack(side=RIGHT, fill=Y)</span><br><span class="line">        list.pack(side=LEFT, expand=YES, fill=BOTH)</span><br><span class="line">        pos = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> label <span class="keyword">in</span> options:</span><br><span class="line">            list.insert(pos, label)</span><br><span class="line">            pos += <span class="number">1</span></span><br><span class="line">        <span class="comment"># selectmode 选择模式SINGLE(单选), BROWSE(默认单选), MULTIPLE(多选), EXTENDED(多选)</span></span><br><span class="line">        <span class="comment"># 启用多选时， curselection返回列表</span></span><br><span class="line">        <span class="comment"># 启用单选时， curselection返回字符串</span></span><br><span class="line">        list.config(selectmode=EXTENDED, setgrid=<span class="number">1</span>)</span><br><span class="line">        list.bind(<span class="string">'&lt;Double-1&gt;'</span>, self.handle_list)</span><br><span class="line">        self.listbox = list</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">runCommand</span><span class="params">(self, selection)</span>:</span></span><br><span class="line">        print(<span class="string">'YOU SELECTED:'</span>, selection)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    options = ((<span class="string">'Lumberjack-%s'</span> % x) <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">20</span>))</span><br><span class="line">    ScrolledList(options).mainloop()</span><br></pre></td></tr></table></figure><h3 id="text组件">TEXT组件</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line">gui24.py</span><br><span class="line"><span class="comment"># -*- coding: UTF-8 -*-</span></span><br><span class="line"><span class="keyword">from</span> Tkinter <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ScrollText</span><span class="params">(Frame)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, parent=None, text=<span class="string">''</span>, file=None)</span>:</span></span><br><span class="line">        Frame.__init__(self, parent)</span><br><span class="line">        self.pack(expand=YES, fill=BOTH)</span><br><span class="line">        self.make_widgets()</span><br><span class="line">        self.set_text(text, file)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">make_widgets</span><span class="params">(self)</span>:</span></span><br><span class="line">        sbar = Scrollbar(self)</span><br><span class="line">        text = Text(self, relief=SUNKEN)</span><br><span class="line">        sbar.config(command=text.yview)</span><br><span class="line">        text.config(yscrollcommand=sbar.set)</span><br><span class="line">        sbar.pack(side=RIGHT, fill=Y)</span><br><span class="line">        text.pack(side=LEFT, expand=YES, fill=BOTH)</span><br><span class="line">        self.text = text</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">set_text</span><span class="params">(self, text=<span class="string">''</span>, file=None)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> file:</span><br><span class="line">            text = open(file, <span class="string">'r'</span>).read()</span><br><span class="line">        <span class="comment"># 1.0表示第一行，第0列（行从1开始，列从0开始）</span></span><br><span class="line">        <span class="comment"># END表示最末一个字符后面第一个位置</span></span><br><span class="line">        self.text.delete(<span class="string">'1.0'</span>, END)  <span class="comment"># 删除从第一行第0列开始到最后的字符串，即删除全部</span></span><br><span class="line">        self.text.insert(<span class="string">'1.0'</span>, text)  <span class="comment"># 从第一行第0列开始填充数据</span></span><br><span class="line">        <span class="comment"># mark_set 设置text标志</span></span><br><span class="line">        self.text.mark_set(INSERT, <span class="string">'1.0'</span>)  <span class="comment"># 设置将光标设置在文本开始位置</span></span><br><span class="line">        <span class="comment"># self.text.mark_set('line_two', '2.2')  # 自定义标志位置 可以用mark_unset取消</span></span><br><span class="line">        self.text.focus()</span><br><span class="line">        <span class="comment"># TEXT的tag标签</span></span><br><span class="line">        <span class="comment"># SEL是内置的标签，表示当前选中的文本</span></span><br><span class="line">        <span class="comment"># text = self.text.get(SEL_FIRST, SEL_LAST)</span></span><br><span class="line">        <span class="comment"># text = self.text.get('sel.first', 'sel.last')</span></span><br><span class="line">        <span class="comment"># self.text.tag_add('alltext', '1.0', END)  # 选中所有文本</span></span><br><span class="line">        <span class="comment"># self.text.tag_add(SEL, index1, index2)  # 将一定范围内的文本添加到内建的SEL标签</span></span><br><span class="line">        <span class="comment"># self.text.tag_remove(SEL, '1.0', END)  # 将字符串所有字符从SEL标签中删除</span></span><br><span class="line">        <span class="comment"># self.text.tag_delete(SEL)  # 删除SEL标签</span></span><br><span class="line">        <span class="comment"># self.text.tag_add('demo', '1.5', '1.7')</span></span><br><span class="line">        <span class="comment"># self.text.tag_add('demo', '3.0', '5.7')</span></span><br><span class="line">        <span class="comment"># self.text.tag_config('demo', background='purple')</span></span><br><span class="line">        <span class="comment"># self.text.tag_config('demo', fontground='white')</span></span><br><span class="line">        <span class="comment"># self.text.tag_config('demo', font=('times', 16, 'underline'))</span></span><br><span class="line">        <span class="comment"># self.text.tag_bind('demo', '&lt;Double-1&gt;', func)</span></span><br><span class="line">        <span class="comment"># see方法</span></span><br><span class="line">        <span class="comment"># self.text.see('1.0')  # 滚动到第一行第0列</span></span><br><span class="line">        <span class="comment"># self.text.see(INSERT)  # 滚动到光标插入处</span></span><br><span class="line">        <span class="comment"># self.text.see(SEL_FIRST)  # 滚动到选中文本第一个字符串</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_text</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="comment"># -1c 表示往回数一个字符串</span></span><br><span class="line">        <span class="comment"># +1l 表示往前数一行</span></span><br><span class="line">        <span class="keyword">return</span> self.text.get(<span class="string">'1.0'</span>, END + <span class="string">'-1c'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    root = Tk()</span><br><span class="line">    <span class="keyword">if</span> len(sys.argv) &gt; <span class="number">1</span>:</span><br><span class="line">        st = ScrollText(file=sys.argv[<span class="number">1</span>])</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        st = ScrollText(text=<span class="string">'Words\ngo here'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show</span><span class="params">(event)</span>:</span></span><br><span class="line">        print(repr(st.get_text()))</span><br><span class="line"></span><br><span class="line">    root.bind(<span class="string">'&lt;Key-Escape&gt;'</span>, show)</span><br><span class="line">    root.mainloop()</span><br></pre></td></tr></table></figure><h3 id="简单的文本编辑器">简单的文本编辑器</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># gui25.py</span></span><br><span class="line"><span class="comment"># -*- coding: UTF-8 -*-</span></span><br><span class="line"><span class="keyword">from</span> Tkinter <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> tkSimpleDialog <span class="keyword">import</span> askstring</span><br><span class="line"><span class="keyword">from</span> tkFileDialog <span class="keyword">import</span> asksaveasfilename</span><br><span class="line"><span class="keyword">from</span> quitGui <span class="keyword">import</span> Quitter</span><br><span class="line"><span class="keyword">from</span> gui24 <span class="keyword">import</span> ScrollText</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SimpleEditor</span><span class="params">(ScrollText)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, parent=None, file=None)</span>:</span></span><br><span class="line">        frm = Frame(parent)</span><br><span class="line">        frm.pack(fill=X)</span><br><span class="line">        Button(frm, text=<span class="string">'Save'</span>, command=self.on_save).pack(side=LEFT)</span><br><span class="line">        Button(frm, text=<span class="string">'Cut'</span>, command=self.on_cut).pack(side=LEFT)</span><br><span class="line">        Button(frm, text=<span class="string">'Paste'</span>, command=self.on_paste).pack(side=LEFT)</span><br><span class="line">        Button(frm, text=<span class="string">'Find'</span>, command=self.on_find).pack(side=LEFT)</span><br><span class="line">        Quitter(frm).pack(side=LEFT)</span><br><span class="line">        ScrollText.__init__(self, parent, file=file)</span><br><span class="line">        self.text.config(font=(<span class="string">'courier'</span>, <span class="number">9</span>, <span class="string">'normal'</span>))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">on_save</span><span class="params">(self)</span>:</span></span><br><span class="line">        filename = asksaveasfilename()</span><br><span class="line">        <span class="keyword">if</span> filename:</span><br><span class="line">            alltext = self.get_text()</span><br><span class="line">            open(filename, <span class="string">'w'</span>).write(alltext)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">on_cut</span><span class="params">(self)</span>:</span></span><br><span class="line">        text = self.text.get(SEL_FIRST, SEL_LAST)</span><br><span class="line">        self.text.delete(SEL_FIRST, SEL_LAST)</span><br><span class="line">        self.clipboard_clear()</span><br><span class="line">        self.clipboard_append(text)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">on_paste</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            text = self.selection_get(selection=<span class="string">'CLIPBOARD'</span>)</span><br><span class="line">            self.text.insert(INSERT, text)</span><br><span class="line">        <span class="keyword">except</span> TclError:</span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">on_find</span><span class="params">(self)</span>:</span></span><br><span class="line">        target = askstring(<span class="string">'SimpleEdit'</span>, <span class="string">'Search string?'</span>)</span><br><span class="line">        <span class="keyword">if</span> target:</span><br><span class="line">            where = self.text.search(target, INSERT, END)</span><br><span class="line">            <span class="keyword">if</span> where:</span><br><span class="line">                print(where)</span><br><span class="line">                pastit = where + (<span class="string">'+%dc'</span> % len(target))</span><br><span class="line">                self.text.tag_remove(SEL, <span class="string">'1.0'</span>, END)</span><br><span class="line">                self.text.tag_add(SEL, where, pastit)</span><br><span class="line">                self.text.mark_set(INSERT, pastit)</span><br><span class="line">                self.text.see(INSERT)</span><br><span class="line">                self.text.focus()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    <span class="keyword">if</span> len(sys.argv) &gt; <span class="number">1</span>:</span><br><span class="line">        SimpleEditor(file=sys.argv[<span class="number">1</span>]).mainloop()</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        SimpleEditor().mainloop()</span><br></pre></td></tr></table></figure><h3 id="创建基础画布">创建基础画布</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># gui26.py</span></span><br><span class="line"><span class="comment"># -*- coding: UTF-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> Tkinter <span class="keyword">import</span> *</span><br><span class="line">canvas = Canvas(width=<span class="number">525</span>, height=<span class="number">300</span>, bg=<span class="string">'white'</span>)</span><br><span class="line">canvas.pack(expand=YES, fill=BOTH)</span><br><span class="line"></span><br><span class="line">canvas.create_line(<span class="number">100</span>, <span class="number">100</span>, <span class="number">200</span>, <span class="number">200</span>)</span><br><span class="line">canvas.create_line(<span class="number">100</span>, <span class="number">200</span>, <span class="number">200</span>, <span class="number">300</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">20</span>, <span class="number">2</span>):</span><br><span class="line">    canvas.create_line(<span class="number">0</span>, i, <span class="number">50</span>, i)</span><br><span class="line">canvas.create_oval(<span class="number">20</span>, <span class="number">20</span>, <span class="number">300</span>, <span class="number">100</span>, width=<span class="number">10</span>, fill=<span class="string">'yellow'</span>)</span><br><span class="line">d = &#123;<span class="number">1</span>:PIESLICE,<span class="number">2</span>:CHORD,<span class="number">3</span>:ARC&#125;</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> d:</span><br><span class="line">    canvas.create_arc(</span><br><span class="line">        (<span class="number">10</span>,<span class="number">10</span> + <span class="number">60</span>*i,<span class="number">110</span>,<span class="number">110</span> + <span class="number">60</span>*i),</span><br><span class="line">        style=d[i],   <span class="comment">#指定样式</span></span><br><span class="line">        start=<span class="number">30</span>,     <span class="comment">#指定起始角度</span></span><br><span class="line">        extent=<span class="number">30</span>     <span class="comment">#指定角度偏移量</span></span><br><span class="line">        )</span><br><span class="line">canvas.create_arc(<span class="number">0</span>, <span class="number">0</span>, <span class="number">100</span>, <span class="number">200</span>, fill=<span class="string">'black'</span>)</span><br><span class="line">canvas.create_rectangle(<span class="number">200</span>, <span class="number">200</span>, <span class="number">300</span>, <span class="number">300</span>, width=<span class="number">5</span>, fill=<span class="string">'red'</span>)</span><br><span class="line">canvas.create_line(<span class="number">0</span>, <span class="number">300</span>, <span class="number">150</span>, <span class="number">150</span>, width=<span class="number">10</span>, fill=<span class="string">'green'</span>)</span><br><span class="line"></span><br><span class="line">photo = PhotoImage(file=<span class="string">'./gif/lightmachine.png'</span>)</span><br><span class="line">canvas.create_image(<span class="number">325</span>,<span class="number">25</span>, image=photo, anchor=NW)</span><br><span class="line"></span><br><span class="line">widget = Label(canvas, text=<span class="string">'Spam'</span>, fg=<span class="string">'white'</span>, bg=<span class="string">'black'</span>)</span><br><span class="line">widget.pack()</span><br><span class="line">canvas.create_window(<span class="number">100</span>, <span class="number">100</span>, window=widget)</span><br><span class="line">canvas.create_text(<span class="number">100</span>, <span class="number">280</span>, text=<span class="string">'CLOUD CLONE CORP.'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># id = canvas.create_line(fromX, fromY, toX, toY)  # 创建直线</span></span><br><span class="line"><span class="comment"># id = canvas.create_oval(fromX, fromY, toX, toY) # 创建椭圆</span></span><br><span class="line"><span class="comment"># id = canvas.create_arc(fromX, fromY, toX, toY)  # 创建扇形</span></span><br><span class="line"><span class="comment"># id =canvas.create_rectangle(fromX, fromY, toX, toY)  # 创建矩形</span></span><br><span class="line"><span class="comment"># canvas.move(id, offsetX, offsetY)  # 移动对象</span></span><br><span class="line"><span class="comment"># canvas.delete(id)  # 删除对象</span></span><br><span class="line"><span class="comment"># canvas.tkraise(id)  # 将对象移动到前端</span></span><br><span class="line"><span class="comment"># canvas.lower(id)  # 将对象移动到底部</span></span><br><span class="line"><span class="comment"># canvas.itemconfig(id, fill='red')  # 修改对象属性</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 画布标签</span></span><br><span class="line"><span class="comment"># canvas.create_line(fromX, fromY, toX, toY, tag='bubbles') </span></span><br><span class="line"><span class="comment"># canvas.create_line(fromX, fromY, toX, toY, tag='bubbles') </span></span><br><span class="line"><span class="comment"># id = canvas.create_line(fromX, fromY, toX, toY)</span></span><br><span class="line"><span class="comment"># canvas.addtag_withtag('bubbles', id)</span></span><br><span class="line"><span class="comment"># canvas.move('bubbles', diffX, diffY)</span></span><br><span class="line">mainloop()</span><br></pre></td></tr></table></figure><h3 id="canvas与滚动条">Canvas与滚动条</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># gui27.py</span></span><br><span class="line"><span class="comment"># -*- coding: UTF-8 -*-</span></span><br><span class="line"><span class="keyword">from</span> Tkinter <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ScrolledCanvas</span><span class="params">(Frame)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, parent=None, color=<span class="string">'brown'</span>)</span>:</span></span><br><span class="line">        Frame.__init__(self, parent)</span><br><span class="line">        self.pack(expand=YES, fill=BOTH)</span><br><span class="line">        canv = Canvas(self, bg=color, relief=SUNKEN)</span><br><span class="line">        canv.config(width=<span class="number">300</span>, height=<span class="number">200</span>)</span><br><span class="line">        canv.config(scrollregion=(<span class="number">0</span>, <span class="number">0</span>, <span class="number">300</span>, <span class="number">1000</span>))</span><br><span class="line">        canv.config(highlightthickness=<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">        sbar = Scrollbar(self)</span><br><span class="line">        sbar.config(command=canv.yview)</span><br><span class="line">        canv.config(yscrollcommand=sbar.set)</span><br><span class="line">        sbar.pack(side=RIGHT, fill=Y)</span><br><span class="line">        canv.pack(side=LEFT, expand=YES, fill=BOTH)</span><br><span class="line"></span><br><span class="line">        self.fillContent(canv)</span><br><span class="line">        canv.bind(<span class="string">'&lt;Double-1&gt;'</span>, self.onDoubleClick)</span><br><span class="line">        self.canvas = canv</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">fillContent</span><span class="params">(self, canv)</span>:</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">10</span>):</span><br><span class="line">            canv.create_text(<span class="number">150</span>, <span class="number">50</span>+(i*<span class="number">100</span>), text=<span class="string">'spam'</span>+str(i), fill=<span class="string">'beige'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">onDoubleClick</span><span class="params">(self, event)</span>:</span></span><br><span class="line">        print(event.x, event.y)</span><br><span class="line">        print(self.canvas.canvasx(event.x), self.canvas.canvasy(event.y))</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    ScrolledCanvas().mainloop()</span><br></pre></td></tr></table></figure><h3 id="canvas绑定事件">Canvas绑定事件</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># gui28.py</span></span><br><span class="line"><span class="comment"># -*- coding: UTF-8 -*-</span></span><br><span class="line"><span class="keyword">from</span> Tkinter <span class="keyword">import</span> *</span><br><span class="line">trace = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CanvasEventDemo</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, parent=None)</span>:</span></span><br><span class="line">        canvas = Canvas(width=<span class="number">300</span>, height=<span class="number">300</span>, bg=<span class="string">'beige'</span>)</span><br><span class="line">        canvas.pack()</span><br><span class="line">        canvas.bind(<span class="string">'&lt;ButtonPress-1&gt;'</span>, self.on_start)</span><br><span class="line">        canvas.bind(<span class="string">'&lt;B1-Motion&gt;'</span>, self.on_grow)</span><br><span class="line">        canvas.bind(<span class="string">'&lt;Double-1&gt;'</span>, self.on_clear)</span><br><span class="line">        canvas.bind(<span class="string">'&lt;ButtonPress-3&gt;'</span>, self.on_move)</span><br><span class="line">        self.canvas = canvas</span><br><span class="line">        self.drawn = <span class="literal">None</span></span><br><span class="line">        self.kinds = [canvas.create_oval, canvas.create_rectangle]</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">on_start</span><span class="params">(self, event)</span>:</span></span><br><span class="line">        self.shape =self.kinds[<span class="number">0</span>]</span><br><span class="line">        self.kinds = self.kinds[<span class="number">1</span>:] + self.kinds[:<span class="number">1</span>]</span><br><span class="line">        self.start = event</span><br><span class="line">        self.drawn = <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">on_grow</span><span class="params">(self, event)</span>:</span></span><br><span class="line">        canvas = event.widget</span><br><span class="line">        <span class="keyword">if</span> self.drawn:</span><br><span class="line">            canvas.delete(self.drawn)</span><br><span class="line">        object_id = self.shape(self.start.x, self.start.y, event.x, event.y)</span><br><span class="line">        <span class="keyword">if</span> trace:</span><br><span class="line">            print(object_id)</span><br><span class="line">        self.drawn = object_id</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">on_clear</span><span class="params">(self, event)</span>:</span></span><br><span class="line">        event.widget.delete(<span class="string">'all'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">on_move</span><span class="params">(self, event)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> self.drawn:</span><br><span class="line">            <span class="keyword">if</span> trace:</span><br><span class="line">                print(self.drawn)</span><br><span class="line">            canvas = event.widget</span><br><span class="line">            diffx, diffy = (event.x - self.start.x), (event.y - self.start.y)</span><br><span class="line">            canvas.move(self.drawn, diffx, diffy)</span><br><span class="line">            self.start = event</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    CanvasEventDemo()</span><br><span class="line">    mainloop()</span><br></pre></td></tr></table></figure><h3 id="grid布局和pack布局实现自动扩展">Grid布局和pack布局实现自动扩展</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># gui29.py</span></span><br><span class="line"><span class="comment"># -*- coding: UTF-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> Tkinter <span class="keyword">import</span> *</span><br><span class="line">colors = [<span class="string">'red'</span>, <span class="string">'green'</span>, <span class="string">'orange'</span>, <span class="string">'white'</span>, <span class="string">'yellow'</span>, <span class="string">'blue'</span>]</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">gridbox</span><span class="params">(root)</span>:</span></span><br><span class="line">    Label(root, text=<span class="string">'GRID'</span>).grid(columnspan=<span class="number">2</span>)  <span class="comment"># 跨两列</span></span><br><span class="line">    row = <span class="number">1</span></span><br><span class="line">    <span class="keyword">for</span> color <span class="keyword">in</span> colors:</span><br><span class="line">        lab = Label(root, text=color, relief=RIDGE, width=<span class="number">25</span>)</span><br><span class="line">        ent = Entry(root, bg=color, relief=SUNKEN, width=<span class="number">50</span>)</span><br><span class="line">        lab.grid(row=row, column=<span class="number">0</span>, sticky=NSEW)  <span class="comment"># 向4个方向扩展</span></span><br><span class="line">        ent.grid(row=row, column=<span class="number">1</span>, sticky=NSEW)</span><br><span class="line">        root.rowconfigure(row, weight=<span class="number">1</span>)  <span class="comment"># 循环行自动扩展</span></span><br><span class="line">        row += <span class="number">1</span></span><br><span class="line">    root.columnconfigure(<span class="number">0</span>, weight=<span class="number">1</span>)  <span class="comment"># 第一列自动扩展</span></span><br><span class="line">    root.columnconfigure(<span class="number">1</span>, weight=<span class="number">1</span>)  <span class="comment"># 第二列自动扩展</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">packbox</span><span class="params">(root)</span>:</span></span><br><span class="line">    Label(root, text=<span class="string">'PACK'</span>).pack()</span><br><span class="line">    <span class="keyword">for</span> color <span class="keyword">in</span> colors:</span><br><span class="line">        row = Frame(root)</span><br><span class="line">        lab = Label(row, text=color, relief=RIDGE, width=<span class="number">25</span>)</span><br><span class="line">        ent = Entry(row, bg=color, relief=SUNKEN, width=<span class="number">50</span>)</span><br><span class="line">        row.pack(side=TOP, expand=YES, fill=BOTH)</span><br><span class="line">        lab.pack(side=LEFT, expand=YES, fill=BOTH)</span><br><span class="line">        ent.pack(side=RIGHT, expand=YES, fill=BOTH)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    root = Tk()</span><br><span class="line">    gridbox(Toplevel(root))</span><br><span class="line">    packbox(Toplevel(root))</span><br><span class="line">    Button(root, text=<span class="string">'Quit'</span>, command=root.quit).pack()</span><br><span class="line">    mainloop()</span><br></pre></td></tr></table></figure><h2 id="pil">PIL</h2><p><strong>Python Imaging Library</strong></p><h3 id="安装">安装</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo apt-get install python-imaging</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 或者</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo easy_install PIL</span></span><br></pre></td></tr></table></figure><p>window系统选择 <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> pip install Pillow</span></span><br></pre></td></tr></table></figure></p><h3 id="图像操作">图像操作</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Image</span><br><span class="line"><span class="comment"># 打开一个jpg图像文件，注意路径要改成你自己的:</span></span><br><span class="line">im = Image.open(<span class="string">'/Users/michael/test.jpg'</span>)</span><br><span class="line"><span class="comment"># 获得图像尺寸:</span></span><br><span class="line">w, h = im.size</span><br><span class="line"><span class="comment"># 缩放到50%:</span></span><br><span class="line">im.thumbnail((w//<span class="number">2</span>, h//<span class="number">2</span>))</span><br><span class="line"><span class="comment"># 把缩放后的图像用jpeg格式保存:</span></span><br><span class="line">im.save(<span class="string">'/Users/michael/thumbnail.jpg'</span>, <span class="string">'jpeg'</span>)</span><br></pre></td></tr></table></figure><h3 id="模糊效果">模糊效果</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Image, ImageFilter</span><br><span class="line"></span><br><span class="line">im = Image.open(<span class="string">'/Users/hanchang/test.jpg'</span>)</span><br><span class="line">im2 = im.filter(ImageFilter.BLUR)</span><br><span class="line">im2.save(<span class="string">'/Users/hanchang/blur.jpg'</span>, <span class="string">'jpeg'</span>)</span><br></pre></td></tr></table></figure><h3 id="自定义图像验证码">自定义图像验证码</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Image, ImageDraw, ImageFont, ImageFilter</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="comment"># 随机字母:</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">rndChar</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> chr(random.randint(<span class="number">65</span>, <span class="number">90</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 随机颜色1:</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">rndColor</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> (random.randint(<span class="number">64</span>, <span class="number">255</span>), random.randint(<span class="number">64</span>, <span class="number">255</span>), random.randint(<span class="number">64</span>, <span class="number">255</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 随机颜色2:</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">rndColor2</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> (random.randint(<span class="number">32</span>, <span class="number">127</span>), random.randint(<span class="number">32</span>, <span class="number">127</span>), random.randint(<span class="number">32</span>, <span class="number">127</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 240 x 60:</span></span><br><span class="line">width = <span class="number">60</span> * <span class="number">4</span></span><br><span class="line">height = <span class="number">60</span></span><br><span class="line">image = Image.new(<span class="string">'RGB'</span>, (width, height), (<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>))</span><br><span class="line"><span class="comment"># 创建Font对象:</span></span><br><span class="line">font = ImageFont.truetype(<span class="string">'Arial.ttf'</span>, <span class="number">36</span>)</span><br><span class="line"><span class="comment"># 创建Draw对象:</span></span><br><span class="line">draw = ImageDraw.Draw(image)</span><br><span class="line"><span class="comment"># 填充每个像素:</span></span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> range(width):</span><br><span class="line">    <span class="keyword">for</span> y <span class="keyword">in</span> range(height):</span><br><span class="line">        draw.point((x, y), fill=rndColor())</span><br><span class="line"><span class="comment"># 输出文字:</span></span><br><span class="line"><span class="keyword">for</span> t <span class="keyword">in</span> range(<span class="number">4</span>):</span><br><span class="line">    draw.text((<span class="number">60</span> * t + <span class="number">10</span>, <span class="number">10</span>), rndChar(), font=font, fill=rndColor2())</span><br><span class="line"><span class="comment"># 模糊:</span></span><br><span class="line">image = image.filter(ImageFilter.BLUR)</span><br><span class="line">image.save(<span class="string">'code.jpg'</span>, <span class="string">'jpeg'</span>);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Tkinter </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu14.04服务器基础配置</title>
      <link href="/2016/11/10/Ubuntu14.04%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%9F%BA%E7%A1%80%E9%85%8D%E7%BD%AE/"/>
      <url>/2016/11/10/Ubuntu14.04%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%9F%BA%E7%A1%80%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h3 id="登陆ssh">登陆ssh</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ssh root@ipaddress </span><br><span class="line">password:</span><br></pre></td></tr></table></figure><p>首次登陆出现的错误</p><p><font color="#d44375">perl: warning: Setting locale failed.</font><br> <font color="#d44375">perl: warning: Please check that your locale settings:</font></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 安装 localepurge 管理语言文件</span></span><br><span class="line">sudo apt-get install localepurge</span><br><span class="line"><span class="meta">#</span><span class="bash"> 或者之后自行配置</span></span><br><span class="line">sudo dpkg-reconfigure localepurge</span><br><span class="line"><span class="meta">#</span><span class="bash"> 生成自己需要的语言</span></span><br><span class="line">sudo locale-gen zh_CN.UTF-8 en_US.UTF-8</span><br><span class="line"><span class="meta">#</span><span class="bash"> 打印结果</span></span><br><span class="line">locale</span><br><span class="line"><span class="meta">#</span><span class="bash"> ssh连接时候指定语言</span></span><br><span class="line">LC_ALL=en_US.UTF-8 ssh &lt;host&gt;</span><br></pre></td></tr></table></figure><h3 id="创建用户">创建用户</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo adduser hanchang</span></span><br><span class="line">password:</span><br><span class="line">retry password:</span><br></pre></td></tr></table></figure><p><strong>将用户添加到sudo用户组</strong></p><p>错误提示 <font color="#d44375">username is not in the sudoers file.</font> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">su -</span><br><span class="line">password：</span><br><span class="line">chmod u+w /etc/sudoers   # 添加文件写权限</span><br><span class="line">root ALL=(ALL) ALL 下面添加以下代码</span><br><span class="line">hanchang ALL=(ALL) NOPASSWD: ALL</span><br><span class="line">:wq 退出</span><br><span class="line">chmod u-w /etc/sudoers  # 取消文件写权限</span><br></pre></td></tr></table></figure></p><h3 id="修改root密码">修改root密码</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo passwd</span></span><br><span class="line">password:</span><br><span class="line">retry password:</span><br></pre></td></tr></table></figure><h3 id="禁止root用户远程登陆ssh">禁止root用户远程登陆ssh</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> /etc/ssh/</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo vim sshd_config</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">PermitRootLogin yes改成PermitRootLogin no</span><br><span class="line">service sshd restart    或者 /etc/init.d/sshd restart（ssh服务器重启）</span><br><span class="line">```  </span><br><span class="line"></span><br><span class="line">### 指定IP地址登陆</span><br><span class="line">```shell</span><br><span class="line">$ vim  /etc/hosts.allow</span><br><span class="line">sshd:192.168.220.164:allow  # 最后添加</span><br><span class="line"></span><br><span class="line">$ vim /etc/hosts.deny</span><br><span class="line">sshd:ALL #最后添加</span><br></pre></td></tr></table></figure><h3 id="避免sshd连接超时">避免sshd连接超时</h3><p>修改客户端 <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo vim /etc/ssh/ssh_config</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 添加</span></span><br><span class="line">ServerAliveInterval 30   # 每30秒向服务器发起心跳</span><br><span class="line">ServerAliveCountMax 6 # 允许6次无响应</span><br></pre></td></tr></table></figure></p><p>或者修改服务器端 <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 打开</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo vim /etc/ssh/sshd_config</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 添加</span></span><br><span class="line">ClientAliveInterval 30</span><br><span class="line">ClientAliveCountMax 6</span><br></pre></td></tr></table></figure></p><h3 id="流量监控">流量监控</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 安装监控软件</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo apt-get install vnstat</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 安装好后运行以下命令初始化数据库</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> eth0可以通过ifconfig查看</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo vnstat -u -i eth1</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 修改配置文件</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo vim /etc/vnstat.conf</span></span><br><span class="line">Interface "eth1" #此处修改需要监控的网卡</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 启动守护进程</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo /etc/init.d/vnstat start</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 默认开机启动</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo update-rc.d vnstat <span class="built_in">enable</span></span></span><br></pre></td></tr></table></figure><h3 id="查看是否安装iptables">查看是否安装iptables</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> iptables: /sbin/iptables /usr/share/iptables /usr/share/man/man8/iptables.8.gz <span class="comment">#表示已经安装iptables</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> apt-get install iptables <span class="comment">#如果默认没有安装，请运行此命令安装防火墙</span></span></span><br></pre></td></tr></table></figure><p>编辑iptables配置文件 <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo vi /etc/iptables.rules</span></span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">*filter</span><br><span class="line">    :INPUT DROP [0:0]</span><br><span class="line">    :FORWARD ACCEPT [0:0]</span><br><span class="line">    :OUTPUT ACCEPT [0:0]</span><br><span class="line">    :syn-flood - [0:0]</span><br><span class="line">    -A INPUT -i lo -j ACCEPT</span><br><span class="line">    -A INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT</span><br><span class="line">    -A INPUT -p tcp -m state --state NEW -m tcp --dport 20 -j ACCEPT</span><br><span class="line">    -A INPUT -p tcp -m state --state NEW -m tcp --dport 21 -j ACCEPT</span><br><span class="line">    -A INPUT -p tcp -m state --state NEW -m tcp --dport 22 -j ACCEPT</span><br><span class="line">    -A INPUT -p tcp -m state --state NEW -m tcp --dport 80 -j ACCEPT</span><br><span class="line">    -A INPUT -p tcp -m state --state NEW -m tcp --dport 443 -j ACCEPT</span><br><span class="line">    -A INPUT -p tcp -m state --state NEW -m tcp --dport 3306 -j ACCEPT</span><br><span class="line">    -A INPUT -p icmp -m limit --limit 100/sec --limit-burst 100 -j ACCEPT</span><br><span class="line">    -A INPUT -p icmp -m limit --limit 1/s --limit-burst 10 -j ACCEPT</span><br><span class="line">    -A INPUT -p tcp -m tcp --tcp-flags FIN,SYN,RST,ACK SYN -j syn-flood</span><br><span class="line">    -A INPUT -j REJECT --reject-with icmp-host-prohibited</span><br><span class="line">    -A syn-flood -p tcp -m limit --limit 3/sec --limit-burst 6 -j RETURN</span><br><span class="line">    -A syn-flood -j REJECT --reject-with icmp-port-unreachable</span><br><span class="line">    COMMIT</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo iptables-restore &lt; /etc/iptables.rules <span class="comment">#使防火墙规则生效，重启主机执行此命令</span></span></span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 重启主机会使以上配置失效，以下内容为如何配置开机自动启动防火墙</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> vi /etc/network/<span class="keyword">if</span>-pre-up.d/iptables <span class="comment">#创建文件，添加以下内容，使防火墙开机启动</span></span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">iptables-restore &lt; /etc/iptables.rules</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> chmod +x /etc/network/<span class="keyword">if</span>-pre-up.d/iptables <span class="comment">#添加执行权限</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo iptables -L -n查看规则是否生效.</span></span><br></pre></td></tr></table></figure><h3 id="挂载新的硬盘">挂载新的硬盘</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> fdisk -l</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 如果出现</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Disk /dev/sdb doesn<span class="string">'t contain a valid partition table</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 说明没有分区,需要处理</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> fdisk /dev/sdb</span></span><br><span class="line">Command (m for help):  m为查看选项，这里我们输入n表示创建一个新的分区</span><br><span class="line"><span class="meta">#</span><span class="bash"> 选中默认，在分区大小中填写分区大小 +500G</span></span><br></pre></td></tr></table></figure><p>使新创建的分区在系统中立即生效 <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">root#</span><span class="bash"> partprobe</span></span><br></pre></td></tr></table></figure></p><p>格式化新创建的分区 <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkfs.ext3 /dev/hdb1</span><br></pre></td></tr></table></figure></p><p>使新创建的分区挂载/mnt/ssd_one 目录下 <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> mount /dev/hda1 /mnt/rhce01</span></span><br></pre></td></tr></table></figure></p><p>查看已经挂载的信息 <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo vim /etc/mtab</span></span><br></pre></td></tr></table></figure></p><p>开机自动挂载 <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash">sudo vim /etc/fstab</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 底部添加</span></span><br><span class="line">/dev/sdb1              /mnt/hdd_one              ext3    defaults        0 0</span><br></pre></td></tr></table></figure></p><p>查看现在的硬盘信息 <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">root@m1095:~# df -hl</span><br><span class="line">Filesystem      Size  Used Avail Use% Mounted on</span><br><span class="line">udev             12G  4.0K   12G   1% /dev</span><br><span class="line">tmpfs           2.4G  632K  2.4G   1% /run</span><br><span class="line">/dev/sda2        71G  1.2G   66G   2% /</span><br><span class="line">none            4.0K     0  4.0K   0% /sys/fs/cgroup</span><br><span class="line">none            5.0M     0  5.0M   0% /run/lock</span><br><span class="line">none             12G     0   12G   0% /run/shm</span><br><span class="line">none            100M     0  100M   0% /run/user</span><br><span class="line">/dev/sda1       226M   35M  175M  17% /boot</span><br><span class="line">/dev/sdb1       493G   70M  467G   1% /mnt/hdd_one</span><br></pre></td></tr></table></figure></p><h3 id="ftp服务器搭建">ftp服务器搭建</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo apt-get install vsftpd</span></span><br></pre></td></tr></table></figure><p>编辑配置文件 <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo vim /etc/vsftpd.conf</span></span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">anonymous_enable=NO   # 禁止匿名用户</span><br><span class="line">local_enable=YES   # 允许本地用户</span><br><span class="line">write_enable=YES # 允许写入</span><br><span class="line">chroot_local_user=YES  # 登陆用户被限制在自己的home目录下</span><br><span class="line">allow_writeable_chroot=YES # 配合chroot_local_user=YES使用</span><br><span class="line"># 当chroot_local_user=YES表示chroot_list为可以访问其他目录的用户</span><br><span class="line"># 当chroot_local_user=NO表示chroot_list为不可以访问其他目录的用户，</span><br><span class="line"># chroot_list_enable=YES  </span><br><span class="line"># chroot_list_file=/etc/vsftpd.chroot_list</span><br><span class="line"></span><br><span class="line"># 以下内容为添加内容</span><br><span class="line"># 设置为YES表示开启用户登陆过滤，设置为NO表示不开启用户过滤，所有用户都可以访问</span><br><span class="line">userlist_enable=YES</span><br><span class="line"># 在userlist_enable=YES的前提下，设置是否阻扯user_list文件中的用户登录FTP服务器</span><br><span class="line"># YES表示user_list为黑名单，在文件中的用户不能访问，不在文件中的用户可以访问</span><br><span class="line"># NO表示user_list 为白名单，在文件中的用户可以访问，不在文件中的用户不能访问</span><br><span class="line">userlist_deny=YES</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 添加root到文件中</span></span><br><span class="line">sudo vim /etc/vsftpd.user_list</span><br></pre></td></tr></table></figure><p><font color="#d44375">500 OOPS: vsftpd: refusing to run with writable root inside chroot()</font></p><p>原因：chroot设置为yes的时候，需要取消ftp根目录的写权限 <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 在配置文件中添加此设置</span><br><span class="line">allow_writeable_chroot=YES</span><br></pre></td></tr></table></figure></p><h3 id="安装lamp服务">安装Lamp服务</h3><p>安装apache <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo apt-get install apache2</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 将用户添加到apache用户组中</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo usermod -a -G www-data username <span class="comment"># www-data 为apache用户组名，username为登陆用户名</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> apache2安装rewrite</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo a2enmod rewrite</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo service apache2 restart</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 删除显示的版本信息</span></span><br><span class="line">ServerTokens Prod</span><br><span class="line">ServerSignature Off</span><br></pre></td></tr></table></figure></p><p>配置虚拟主机 <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo vim /etc/apache.2/apache2.conf</span></span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 添加以下内容</span><br><span class="line">&lt;Directory /home/zhc/www/&gt;</span><br><span class="line">        Options FollowSymLinks　#　不要加Index</span><br><span class="line">        AllowOverride All</span><br><span class="line">        Require all granted</span><br><span class="line">&lt;/Directory&gt;</span><br></pre></td></tr></table></figure><p>安装mysql <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo apt-get install mysql-server php5-mysql</span></span><br><span class="line">＃配置mysql</span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo mysql_secure_installation</span></span><br></pre></td></tr></table></figure></p><p>查看mysql是否开启慢查询日志</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> <span class="keyword">variables</span> <span class="keyword">like</span> <span class="string">'%slow%'</span>;</span><br><span class="line">+<span class="comment">---------------------------+---------------------------------------+</span></span><br><span class="line">| Variable_name             | Value                                 |</span><br><span class="line">+<span class="comment">---------------------------+---------------------------------------+</span></span><br><span class="line">| log_slow_admin_statements | OFF                                   |</span><br><span class="line">| log_slow_slave_statements | OFF                                   |</span><br><span class="line">| slow_launch_time          | 2                                     |</span><br><span class="line">| slow_query_log            | OFF                                   |</span><br><span class="line">| slow_query_log_file       | /var/lib/mysql/NC-PH-1551-49-slow.log |</span><br><span class="line">+<span class="comment">---------------------------+---------------------------------------+</span></span><br><span class="line">5 rows in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#开启慢查询</span></span><br><span class="line"><span class="keyword">set</span> <span class="keyword">global</span> log_slow_queries  = <span class="string">'ON'</span>;</span><br><span class="line"><span class="keyword">show</span> <span class="keyword">variables</span> <span class="keyword">like</span> <span class="string">'%slow%'</span>;</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">开启常规查询</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> vim /etc/myql/mysql.conf.d/mysqld.conf</span></span><br><span class="line">``` </span><br><span class="line">```text</span><br><span class="line">general_log_file        = /var/log/mysql/mysql.log</span><br><span class="line">general_log             = 1</span><br><span class="line"><span class="meta">#</span><span class="bash">开启错误查询</span></span><br><span class="line">log_error = /var/log/mysql/error.log</span><br><span class="line"><span class="meta">#</span><span class="bash">　防止innodb ibdata1文件过大</span></span><br><span class="line">innodb_file_per_table=1</span><br></pre></td></tr></table></figure><p>安装php <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo apt-get install php5 libapache2-mod-php5 php5-mcrypt</span></span><br><span class="line"><span class="meta">#</span><span class="bash">ubuntu16.04安装方法</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Add the PPA</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> apt-get install software-properties-common <span class="comment">#如果提示没有 add-apt-repository，需要执行此命令安装</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo add-apt-repository ppa:ondrej/php</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> If you get add-apt-repository: <span class="built_in">command</span> not found run the following <span class="built_in">command</span> first :</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo apt-get install software-properties-common</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo apt-get update</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo apt-get install php5.6</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo apt-get install php5.6-*</span></span><br></pre></td></tr></table></figure></p><p>配置php <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> vim /etc/php/5.6/apache/php.ini</span></span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">expose_php = Off # 隐藏php版本信息</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Ubuntu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CentOs7.2服务器基础配置</title>
      <link href="/2016/11/10/CentOs7.2%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%9F%BA%E7%A1%80%E9%85%8D%E7%BD%AE/"/>
      <url>/2016/11/10/CentOs7.2%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%9F%BA%E7%A1%80%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h3 id="查看当前版本">查看当前版本</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> cat /proc/version </span></span><br><span class="line"><span class="meta">$</span><span class="bash"> cat /etc/redhat-release</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> Centos Linux release 7.2.1511 (Core)</span></span><br></pre></td></tr></table></figure><h2 id="用户管理">用户管理</h2><h3 id="修改root密码">修改root密码</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash"> passwd root</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> 输入密码</span></span><br></pre></td></tr></table></figure><h3 id="创建用户">创建用户</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">su</span><br><span class="line"><span class="meta">#</span><span class="bash"> 输入密码</span></span><br><span class="line">useradd test</span><br><span class="line">passwd test</span><br><span class="line"><span class="meta">#</span><span class="bash"> 输入密码</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 确认密码</span></span><br><span class="line">su test # 切换成普通用户</span><br></pre></td></tr></table></figure><p><strong>将test用户加入到sudoers用</strong> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">visudo命令 <span class="comment"># 相当于直接编辑 /etc/sudoers,但用命令方式更安全,推荐</span></span></span><br><span class="line">su</span><br><span class="line">cd /etc</span><br><span class="line">chmod 777 sudoers</span><br><span class="line">root    ALL=(ALL)       ALL</span><br><span class="line">test    ALL=(ALL)       ALL  # 新添加的</span><br><span class="line">chmod 440 sudoers   # 权限改成440，必须，否则会报错</span><br></pre></td></tr></table></figure></p><h2 id="配置网络">配置网络</h2><h3 id="网络配置地址">网络配置地址</h3><ul><li>/etc/sysconfig/network Centos设置主机名和网络配置<br></li><li>/etc/sysconfig/network-scripts/ifcfg-eth0针对特定的网卡进行设置<br></li><li>/etc/resolv.conf设置DNS<br></li><li>/etc/hosts设置指定的域名解析地址</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">cd /etc/sysconfig/network-scripts/</span><br><span class="line">vi ifcfg-enp0s23</span><br><span class="line"><span class="meta">#</span><span class="bash"> 最后添加内容</span></span><br><span class="line">IPADDR=192.168.0.160  # ip地址</span><br><span class="line">NETMASK=255.255.255.0 # 掩码</span><br><span class="line">GATEWAY=192.168.0.1 # 网关地址</span><br><span class="line">DNS1=202.103.24.68 # DNS地址</span><br><span class="line"><span class="meta">#</span><span class="bash"> 修改内容</span></span><br><span class="line">ONBOOT=yes # 启动时网络接口有效</span><br><span class="line">BOOTPROTO=none # dhcp改成none dhcp自动获取，static固定，none手动</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 启动网卡</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo ifup eth0s23</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo systemctl restart network</span></span><br></pre></td></tr></table></figure><h3 id="安装网络查看工具">安装网络查看工具</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> yum install net-tools</span></span><br></pre></td></tr></table></figure><h2 id="ssh服务">SSH服务</h2><h3 id="配置ssh">配置Ssh</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 安装ssh</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> yum -y install  openssh*</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> service sshd start</span></span><br></pre></td></tr></table></figure><h3 id="ssh连接">Ssh连接</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> ssh <span class="built_in">test</span>@192.168.0.160 <span class="comment"># 默认22端口</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> ssh -p 2222 <span class="built_in">test</span>@192.168.0.160 <span class="comment"># 修改端口后</span></span></span><br></pre></td></tr></table></figure><p><strong>禁止root用户远程ssh连接</strong> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/ssh/sshd_congif </span><br><span class="line"><span class="meta">#</span><span class="bash"> 最后添加</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 禁止root远程登陆  </span></span><br><span class="line">PermitRootLogin no</span><br></pre></td></tr></table></figure></p><h2 id="安全">安全</h2><h3 id="关闭selinux">关闭SeLinux</h3><p>修改/etc/selinux/config 文件<br>将SELINUX=enforcing改为SELINUX=disabled<br>setenforce 0 ##设置SELinux 成为permissive模式,临时关闭或者及时起效</p><h3 id="开启防火墙">开启防火墙</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> systemctl mask firewalld</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> systemctl stop firewalld</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> yum install iptables-services <span class="comment"># 如果下面命令报错，则需要安装</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> systemctl <span class="built_in">enable</span> iptables</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> systemctl start iptables</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> systemctl <span class="built_in">enable</span> ip6tables</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> systemctl start ip6tables</span></span><br></pre></td></tr></table></figure><p><strong>防火墙开机启动</strong> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> systemctl <span class="built_in">enable</span> iptables</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> systemctl <span class="built_in">disable</span> iptables</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看开机运行的服务</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> systemctl list-unit-files --<span class="built_in">type</span>=service</span></span><br></pre></td></tr></table></figure></p><p><strong>火墙是否放行ssh端口22</strong> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> /etc/sysconfig/</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> vi iptables</span></span><br></pre></td></tr></table></figure></p><p>在commit前添加以下内容，并注释文件开头信息 <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> sample configuration <span class="keyword">for</span> iptables service</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> you can edit this manually or use system-config-firewall</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> please <span class="keyword">do</span> not ask us to add additional ports/services to this default configuration</span></span><br><span class="line">*filter</span><br><span class="line"><span class="meta">#</span><span class="bash"> :INPUT ACCEPT [0:0]</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> :FORWARD ACCEPT [0:0]</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> :OUTPUT ACCEPT [0:0]</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> -A INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> -A INPUT -p icmp -j ACCEPT</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> -A INPUT -i lo -j ACCEPT</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> -A INPUT -j REJECT --reject-with icmp-host-prohibited</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> -A FORWARD -j REJECT --reject-with icmp-host-prohibited</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 安全设置-防止扫描包</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> NONE 包(所有标识bit都没有设置)主要是扫描类的数据包</span></span><br><span class="line">-A INPUT -p tcp --tcp-flags ALL NONE -j DROP</span><br><span class="line"><span class="meta">#</span><span class="bash"> 防止sync-flood 攻击</span></span><br><span class="line">-A INPUT -p tcp ! --syn -m state --state NEW -j DROP</span><br><span class="line"><span class="meta">#</span><span class="bash"> ALL包（所有的标注bit都被设置了）也是网络扫描的数据包</span></span><br><span class="line">-A INPUT -p tcp --tcp-flags ALL ALL -j DROP</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 开放对应端口</span></span><br><span class="line">-A INPUT -p tcp -m state --state NEW -m tcp --dport 22 -j ACCEPT</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 缺省设置</span></span><br><span class="line">:INPUT DROP [0:0]</span><br><span class="line">:FORWARD ACCEPT [0:0]</span><br><span class="line">:OUTPUT ACCEPT [0:0]</span><br><span class="line"><span class="meta">#</span><span class="bash"> 许所有从服务器端发起的连接，由此返回的响应数据应该是允许的,yum操作等</span></span><br><span class="line">-A INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT</span><br><span class="line">-A INPUT -p icmp -j ACCEPT</span><br><span class="line"><span class="meta">#</span><span class="bash"> 接受主机localhost的任意请求</span></span><br><span class="line">-A INPUT -i lo -j ACCEPT</span><br><span class="line">-A INPUT -j REJECT --reject-with icmp-host-prohibited</span><br><span class="line">-A FORWARD -j REJECT --reject-with icmp-host-prohibited</span><br><span class="line"></span><br><span class="line">COMMIT</span><br></pre></td></tr></table></figure></p><h2 id="ftp服务">FTP服务</h2><h3 id="安装">安装</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> yum install vsftpd</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> systemctl start vsftpd</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> systemctl <span class="built_in">enable</span> vsftpd</span></span><br></pre></td></tr></table></figure><h3 id="配置">配置</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 更新防火墙，放行20， 21端口，如果用了代理上传，需要添加被动模式的端口号  </span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 修改配置项目</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> vi /etc/vsftpd/vsftpd.conf</span></span><br><span class="line">    </span><br><span class="line">anonymous_enable=No # YES改成No,禁止匿名用户</span><br><span class="line">listen=YES # No改成Yes 开启监听</span><br><span class="line"><span class="meta">#</span><span class="bash"> listen_ipv6=YES  <span class="comment"># 此行需要注释掉</span></span></span><br><span class="line">tcp_wrappers=YES   # 默认应该就是YES</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 在/etc/vsftpd.chroot_list文件中列出的用户，可以切换到其他目录；</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 未在/etc/vsftpd/chroot_list文件中列出的用户，不能切换到其他目录。</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 需要创建/etc/vsftpd/chroot_list文件</span></span><br><span class="line">chroot_local_user=YES</span><br><span class="line">chroot_list_enable=YES  </span><br><span class="line"><span class="meta">#</span><span class="bash"> (default follows) </span></span><br><span class="line">chroot_list_file=/etc/vsftpd/chroot_list</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 防止500oops错误 </span></span><br><span class="line">allow_writeable_chroot=YES </span><br><span class="line"><span class="meta">#</span><span class="bash"> 被动模式端口号</span></span><br><span class="line">pasv_min_port=30000  </span><br><span class="line">pasv_max_port=31000</span><br></pre></td></tr></table></figure><p><strong>只允许指定ip登陆</strong> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> vi /etc/hosts.allow</span></span><br><span class="line">最后添加</span><br><span class="line">vsftpd:192.168.0.19:allow</span><br><span class="line">vsftpd:all:deny</span><br></pre></td></tr></table></figure></p><p>添加虚拟用户 <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> useradd -g ftp -d /var/ftp/ftpuser -s /sbin/nologin ftpuser </span></span><br><span class="line"><span class="meta">$</span><span class="bash"> passwd ftpuser</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> /etc/vsftpd/</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> touch chroot_list</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> vi chroot_list</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> ftpuser <span class="comment"># 将用户名称添加到chroot_list里</span></span></span><br></pre></td></tr></table></figure></p><h2 id="lamp服务">LAMP服务</h2><h3 id="apache">Apache</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ yum install httpd # 安装apache2</span><br><span class="line">$ systemctl enable httpd.service</span><br><span class="line">$ systemctl enable httpd.service</span><br></pre></td></tr></table></figure><h3 id="mysql5.6">Mysql5.6</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 安装rpm包</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> rpm -Uvh http://dev.mysql.com/get/mysql-community-release-el7-5.noarch.rpm</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看可以安装的资源</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> yum repolist enabled | grep <span class="string">"mysql.*-community.*"</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 安装</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> yum install mysql-community-server</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> systemctl start mysqld</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> systemctl <span class="built_in">enable</span> mysqld</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> mysql_secure_installation <span class="comment"># 设置密码等</span></span></span><br></pre></td></tr></table></figure><h3 id="php5.4">Php5.4</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> yum install php</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> yum install php-gd php-ldap php-odbc php-pear php-xml php-xmlrpc php-mbstring php-snmp php-soap curl curl-devel php-mysql php-devel</span></span><br></pre></td></tr></table></figure><h3 id="php5.6或者其他">Php5.6或者其他</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> yum -y install epel-release</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> wget https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> wget https://centos7.iuscommunity.org/ius-release.rpm</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> rpm -Uvh ius-release*.rpm</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> yum -y update</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> yum -y install php56u php56u-opcache php56u-xml php56u-mcrypt php56u-gd php56u-devel php56u-mysql php56u-intl php56u-mbstring php56u-bcmath</span></span><br></pre></td></tr></table></figure><h3 id="配置-1">配置</h3><p><strong>Apache允许php脚本</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> vi /etc/httpd/conf/httpd.conf</span></span><br><span class="line">AddType application/x-compress .Z</span><br><span class="line">AddType application/x-gzip .gz .tgz</span><br><span class="line">AddType application/x-httpd-php .php  # 新添加内容</span><br></pre></td></tr></table></figure><p><strong>Apache虚拟主机</strong> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> /etc/httpd/conf.d</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> vi vhost.conf    </span></span><br><span class="line"></span><br><span class="line">&lt;VirtualHost *:121&gt;</span><br><span class="line">ServerName phpmyadmin.com</span><br><span class="line">ServerAlias www.phpmyadmin.com</span><br><span class="line">DocumentRoot /var/www/html/phpMyAdmin/</span><br><span class="line">ErrorLog /var/www/web_log/phpMyAdmin.www_error.log # 开启日志需要创建web_log文件夹，否则会报错</span><br><span class="line">CustomLog /var/www/web_log/phpMyAdmin.www_access.log common</span><br><span class="line">&lt;/VirtualHost&gt;</span><br><span class="line">&lt;Directory "/var/www/html/phpMyAdmin/"&gt;</span><br><span class="line">    Options FollowSymLinks</span><br><span class="line">    AllowOverride All</span><br><span class="line">    Require all granted</span><br><span class="line">&lt;/Directory&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;VirtualHost *:108&gt;</span><br><span class="line">ServerName hkmain.com</span><br><span class="line">ServerAlias www.kmain.com</span><br><span class="line">DocumentRoot /var/www/html/NEW/</span><br><span class="line">ErrorLog /var/www/web_log/NEW.www_error.log</span><br><span class="line">CustomLog /var/www/web_log/NEW.www_access.log common</span><br><span class="line">&lt;/VirtualHost&gt;</span><br><span class="line">&lt;Directory "/var/www/html/NEW/"&gt;</span><br><span class="line">    Options FollowSymLinks</span><br><span class="line">    AllowOverride All</span><br><span class="line">    Require all granted</span><br><span class="line">&lt;/Directory&gt;</span><br></pre></td></tr></table></figure></p><p><strong>Apache加载的模块查看</strong> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> apachectl -M | sort</span></span><br></pre></td></tr></table></figure></p><p>网站目录权限配置 <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> chown -R apache:apache WEB_FOLD</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> chmod 750 WEB_FOLD</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> WEB_FOLD</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> find -<span class="built_in">type</span> d -<span class="built_in">exec</span> chmod 750 &#123;&#125; \;</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> find -not -<span class="built_in">type</span> d -<span class="built_in">exec</span> chmod 640 &#123;&#125; \;</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> find . -name <span class="string">"Runtime"</span> -<span class="built_in">type</span> d -<span class="built_in">exec</span> chmod -R 770 &#123;&#125; \;</span></span><br></pre></td></tr></table></figure></p><h2 id="lnmp服务">LNMP服务</h2><p><a href="https://www.digitalocean.com/community/tutorials/how-to-install-linux-nginx-mysql-php-lemp-stack-on-centos-7" target="_blank" rel="noopener">参考链接</a></p><h3 id="nginx安装">Nginx安装</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 安装pcre库，使nginx支持rewrite</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo yum install pcre pcre-devel -y</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo yum install nginx</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo systemctl start nginx.service</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 设置开机启动</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo systemctl <span class="built_in">enable</span> nginx.service</span></span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 配置</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo vi /etc/nginx/conf.d/default.conf</span></span><br><span class="line"></span><br><span class="line">server &#123; </span><br><span class="line">    listen 80; server\_name server\_domain\_name\_or_IP; # 注意位置，在括号外 root /usr/share/nginx/html; index index.php index.html index.htm;</span><br><span class="line"></span><br><span class="line">    location / &#123;</span><br><span class="line">        try_files $uri $uri/ =404;</span><br><span class="line">    &#125;</span><br><span class="line">    error_page 404 /404.html;</span><br><span class="line">    error_page 500 502 503 504 /50x.html;</span><br><span class="line">    location = /50x.html &#123;</span><br><span class="line">        root /usr/share/nginx/html;</span><br><span class="line">    &#125;</span><br><span class="line">        # 下面是配置fpm</span><br><span class="line">    location ~ \.php$ &#123;</span><br><span class="line">        try_files $uri =404;</span><br><span class="line">        fastcgi_pass unix:/var/run/php-fpm/php-fpm.sock; (这个值从php-fpm复制来)</span><br><span class="line">        fastcgi_index index.php;</span><br><span class="line">        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;</span><br><span class="line">        include fastcgi_params;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="源码安装nginx">源码安装Nginx</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 安装pcre库，使nginx支持rewrite</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> yum install pcre pcre-devel -y</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 安装openssl，https服务需要使用</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> yum install openssl openssl-devel -y</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 安装 gzip 类库</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> yum -y install zlib zlib-devel</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 安装编译程序</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> yum -y install make gcc gcc-c++ ncurses-devel</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 创建用户</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> useradd nginx -s /sbin/nologin -M</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 下载源码</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> wget -q https://nginx.org/download/nginx-1.12.1.tar.gz </span></span><br><span class="line"><span class="meta">$</span><span class="bash"> tar -zxvf nginx-1.12.1.tar.gz</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> nginx-1.12.1</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> ./configure --prefix=/etc/nginx --sbin-path=/usr/sbin/nginx --conf-path=/etc/nginx/nginx.conf --error-log-path=/var/<span class="built_in">log</span>/nginx/error.log --http-log-path=/var/<span class="built_in">log</span>/nginx/access.log --pid-path=/var/run/nginx.pid --lock-path=/var/run/nginx.lock --http-client-body-temp-path=/var/cache/nginx/client_temp --http-proxy-temp-path=/var/cache/nginx/proxy_temp --http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp --http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp --http-scgi-temp-path=/var/cache/nginx/scgi_temp --user=nginx --group=nginx --with-http_ssl_module --with-http_realip_module --with-http_gunzip_module --with-http_gzip_static_module --with-threads --with-file-aio --with-ipv6 --with-http_v2_module --with-cc-opt=<span class="string">'-O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fexceptions -fstack-protector --param=ssp-buffer-size=4 -m64 -mtune=native'</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> make</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> make install</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 创建链接</span></span><br><span class="line">sudo ln -s /usr/local/nginx/bin/nginx /usr/bin/nginx</span><br><span class="line"><span class="meta">#</span><span class="bash"> 启动nginx</span></span><br><span class="line">/usr/local/nginx/sbin/nginx</span><br><span class="line"><span class="meta">#</span><span class="bash"> 停止nginx</span></span><br><span class="line">/usr/local/nginx/sbin/nginx -s quit</span><br><span class="line"><span class="meta">#</span><span class="bash"> 重新加载配置文件</span></span><br><span class="line">/usr/local/nginx/sbin/nginx -s reload        </span><br><span class="line"><span class="meta">#</span><span class="bash"> 测试你的配置文件是否有误</span></span><br><span class="line">/usr/local/nginx/sbin/nginx -t       </span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看nginx对应的端口</span></span><br><span class="line"> lsof -i :80</span><br></pre></td></tr></table></figure><h3 id="mysql5.6-1">Mysql5.6</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 安装rpm包</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> rpm -Uvh http://dev.mysql.com/get/mysql-community-release-el7-5.noarch.rpm</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看可以安装的资源</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> yum repolist enabled | grep <span class="string">"mysql.*-community.*"</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 安装</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> yum install mysql-community-server</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> systemctl start mysqld</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> systemctl <span class="built_in">enable</span> mysqld</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> mysql_secure_installation <span class="comment"># 设置密码等</span></span></span><br></pre></td></tr></table></figure><h2 id="php">Php</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 安装</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> yum -y install epel-release</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo yum install php php-mysql php-fpm</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo yum install php-pecl-memcache</span></span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 配置</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> vim /etc/php.ini</span></span><br><span class="line"><span class="meta">#</span><span class="bash">cgi.fix_poathinfo=1改成</span></span><br><span class="line">cgi.fix_pathinfo=0</span><br><span class="line"></span><br><span class="line"><span class="meta">$</span><span class="bash"> vim /etc/php-php.d/www.conf</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 第一处修改</span></span><br><span class="line">listen = /var/run/php-fpm/php-fpm.sock</span><br><span class="line"><span class="meta">#</span><span class="bash"> 第二处修改</span></span><br><span class="line">listen.owner = nobody</span><br><span class="line">listen.group = nobody</span><br><span class="line"><span class="meta">#</span><span class="bash"> 第三处修改</span></span><br><span class="line">user = nginx</span><br><span class="line">group = nginx</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 重启</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo systemctl start php-fpm</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo systemctl <span class="built_in">enable</span> php-fpm</span></span><br></pre></td></tr></table></figure><h3 id="php7">Php7</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"> #</span><span class="bash"> 加源</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo yum install epel-release yum-utils</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo yum install http://rpms.remirepo.net/enterprise/remi-release-7.rpm</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 选择remi</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo yum-config-manager --<span class="built_in">enable</span> remi-php70</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo yum-config-manager --<span class="built_in">enable</span> remi-php71</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo yum-config-manager --<span class="built_in">enable</span> remi-php72</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 安装相关扩展</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo yum-config-manager --<span class="built_in">enable</span> remi-php70</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo yum install php php-common php-opcache php-mcrypt php-cli php-gd php-curl php-mysql</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 安装 PHP FPM </span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo yum install php-fpm</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo systemctl <span class="built_in">enable</span> php-fpm</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo systemctl start php-fpm</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 配置</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo vim /etc/php-fpm.d/www.conf</span></span><br><span class="line"></span><br><span class="line">user = nginx</span><br><span class="line">group = nginx</span><br><span class="line"><span class="meta">#</span><span class="bash"> 配置nginx虚拟server</span></span><br><span class="line">server &#123;</span><br><span class="line">    # . . . other code</span><br><span class="line">    location ~ \.php$ &#123;</span><br><span class="line">        try_files $uri =404;</span><br><span class="line">        # fastcgi_pass unix:/run/php-fpm/www.sock;</span><br><span class="line">                fastcgi_pass 127.0.0.1:9000;</span><br><span class="line">        fastcgi_index index.php;</span><br><span class="line">        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;</span><br><span class="line">        include fastcgi_params;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="xcache">Xcache</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 安装xcahe</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo yum -y install php-xcache xcache-admin</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 如果失败请用下面的方法</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> xcahe</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> wget https://kojipkgs.fedoraproject.org//packages/php-xcache/3.1.1/1.el7/x86_64/php-xcache-3.1.1-1.el7.x86_64.rpm</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 图形化管理</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> wget https://kojipkgs.fedoraproject.org//packages/php-xcache/3.1.1/1.el7/noarch/xcache-admin-3.1.1-1.el7.noarch.rpm</span></span><br></pre></td></tr></table></figure><h3 id="示例">示例</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 测试</span></span><br><span class="line">sudo vi /usr/share/nginx/html/info.php</span><br><span class="line">&lt;?php echo phpinfo();&gt;</span><br><span class="line">sudo systemctl restart php-fpm</span><br><span class="line">sudo systemctl restart nginx</span><br></pre></td></tr></table></figure><h2 id="imagemagick">ImageMagick</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">yum install php-pear gcc</span><br><span class="line">yum install ImageMagick ImageMagick-devel ImageMagick-perl</span><br><span class="line">pecl install imagick # 直接回车</span><br><span class="line">echo extension=imagick.so &gt;&gt; /etc/php.ini # 添加php扩展</span><br><span class="line">systemctl restart httpd</span><br></pre></td></tr></table></figure><h2 id="mysql主从复制">Mysql主从复制</h2><a href="/2016/11/09/Mysql主从复制/" title="Mysql主从复制">Mysql主从复制</a><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> vi /etc/my.cnf</span></span><br><span class="line">[mysqld] </span><br><span class="line">server-id=1     # 配一个唯一的ID编号，1至32  </span><br><span class="line">log-bin=mysql-bin  # 二进制文件存放路径  </span><br><span class="line">binlog-do-db=test1  # 需要同步的数据库名  </span><br><span class="line">binlog-ignore-db=test2  # 不需要同步的数据库名</span><br></pre></td></tr></table></figure><h2 id="rsycn数据同步">Rsycn数据同步</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> yum install rsync <span class="comment"># 安装，默认端口873  </span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> systemctl start rsyncd</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> systemctl <span class="built_in">enable</span> rsyncd</span></span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 日志文件位置，启动rsync后自动产生这个文件，无需提前创建</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> vim rsync.conf</span></span><br><span class="line"></span><br><span class="line">log file = /var/log/rsyncd.log</span><br><span class="line"><span class="meta">#</span><span class="bash"> pid文件的存放位置</span></span><br><span class="line">pidfile = /var/run/rsyncd.pid</span><br><span class="line"><span class="meta">#</span><span class="bash"> 支持max connections参数的锁文件</span></span><br><span class="line">lock file = /var/run/rsync.lock</span><br><span class="line"><span class="meta">#</span><span class="bash"> 用户认证配置文件，里面保存用户名称和密码，后面会创建这个文件</span></span><br><span class="line">secrets file = /etc/rsync.pass</span><br><span class="line"><span class="meta">#</span><span class="bash"> rsync启动时欢迎信息页面文件位置（文件内容自定义</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> motd file = /etc/rsyncd.Motd</span></span><br><span class="line"><span class="meta">#</span><span class="bash"></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 设置rsync运行权限为root</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> uid = root</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 设置rsync运行权限为root</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> gid = root</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 匿名用户</span></span><br><span class="line">uid = 0</span><br><span class="line">gid = 0</span><br><span class="line"><span class="meta">#</span><span class="bash"> 默认端口</span></span><br><span class="line">port = 873</span><br><span class="line"><span class="meta">#</span><span class="bash"> 默认为<span class="literal">true</span>，修改为no，增加对目录文件软连接的备份</span></span><br><span class="line">use chroot = no</span><br><span class="line"><span class="meta">#</span><span class="bash"> 设置rsync服务端文件为读写权限</span></span><br><span class="line">read only = yes</span><br><span class="line"><span class="meta">#</span><span class="bash"> 不显示rsync服务端资源列表</span></span><br><span class="line">list = no</span><br><span class="line"><span class="meta">#</span><span class="bash"> 最大连接数</span></span><br><span class="line">max connections = 200</span><br><span class="line"><span class="meta">#</span><span class="bash"> 设置超时时间</span></span><br><span class="line">timeout = 600</span><br><span class="line"><span class="meta">#</span><span class="bash"> 不验证用户密码</span></span><br><span class="line">strict modes = false</span><br><span class="line"><span class="meta">#</span><span class="bash"> 执行数据同步的用户名，可以设置多个，用英文状态下逗号隔开</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> auth users = <span class="built_in">test</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 允许进行数据同步的客户端IP地址，可以设置多个，用英文状态下逗号隔开</span></span><br><span class="line">hosts allow = 192.168.0.206, 192.168.0.118</span><br><span class="line"><span class="meta">#</span><span class="bash"> 禁止数据同步的客户端IP地址，可以设置多个，用英文状态下逗号隔开</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> hosts deny = 192.168.21.254</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 自定义名称</span></span><br><span class="line">[web]</span><br><span class="line"><span class="meta">#</span><span class="bash"> rsync服务端数据目录路径</span></span><br><span class="line">path = /var/www/html/HKMAIN_NEW/Upload/product/manual/cn/</span><br><span class="line"><span class="meta">#</span><span class="bash"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 模块名称与自定义名称相同</span></span><br><span class="line">comment = web</span><br><span class="line"></span><br><span class="line">[webe]</span><br><span class="line">path = /var/www/html/HKMAIN_NEW/Upload/product/manual/en/</span><br><span class="line">comment = webe</span><br></pre></td></tr></table></figure><h2 id="nfs">Nfs</h2><h3 id="服务器端">服务器端</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 服务器端安装及配置</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 安装命令</span></span><br><span class="line">sudo yum install nfs-utils rpcbind</span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看是否安装成功</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> rpm -aq nfs-utils rpcbind</span></span><br><span class="line">rpcbind-0.2.0-38.el7.x86_64</span><br><span class="line">nfs-utils-1.3.0-0.33.el7_3.x86_64</span><br><span class="line"><span class="meta">#</span><span class="bash"> 启动rpcbind</span></span><br><span class="line">sudo systemctl restart rpcbind</span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看状态</span></span><br><span class="line">systemctl status rpcbind</span><br><span class="line"><span class="meta">#</span><span class="bash"> 开机启动</span></span><br><span class="line">sudo systemctl enable rpcbind</span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看是否开机启动</span></span><br><span class="line">systemctl is-enabled rpcbind # enable表示开机启动，disable表示不开机启动</span><br><span class="line"><span class="meta">#</span><span class="bash"> 启动及开机启动nfs服务</span></span><br><span class="line">sudo systemctl restart nfs</span><br><span class="line">sudo systemctl enable nfs</span><br><span class="line"><span class="meta">#</span><span class="bash">配置nfs服务</span></span><br><span class="line">vim /etc/exports</span><br><span class="line">/readonly 192.168.0.160(insecure,ro,no_root_squash) # 指定ip地址，只读</span><br><span class="line">/rwsync 192.168.0.0/24(insecure,rw,sync,no_root_squash) # 指定ip地址段，读写</span><br><span class="line"><span class="meta">#</span><span class="bash"> 加载配置文件</span></span><br><span class="line">sudo exportfs -rv</span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看nfs服务器本地挂载情况</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> showmount -e localhost</span></span><br><span class="line">Export list for localhost:</span><br><span class="line">/rwsync   192.168.0.0/24</span><br><span class="line">/readonly 192.168.0.160</span><br><span class="line"><span class="meta">#</span><span class="bash"> 重启服务</span></span><br><span class="line">sudo systemctl restart nfs</span><br></pre></td></tr></table></figure><h3 id="客户端">客户端</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 客户端安装配置</span></span><br><span class="line">sudo yum install nfs-utils rpcbind</span><br><span class="line"><span class="meta">#</span><span class="bash"> 只需启动rpc服务</span></span><br><span class="line">sudo systemctl restart rpcbind</span><br><span class="line">sudo systemctl enable rpcbind</span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看可以挂载服务器端的目录</span></span><br><span class="line">showmount -e 192.168.0.206</span><br><span class="line">Export list for 192.168.0.206:</span><br><span class="line">/rwsync   192.168.0.0/24</span><br><span class="line">/readonly 192.168.0.160</span><br><span class="line"><span class="meta">#</span><span class="bash"> 挂载</span></span><br><span class="line">sudo mount -t nfs 192.168.0.206:/readonly /mnt/readonly</span><br><span class="line">sudo mount -t nfs 192.168.0.206:/rwsync /mnt/rwsync</span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看挂载结果</span></span><br><span class="line">df -h</span><br></pre></td></tr></table></figure><h2 id="python3.5">python3.5</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 安装编译环境</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> yum install openssl-devel bzip2-devel expat-devel gdbm-devel readline-devel sqlite-devel</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 下载文件</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> wget https://www.python.org/ftp/python/3.6.6/Python-3.6.6.tgz</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 解压</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> tar -zxvf Python-3.6.6.tgz</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 编译安装</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> Python-3.5.1</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> ./configure --prefix=/usr/<span class="built_in">local</span>/python3</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> make &amp;&amp; make install</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 创建软连接</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo ln -s /usr/<span class="built_in">local</span>/python3/bin/python3 /usr/bin/python3</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> python3 --version</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo ln -s /usr/<span class="built_in">local</span>/python3/bin/pip3 /usr/bin/pip3 </span></span><br><span class="line"><span class="meta">$</span><span class="bash"> pip3 --version</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 添加pip源</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> vim ~/.pip/pip.conf</span></span><br><span class="line"></span><br><span class="line">[global]</span><br><span class="line">trusted-host =  mirrors.aliyun.com</span><br><span class="line">index-url = https://mirrors.aliyun.com/pypi/simple</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">## 安装虚拟环境</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo pip3 uninstall virtualenv</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo ln -s /usr/<span class="built_in">local</span>/python3/bin/virtualenv /usr/bin/virtualenv </span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">## 创建虚拟环境</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> virtualenv --no-site-packages -p python3 .env</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">source</span> ./.env/bin/activate</span></span><br></pre></td></tr></table></figure><h2 id="node8">Node8</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 参考文件 https://nodejs.org/en/download/package-manager/</span></span><br><span class="line">On RHEL, CentOS or Fedora, for Node.js v8 LTS:</span><br><span class="line"></span><br><span class="line">curl --silent --location https://rpm.nodesource.com/setup_8.x | sudo bash -</span><br><span class="line">Alternatively for Node.js 10:</span><br><span class="line"></span><br><span class="line">curl --silent --location https://rpm.nodesource.com/setup_10.x | sudo bash -</span><br><span class="line">Then install:</span><br><span class="line">sudo yum -y install nodejs</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 安装cnpm</span></span><br><span class="line">npm install -g cnpm --registry=https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure><h2 id="redis">Redis</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo yum install redis</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo systemctl <span class="built_in">enable</span> redis</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo systemctl start redis</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看版本号</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> redis-server --version</span></span><br></pre></td></tr></table></figure><h2 id="docker">Docker</h2><a href="/2019/09/27/Docker入门基础/" title="Docker入门基础">Docker入门基础</a><h2 id="sentry">Sentry</h2><a href="/2018/09/08/Sentry入门基础/" title="Sentry入门基础">Sentry入门基础</a><h2 id="rabbitmq">RabbitMQ</h2><a href="/2018/09/08/RabbitMq入门基础/" title="RabbitMq入门基础">RabbitMq入门基础</a><h2 id="postgressql">PostgresSql</h2><a href="/2018/08/07/PostgresSql入门基础/" title="PostgresSql入门基础">PostgresSql入门基础</a><h2 id="supervisor">Supervisor</h2><h3 id="安装-1">安装</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo yum install -y supervisor</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> systemctl <span class="built_in">enable</span> supervisord <span class="comment"># 开机自启动</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> systemctl start supervisord <span class="comment"># 启动supervisord服务</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> systemctl status supervisord <span class="comment"># 查看supervisord服务状态</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> ps -ef|grep supervisord <span class="comment"># 查看是否存在supervisord进程</span></span></span><br></pre></td></tr></table></figure><h3 id="配置-2">配置</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 设置web访问</span></span><br><span class="line">[inet_http_server]</span><br><span class="line">port=*:9001                                                  </span><br><span class="line">username=username</span><br><span class="line">password=password </span><br><span class="line">[include]                                                                                   │(.env-api) ➜  supervisord.d sudo vim doneself-api.ini                 </span><br><span class="line">files = supervisord.d/*.ini   # 配置文件地址</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> vim xxx.ini</span></span><br><span class="line">[program:doneself-api-uwsgi]</span><br><span class="line">command = /home/doneself/code/web/.env-api/bin/uwsgi --ini /home/doneself/code/web/api/uwsgi.ini</span><br><span class="line">autostart = true</span><br><span class="line">autorestart = true</span><br><span class="line">stopsignal= QUIT</span><br><span class="line">user= doneself</span><br><span class="line">redirect_stderr=false</span><br><span class="line">stdout_logfile = /home/doneself/code/web/api/log/uwsgi_stdout.log</span><br><span class="line">stderr_logfile = /home/doneself/code/web/api/log/uwsgi_stderr.log</span><br></pre></td></tr></table></figure><p><a href="http://supervisord.org/" target="_blank" rel="noopener">其他信息</a></p>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> CentOs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Javascript入门基础</title>
      <link href="/2016/11/10/Javascript%E5%85%A5%E9%97%A8%E5%9F%BA%E7%A1%80/"/>
      <url>/2016/11/10/Javascript%E5%85%A5%E9%97%A8%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<h2 id="数据类型">数据类型</h2><h3 id="类型">类型</h3><ul><li>object(包含Function，Array，Date等)<br></li><li>number<br></li><li>string<br></li><li>boolean<br></li><li>null<br></li><li>undefined</li></ul><h3 id="检测">检测</h3><p>typeof 基本类型，function， null可以用===判断 <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="keyword">typeof</span> <span class="number">100</span>) &#123;&#125;              <span class="comment">// "number"   </span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">typeof</span> <span class="literal">true</span>) &#123;&#125;             <span class="comment">// "boolean"    </span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">typeof</span> <span class="built_in">Function</span>()) &#123;&#125;       <span class="comment">// "function"    </span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">typeof</span> <span class="literal">undefined</span>) &#123;&#125;        <span class="comment">// "undefined"  </span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">typeof</span> <span class="built_in">Object</span>()) &#123;&#125;         <span class="comment">// "object"  </span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">typeof</span> [<span class="number">1</span>, <span class="number">2</span>])              <span class="comment">// "object"  </span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">typeof</span> <span class="literal">NaN</span>) &#123;&#125;              <span class="comment">// "number"  </span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">typeof</span> <span class="literal">null</span>) &#123;&#125;             <span class="comment">// "object"</span></span><br></pre></td></tr></table></figure></p><p>instanceof <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// instanceof  左边是对象（如果不是，直接返回false），右边是构造器（如果不是，直接报错），判断构造器的prototype属性是否在对象的原型链上</span></span><br><span class="line"><span class="built_in">console</span>.log([<span class="number">1</span>, <span class="number">2</span>] <span class="keyword">instanceof</span> <span class="built_in">Array</span>);  <span class="comment">// true</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="number">1</span> <span class="keyword">instanceof</span> <span class="built_in">Array</span>);  <span class="comment">// false</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Array</span>.prototype);  <span class="comment">// []</span></span><br><span class="line"><span class="built_in">console</span>.log(&#123;&#125; <span class="keyword">instanceof</span> <span class="built_in">Array</span>);  <span class="comment">//false</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Object</span>.prototype);  <span class="comment">// &#123;&#125;</span></span><br><span class="line"><span class="built_in">console</span>.log(&#123;&#125; <span class="keyword">instanceof</span> <span class="built_in">Object</span>);  <span class="comment">// true</span></span><br><span class="line"><span class="built_in">console</span>.log([] <span class="keyword">instanceof</span> <span class="built_in">Object</span>);  <span class="comment">// true</span></span><br></pre></td></tr></table></figure></p><p>Object.prototype.toString</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="built_in">Object</span>.prototype.toString.apply([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]) === <span class="string">"[object Array]"</span>)  </span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">Object</span>.prototype.toString.apply(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;&#125;) === <span class="string">"[object Function]"</span>)  </span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">Object</span>.prototype.toString.apply(<span class="literal">null</span>) === <span class="string">"[object Null]"</span>)  <span class="comment">// ie678返回[object Object]  </span></span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">Object</span>.prototype.toString.apply(<span class="literal">undefined</span>) === <span class="string">"[object Undefined]"</span>)  </span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">Object</span>.prototype.toString.apply(<span class="number">12313</span>) === <span class="string">"[object Number]"</span>)  </span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">Object</span>.prototype.toString.apply(<span class="string">'12313'</span>) === <span class="string">"[object String]"</span>)</span><br></pre></td></tr></table></figure><h2 id="表达式">表达式</h2><p>表达式是一种js短语，可使js解释器用来产生一个值 <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 原始表达式</span></span><br><span class="line"><span class="comment">// 常量</span></span><br><span class="line">x = <span class="number">3.14</span>;</span><br><span class="line"><span class="comment">// 直接量</span></span><br><span class="line">y = <span class="string">"test"</span>; </span><br><span class="line"><span class="comment">// 关键字 </span></span><br><span class="line">x = <span class="literal">null</span>, y = <span class="keyword">this</span>,  z = <span class="literal">true</span>;</span><br><span class="line"><span class="comment">// x,y,z 为变量</span></span><br><span class="line"><span class="comment">// 复合表达式 原始表达式+运算符+原始表达式</span></span><br><span class="line">x = <span class="number">10</span> * <span class="number">20</span>;</span><br><span class="line"><span class="comment">// 初始化表达式</span></span><br><span class="line">x = [<span class="number">1</span>, <span class="number">2</span>];</span><br><span class="line">y = &#123;<span class="attr">x</span>: <span class="number">1</span>, <span class="attr">y</span>: <span class="number">2</span>&#125;;</span><br><span class="line">    </span><br><span class="line"><span class="comment">// 函数表达式</span></span><br><span class="line"><span class="keyword">let</span> f1 = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;&#125;;</span><br><span class="line"><span class="comment">// let f2 = (function()&#123;console.log('1111');&#125;)&#123;&#125;;</span></span><br><span class="line">    </span><br><span class="line"><span class="comment">// 属性访问表达式</span></span><br><span class="line">o = &#123;<span class="attr">x</span>:<span class="number">1</span>&#125;;</span><br><span class="line">p = o.x;</span><br><span class="line">q = o[<span class="string">'x'</span>];</span><br><span class="line">    </span><br><span class="line"><span class="comment">// 调用表达式</span></span><br><span class="line">f1();</span><br><span class="line">    </span><br><span class="line"><span class="comment">// 对象创建表达式</span></span><br><span class="line">f3 = <span class="keyword">new</span> Func(<span class="number">1</span>, <span class="number">2</span>);</span><br><span class="line">f4 = <span class="keyword">new</span> <span class="built_in">Object</span>();</span><br></pre></td></tr></table></figure></p><h2 id="运算符">运算符</h2><ul><li>一元（+num）<br></li><li>二元（a + b）<br></li><li>三元（c：a：b） 赋值(x += 1)<br></li><li>比较(a == b)<br></li><li>算术（a - b）<br></li><li>位 （a | b）<br></li><li>逻辑 (exp1 &amp;&amp; exp2)<br></li><li>字符串("a" + "b")<br></li><li>特殊</li></ul><h3 id="特殊运算符">特殊运算符</h3><ul><li>c? a:b<br></li><li>var val = (1, 2, 3) // 逗号运算符<br></li><li>delete obj.x // 删除对象属性<br></li><li>'x' in window; // in 运算符<br></li><li>instanceof, typeof // 判断类型<br></li><li>new Foo(); // new 运算符<br></li><li>this // this运算符<br></li><li>void 0 // undefined</li></ul><h2 id="语句">语句</h2><p>块语句block<br>块语句是没有作用域的 <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;  </span><br><span class="line">  <span class="keyword">let</span> str = <span class="string">'hi'</span>;  </span><br><span class="line">  <span class="built_in">console</span>.log(str);  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>声明语句 var<br>var a=1, b=1; 函数语句function <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 函数声明语句  </span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fd</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="literal">true</span>;  </span><br><span class="line">&#125;    </span><br><span class="line"><span class="comment">// 函数表达式  </span></span><br><span class="line"><span class="keyword">let</span> fe = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">//do sth</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p><p>for in 语句 <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> p;  </span><br><span class="line"><span class="keyword">let</span> obj = &#123;<span class="attr">x</span>:<span class="number">1</span>, <span class="attr">y</span>:<span class="number">2</span>&#125;;  </span><br><span class="line"><span class="keyword">for</span>(p <span class="keyword">in</span> obj) &#123;</span><br><span class="line"><span class="comment">// 顺序不确定  </span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>swith语句 <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> val = <span class="number">2</span>;</span><br><span class="line"><span class="keyword">switch</span> (val) &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="number">2</span>);</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="number">3</span>);</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>循环语句 <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> (isTrue) &#123;</span><br><span class="line">    <span class="comment">// do sth</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">do</span> &#123;</span><br><span class="line">    <span class="comment">// do sth</span></span><br><span class="line">&#125; <span class="keyword">while</span> (isTrue);</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> i;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">    <span class="comment">// do sth</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>with语句 // 不使用 try catch语句 <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">'oops'</span>);</span><br><span class="line">    &#125; <span class="keyword">catch</span>(ex) &#123;</span><br><span class="line">        <span class="built_in">console</span>.error(<span class="string">'inner catch'</span>, ex.message);</span><br><span class="line">        <span class="keyword">throw</span> ex;</span><br><span class="line">    &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'inner  finally'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125; <span class="keyword">catch</span>(ex) &#123;</span><br><span class="line">    <span class="built_in">console</span>.error(<span class="string">'outer catch'</span>, ex.message);</span><br><span class="line">&#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'outer finally'</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="string">``</span><span class="string">`  </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">### 严格模式(待补充）</span></span><br><span class="line"><span class="string">`</span><span class="string">``</span>javascript</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">func</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="meta">    'use strict'</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="对象">对象</h2><p>对象创建<br>字面量创建 <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> obj = &#123;<span class="attr">x</span>: <span class="number">1</span>&#125;;</span><br><span class="line"><span class="built_in">console</span>.log(obj);</span><br><span class="line"><span class="built_in">console</span>.log(obj.y);</span><br><span class="line"><span class="built_in">Object</span>.prototype.y = <span class="number">2</span>;</span><br><span class="line"><span class="built_in">console</span>.log(obj);</span><br><span class="line"><span class="built_in">console</span>.log(obj.y);</span><br><span class="line">obj.y = <span class="literal">undefined</span>;</span><br><span class="line"><span class="built_in">console</span>.log(obj);</span><br><span class="line"><span class="built_in">console</span>.log(obj.y);</span><br></pre></td></tr></table></figure></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123; x: 1 &#125;</span><br><span class="line">undefined</span><br><span class="line">&#123; x: 1 &#125;</span><br><span class="line">2</span><br><span class="line">&#123; x: 1, y: undefined &#125;</span><br><span class="line">undefined</span><br></pre></td></tr></table></figure><p>new构造器创建 <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Foo</span>(<span class="params"></span>) </span>&#123; <span class="keyword">this</span>.color = <span class="string">'red'</span>;&#125;</span><br><span class="line">Foo.prototype.background = <span class="string">'#000'</span>;</span><br><span class="line"><span class="keyword">var</span> redColor = <span class="keyword">new</span> Foo();</span><br><span class="line"><span class="built_in">console</span>.log(redColor);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="keyword">typeof</span> redColor.toString);</span><br><span class="line"><span class="built_in">console</span>.log(redColor.color);</span><br><span class="line"><span class="built_in">console</span>.log(redColor.background);</span><br><span class="line"><span class="built_in">console</span>.log(foo);</span><br><span class="line"><span class="built_in">console</span>.log(Foo.prototype);</span><br><span class="line"><span class="built_in">console</span>.log(Foo.prototype.prototype);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'background'</span> <span class="keyword">in</span> redColor);</span><br><span class="line">redColor.background = <span class="string">'#FFF'</span>;</span><br><span class="line"><span class="built_in">console</span>.log(redColor.background);</span><br><span class="line"><span class="built_in">console</span>.log(Foo.prototype.background);</span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Foo &#123; color: &apos;red&apos; &#125;</span><br><span class="line">function</span><br><span class="line">red</span><br><span class="line">#000</span><br><span class="line">[Function: Foo]</span><br><span class="line">Foo &#123; background: &apos;#000&apos; &#125;</span><br><span class="line">undefined</span><br><span class="line">true</span><br><span class="line">#FFF</span><br><span class="line">#000</span><br></pre></td></tr></table></figure><p>Object.create()创建 <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Obj</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.x = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(Obj);</span><br><span class="line"><span class="keyword">let</span> obj1 = <span class="keyword">new</span> Obj();</span><br><span class="line"><span class="built_in">console</span>.log(obj1);</span><br><span class="line"><span class="keyword">let</span> obj2 = <span class="built_in">Object</span>.create(Obj);</span><br><span class="line"><span class="built_in">console</span>.log(obj2);</span><br><span class="line"><span class="built_in">console</span>.log(obj2.x);</span><br><span class="line"><span class="keyword">let</span> obj3 = <span class="built_in">Object</span>.create(obj1);</span><br><span class="line"><span class="built_in">console</span>.log(obj3);</span><br><span class="line"><span class="built_in">console</span>.log(obj3.x);</span><br></pre></td></tr></table></figure></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[Function: Obj]</span><br><span class="line">Obj &#123; x: 1 &#125;</span><br><span class="line">Function &#123;&#125;</span><br><span class="line">undefined</span><br><span class="line">Obj &#123;&#125;</span><br><span class="line">1</span><br></pre></td></tr></table></figure><h3 id="对象原型链">对象原型链</h3><p>prototype是函数对象上的预设的对象属性， 原型是对象上的原型，通常都是构造器的prototype属性<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Abc</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">     <span class="keyword">this</span>.y = <span class="number">2</span>;</span><br><span class="line">     <span class="keyword">var</span> z = <span class="number">3</span>;</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="built_in">console</span>.log(Abc);  <span class="comment">// [Function: Abc]</span></span><br><span class="line"> <span class="built_in">console</span>.log(Abc.prototype);  <span class="comment">// Abc &#123;&#125;</span></span><br><span class="line"> <span class="built_in">console</span>.log(<span class="keyword">typeof</span> Abc.prototype);  <span class="comment">// object</span></span><br><span class="line"> </span><br><span class="line"> Abc.prototype.x = <span class="number">1</span>;</span><br><span class="line"> <span class="built_in">console</span>.log(Abc.prototype);  <span class="comment">// Abc &#123; x: 1 &#125;</span></span><br><span class="line"> </span><br><span class="line"> <span class="keyword">var</span> obj1 = <span class="keyword">new</span> Abc();</span><br><span class="line"> <span class="built_in">console</span>.log(obj1.__proto__);  <span class="comment">// Abc &#123; x: 1 &#125;</span></span><br><span class="line"> <span class="built_in">console</span>.log(obj1.__proto__ === Abc.prototype);  <span class="comment">// true  new构造器创建的对象的原型是构造器的prototype属性</span></span><br><span class="line"> <span class="built_in">console</span>.log(obj1);  <span class="comment">// Abc &#123; y: 2 &#125;</span></span><br><span class="line"> <span class="built_in">console</span>.log(obj1.y);  <span class="comment">// 2</span></span><br><span class="line"> <span class="built_in">console</span>.log(obj1.x);  <span class="comment">// 1</span></span><br><span class="line"><span class="string">``</span><span class="string">` </span></span><br><span class="line"><span class="string">     </span></span><br><span class="line"><span class="string">&gt; 所有构造器/函数的__proto__都指向Function.prototype，它是一个空函数（Empty function）</span></span><br><span class="line"><span class="string">`</span><span class="string">``</span>javascript</span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Number</span>.__proto__ === <span class="built_in">Function</span>.prototype);  <span class="comment">// true  </span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Boolean</span>.__proto__ === <span class="built_in">Function</span>.prototype); <span class="comment">// true  </span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">String</span>.__proto__ === <span class="built_in">Function</span>.prototype);  <span class="comment">// true  </span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Object</span>.__proto__ === <span class="built_in">Function</span>.prototype);  <span class="comment">// true  </span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Function</span>.__proto__ === <span class="built_in">Function</span>.prototype); <span class="comment">// true  </span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Array</span>.__proto__ === <span class="built_in">Function</span>.prototype);   <span class="comment">// true  </span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">RegExp</span>.__proto__ === <span class="built_in">Function</span>.prototype);  <span class="comment">// true  </span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Error</span>.__proto__ === <span class="built_in">Function</span>.prototype);   <span class="comment">// true  </span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Date</span>.__proto__ === <span class="built_in">Function</span>.prototype);    <span class="comment">// true  </span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Math</span>.__proto__ === <span class="built_in">Object</span>.prototype);  <span class="comment">// true  </span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">JSON</span>.__proto__ === <span class="built_in">Object</span>.prototype);  <span class="comment">// true </span></span><br><span class="line"><span class="comment">// 函数声明</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Person</span>(<span class="params"></span>) </span>&#123;&#125;</span><br><span class="line"><span class="comment">// 函数表达式</span></span><br><span class="line"><span class="keyword">let</span> Man = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;&#125;;</span><br><span class="line"><span class="built_in">console</span>.log(Person.__proto__ === <span class="built_in">Function</span>.prototype); <span class="comment">// true  </span></span><br><span class="line"><span class="built_in">console</span>.log(Man.__proto__ === <span class="built_in">Function</span>.prototype)    <span class="comment">// true</span></span><br></pre></td></tr></table></figure></p><blockquote><p>所有的构造器都来自于Function.prototype，甚至包括根构造器Object及Function自身。所有构造器都继承了Function.prototype的属性及方法。如length、call、apply、bind（ES5） <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="keyword">typeof</span> <span class="built_in">Function</span>.prototype); <span class="comment">// function</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="keyword">typeof</span> <span class="built_in">Object</span>.prototype);   <span class="comment">// object</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="keyword">typeof</span> <span class="built_in">Number</span>.prototype);   <span class="comment">// object</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="keyword">typeof</span> <span class="built_in">Boolean</span>.prototype);  <span class="comment">// object</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="keyword">typeof</span> <span class="built_in">String</span>.prototype);   <span class="comment">// object</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="keyword">typeof</span> <span class="built_in">Array</span>.prototype);    <span class="comment">// object</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="keyword">typeof</span> <span class="built_in">RegExp</span>.prototype);   <span class="comment">// object</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="keyword">typeof</span> <span class="built_in">Error</span>.prototype);    <span class="comment">// object</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="keyword">typeof</span> <span class="built_in">Date</span>.prototype);     <span class="comment">// object</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="keyword">typeof</span> <span class="built_in">Object</span>.prototype);   <span class="comment">// object  </span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Function</span>.prototype.__proto__ === <span class="built_in">Object</span>.prototype); <span class="comment">// true    </span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Object</span>.prototype.__proto__ === <span class="literal">null</span>)  <span class="comment">// true</span></span><br></pre></td></tr></table></figure></p></blockquote><blockquote><p>所有对象的__proto__都指向其构造器的prototype</p></blockquote><p>JavaScript引擎内置构造器 <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> obj = &#123;<span class="attr">name</span>: <span class="string">'jack'</span>&#125;;</span><br><span class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>];</span><br><span class="line"><span class="keyword">var</span> reg = <span class="regexp">/hello/g</span>;</span><br><span class="line"><span class="keyword">var</span> date = <span class="keyword">new</span> <span class="built_in">Date</span>;</span><br><span class="line"><span class="keyword">var</span> err = <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">'exception'</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(obj.__proto__ === <span class="built_in">Object</span>.prototype); <span class="comment">// true</span></span><br><span class="line"><span class="built_in">console</span>.log(arr.__proto__ === <span class="built_in">Array</span>.prototype);  <span class="comment">// true</span></span><br><span class="line"><span class="built_in">console</span>.log(reg.__proto__ === <span class="built_in">RegExp</span>.prototype); <span class="comment">// true</span></span><br><span class="line"><span class="built_in">console</span>.log(date.__proto__ === <span class="built_in">Date</span>.prototype);  <span class="comment">// true</span></span><br><span class="line"><span class="built_in">console</span>.log(err.__proto__ === <span class="built_in">Error</span>.prototype);  <span class="comment">// true</span></span><br></pre></td></tr></table></figure></p><p>自定义的构造器 <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Person</span>(<span class="params">name</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.name = name</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> p = <span class="keyword">new</span> Person(<span class="string">'jack'</span>);</span><br><span class="line"><span class="built_in">console</span>.log(p.__proto__ === Person.prototype); <span class="comment">// true</span></span><br></pre></td></tr></table></figure></p><p>每个对象都有一个constructor属性，可以获取它的构造器 <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Person</span>(<span class="params">name</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.name = name</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> p = <span class="keyword">new</span> Person(<span class="string">'jack'</span>);</span><br><span class="line"><span class="built_in">console</span>.log(p.__proto__ === p.constructor.prototype) <span class="comment">// true</span></span><br></pre></td></tr></table></figure></p><h3 id="对象属性操作">对象属性操作</h3><p>属性读写 <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 属性读写</span></span><br><span class="line"><span class="keyword">let</span> obj1 = &#123;<span class="attr">x1</span>: <span class="number">1</span>, <span class="attr">x2</span>: <span class="number">2</span>&#125;;</span><br><span class="line"><span class="keyword">let</span> i = <span class="number">1</span>, n = <span class="number">2</span>;</span><br><span class="line"><span class="keyword">for</span>(; i&lt;= n; i++) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(obj1[<span class="string">'x'</span> + i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 输出1，2</span></span><br><span class="line"><span class="keyword">let</span> p;</span><br><span class="line"><span class="keyword">for</span>(p <span class="keyword">in</span> obj1) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(obj1[p]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 输出1，2</span></span><br><span class="line"><span class="keyword">let</span> obj2 = &#123;<span class="attr">x</span>: <span class="number">1</span>&#125;;</span><br><span class="line"><span class="comment">// 读写异常</span></span><br><span class="line"><span class="built_in">console</span>.log(obj2.y); <span class="comment">// undefined</span></span><br><span class="line"><span class="keyword">let</span> yz = obj2.y.z;  <span class="comment">// TypeError: Cannot read property 'z' of undefined</span></span><br><span class="line">obj2.y.z = <span class="number">2</span>;      <span class="comment">//TypeError: Cannot set property 'z' of undefined</span></span><br><span class="line"><span class="comment">// 正确方式</span></span><br><span class="line"><span class="keyword">let</span> yz;</span><br><span class="line"><span class="keyword">if</span>(obj2.y) &#123;</span><br><span class="line">    yz = obj2.y.z;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 或者</span></span><br><span class="line"><span class="keyword">let</span> yz = obj2 &amp;&amp; obj2.y &amp;&amp; obj2.y.z  <span class="comment">// 这个会返回undefined</span></span><br></pre></td></tr></table></figure></p><p>属性删除 <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> person = &#123;<span class="attr">age</span>: <span class="number">28</span>, <span class="attr">title</span>: <span class="string">'fe'</span>&#125;;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="keyword">delete</span> person.age);  <span class="comment">// true</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="keyword">delete</span> person[<span class="string">'age'</span>]);  <span class="comment">// true</span></span><br><span class="line"><span class="built_in">console</span>.log(person.age);  <span class="comment">// undefined</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="keyword">delete</span> person.age);   <span class="comment">// 注意这个也返回true 判断操作结束后该属性是否存在</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 有些属性是不能删除的</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="keyword">delete</span> <span class="built_in">Object</span>.prototype);  <span class="comment">// false</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 原因</span></span><br><span class="line"><span class="keyword">var</span> descriptor = <span class="built_in">Object</span>.getOwnPropertyDescriptor(<span class="built_in">Object</span>, <span class="string">'prototype'</span>);</span><br><span class="line"><span class="built_in">console</span>.log(descriptor.configurable);  <span class="comment">// false</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 变量及函数不可删除</span></span><br><span class="line"><span class="keyword">let</span> globalVal = <span class="number">1</span>;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="keyword">delete</span> globalVal);  <span class="comment">// false</span></span><br><span class="line"></span><br><span class="line">(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> localVal = <span class="number">1</span>;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">delete</span> localVal);</span><br><span class="line">&#125;());  <span class="comment">// false</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fd</span>(<span class="params"></span>) </span>&#123;&#125;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="keyword">delete</span> fd);  <span class="comment">// false</span></span><br><span class="line"></span><br><span class="line">(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">fd</span>(<span class="params"></span>) </span>&#123;&#125;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">delete</span> fd)</span><br><span class="line">&#125;());  <span class="comment">// false</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 隐示定义的变量可以</span></span><br><span class="line">ohNo = <span class="number">1</span>;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="keyword">delete</span> ohNo);  <span class="comment">// true</span></span><br></pre></td></tr></table></figure></p><p>对象属性检测 <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> cat = <span class="keyword">new</span> <span class="built_in">Object</span>();</span><br><span class="line">cat.legs = <span class="number">4</span>;</span><br><span class="line">cat.name = <span class="string">'Kitty'</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'legs'</span> <span class="keyword">in</span> cat);  <span class="comment">// true</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'abc'</span> <span class="keyword">in</span> cat);  <span class="comment">// false</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'toString'</span> <span class="keyword">in</span> cat);  <span class="comment">// true 继承属性</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(cat.hasOwnProperty(<span class="string">'legs'</span>));  <span class="comment">// true</span></span><br><span class="line"><span class="built_in">console</span>.log(cat.hasOwnProperty(<span class="string">'toString'</span>));  <span class="comment">// false</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(cat.propertyIsEnumerable(<span class="string">'legs'</span>));  <span class="comment">// true</span></span><br><span class="line"><span class="built_in">console</span>.log(cat.propertyIsEnumerable(<span class="string">'toString'</span>));  <span class="comment">// false</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">Object</span>.defineProperty(cat, <span class="string">'price'</span>, &#123;<span class="attr">enumerable</span>: <span class="literal">false</span>, <span class="attr">value</span>: <span class="number">1000</span>&#125;);</span><br><span class="line"><span class="comment">// defineProperty是Object的方法，默认的标签enumerable值为false</span></span><br><span class="line"><span class="comment">// Object.x创建属性，默认的标签值为true</span></span><br><span class="line"><span class="built_in">console</span>.log(cat.propertyIsEnumerable(<span class="string">'price'</span>));  <span class="comment">// false</span></span><br><span class="line"><span class="built_in">console</span>.log(cat.hasOwnProperty(<span class="string">'price'</span>));  <span class="comment">// true</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 判断属性是否存在</span></span><br><span class="line"><span class="keyword">if</span>(cat &amp;&amp; cat.legs) &#123;</span><br><span class="line">    cat.legs *= <span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(cat.legs !== <span class="literal">undefined</span>) &#123;</span><br><span class="line">    <span class="comment">// !== undefined 或者 !== null</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(cat.legs !== <span class="literal">undefined</span>) &#123;</span><br><span class="line">    <span class="comment">// !== undefined</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>对象属性枚举 <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> o = &#123;<span class="attr">x</span>: <span class="number">1</span>, <span class="attr">y</span>: <span class="number">2</span>, <span class="attr">z</span>: <span class="number">3</span>&#125;;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'toString'</span> <span class="keyword">in</span> o);  <span class="comment">// true</span></span><br><span class="line">o.propertyIsEnumerable(<span class="string">'toString'</span>);  <span class="comment">// false</span></span><br><span class="line"><span class="keyword">let</span> k;</span><br><span class="line"><span class="built_in">console</span>.log(o.x);  <span class="comment">// 1</span></span><br><span class="line"><span class="built_in">console</span>.log(o.y);  <span class="comment">// 2</span></span><br><span class="line"><span class="built_in">console</span>.log(o.z);  <span class="comment">// 3</span></span><br><span class="line"><span class="keyword">for</span>(key <span class="keyword">in</span> o) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(key);  <span class="comment">// x, y, z</span></span><br><span class="line">    <span class="built_in">console</span>.log(o.key);  <span class="comment">// undefined</span></span><br><span class="line">    <span class="built_in">console</span>.log(o[key]);  <span class="comment">// 1, 2, 3</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> obj = <span class="built_in">Object</span>.create(o);</span><br><span class="line">obj.a = <span class="number">4</span>;</span><br><span class="line"><span class="keyword">let</span> k2;</span><br><span class="line"><span class="keyword">for</span>(k <span class="keyword">in</span> obj) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(k); <span class="comment">// a, x, y, z</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> key1;</span><br><span class="line"><span class="keyword">for</span> (key1 <span class="keyword">in</span> obj) &#123;</span><br><span class="line">    <span class="keyword">if</span>(obj.hasOwnProperty(key1)) &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(key1); <span class="comment">// a</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>对象属性的get/set方法 <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 对象属性的get/set方法</span></span><br><span class="line"><span class="keyword">let</span> man = &#123;</span><br><span class="line">    name: <span class="string">'Bug'</span>,</span><br><span class="line">    weibo: <span class="string">'Bug'</span>,</span><br><span class="line">    <span class="keyword">get</span> age() &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Date</span>().getFullYear() - <span class="number">1988</span>;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="keyword">set</span> age(val) &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'cannot be set '</span> + val);</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(man.age);  <span class="comment">// 调用age的get方法27</span></span><br><span class="line">man.age = <span class="number">100</span>;  <span class="comment">// 调用age的set方法 cannot be set 100</span></span><br><span class="line"><span class="built_in">console</span>.log(man.age);  <span class="comment">// 27</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> Man = &#123;</span><br><span class="line">    weibo: <span class="string">'Bug'</span>,</span><br><span class="line">    $age: <span class="literal">null</span>,</span><br><span class="line">    <span class="keyword">get</span> age() &#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">this</span>.$age === <span class="literal">undefined</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Date</span>().getFullYear() - <span class="number">1988</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">this</span>.$age;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="keyword">set</span> age(val) &#123;</span><br><span class="line">        val = +val; <span class="comment">// 转为数字</span></span><br><span class="line">        <span class="keyword">if</span>(!<span class="built_in">isNaN</span>(val) &amp;&amp; val &gt; <span class="number">0</span> &amp;&amp; val &lt; <span class="number">150</span>) &#123;</span><br><span class="line">            <span class="keyword">this</span>.$age = + val;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">'Incorrect val = '</span> + val );</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(Man.age);  <span class="comment">// 27</span></span><br><span class="line">Man.age = <span class="number">100</span>;</span><br><span class="line"><span class="built_in">console</span>.log(Man.age);  <span class="comment">// 100</span></span><br><span class="line"><span class="comment">//man.age = 'abc';  // Error: Incorrect val = NaN</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// get/set方法与原型链</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 这是错误的定义对象属性get方法方式</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Foo1</span>(<span class="params"></span>) </span>&#123;&#125;</span><br><span class="line">Foo1.prototype.z = &#123;</span><br><span class="line">    <span class="keyword">get</span>: function() &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">let</span> a1 = <span class="keyword">new</span> Foo1();</span><br><span class="line"><span class="built_in">console</span>.log(a1.z);  <span class="comment">// 这个会被认为是对象 &#123; get: [Function] &#125;</span></span><br><span class="line">a1.z = <span class="number">200</span>;</span><br><span class="line"><span class="built_in">console</span>.log(a1.z);  <span class="comment">// 200</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 正确定义方法</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Foo</span>(<span class="params"></span>) </span>&#123;&#125;</span><br><span class="line"><span class="built_in">Object</span>.defineProperty(Foo.prototype, <span class="string">'z'</span>, &#123;</span><br><span class="line">    <span class="keyword">get</span>: function() &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">// configurable: true,  // 开启此属于也不会被改变</span></span><br><span class="line">    <span class="comment">// writable: true,  // 此项不能配置writable/value get/set 二选一</span></span><br><span class="line"> &#125;);</span><br><span class="line"><span class="keyword">let</span> a2 = <span class="keyword">new</span> Foo();</span><br><span class="line"><span class="built_in">console</span>.log(a2.z);   <span class="comment">// 1</span></span><br><span class="line">a2.z = <span class="number">100</span>;</span><br><span class="line"><span class="built_in">console</span>.log(a2.z);  <span class="comment">// 但是还是1 并没有被改变</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">Object</span>.defineProperty(a2, <span class="string">'z'</span>, &#123;</span><br><span class="line">    value: <span class="number">100</span>,</span><br><span class="line">    configurable: <span class="literal">true</span></span><br><span class="line">&#125;);</span><br><span class="line"><span class="built_in">console</span>.log(a2.z);  <span class="comment">// 100</span></span><br><span class="line"><span class="keyword">delete</span> a2.z;</span><br><span class="line"><span class="built_in">console</span>.log(a2.z);  <span class="comment">// 返回到1</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 另外一个例子</span></span><br><span class="line"><span class="keyword">let</span> o = &#123;&#125;;</span><br><span class="line"><span class="built_in">Object</span>.defineProperty(o, <span class="string">'x'</span>, &#123;</span><br><span class="line">    value: <span class="number">1</span></span><br><span class="line">&#125;);  <span class="comment">// 默认writable: false, configurable: false</span></span><br><span class="line"><span class="keyword">let</span> obj = <span class="built_in">Object</span>.create(o);</span><br><span class="line"><span class="built_in">console</span>.log(obj.x);  <span class="comment">// 1</span></span><br><span class="line">obj.x = <span class="number">100</span>;</span><br><span class="line"><span class="built_in">console</span>.log(obj.x);  <span class="comment">// 还是1</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">Object</span>.defineProperty(obj, <span class="string">'x'</span>, &#123;</span><br><span class="line">    writable: <span class="literal">true</span>,</span><br><span class="line">    configurable: <span class="literal">true</span>,</span><br><span class="line">    value: <span class="number">100</span></span><br><span class="line">&#125;);</span><br><span class="line"><span class="built_in">console</span>.log(obj.x);  <span class="comment">// 100</span></span><br><span class="line">obj.x = <span class="number">200</span>;</span><br><span class="line"><span class="built_in">console</span>.log(obj.x); <span class="comment">// 200</span></span><br></pre></td></tr></table></figure></p><h3 id="属性标签">属性标签</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">person = &#123;&#125;;</span><br><span class="line"><span class="built_in">Object</span>.defineProperty(person, <span class="string">'type'</span>, &#123;</span><br><span class="line">    configurable: <span class="literal">false</span>,</span><br><span class="line">    writable: <span class="literal">true</span>,</span><br><span class="line">    enumerable: <span class="literal">false</span>,</span><br><span class="line">    value: <span class="string">'Object'</span>,</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Object</span>.keys(person));   <span class="comment">// [] 返回空数组，不能枚举</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Object</span>.getOwnPropertyDescriptor(person, <span class="string">'type'</span>));   <span class="comment">// &#123; value: 'Object', writable: true, enumerable: false, configurable: false &#125;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// writable为true，可以通过赋值方法修改value值 [通过赋值修改属性值只和writable标签有关，和configurable无关]</span></span><br><span class="line">person.type = <span class="string">'Object2'</span>;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Object</span>.getOwnPropertyDescriptor(person, <span class="string">'type'</span>));  <span class="comment">// &#123; value: 'Object2', writable: true, enumerable: false, configurable: false &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// configurable: false 无法使用delete删除属性， 无法使用get/set方法，  无法重新配置属性标签（除了将writable从true修改为false）</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="keyword">delete</span> person.type);   <span class="comment">// 返回false</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 只有writable和configurable标签都为false时，不能修改value标签值，其他情况都可以修改value标签值</span></span><br><span class="line"><span class="built_in">Object</span>.defineProperty(person, <span class="string">'type'</span>, &#123;</span><br><span class="line">    configurable: <span class="literal">false</span>,</span><br><span class="line">    writable: <span class="literal">true</span>,</span><br><span class="line">    enumerable: <span class="literal">false</span>,</span><br><span class="line">    value: <span class="string">'Object1'</span>,</span><br><span class="line">&#125;);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Object</span>.getOwnPropertyDescriptor(person, <span class="string">'type'</span>));   <span class="comment">// &#123; value: 'Object1', writable: true, enumerable: false, configurable: false &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 可以重新配置writable标签值(只能重true改为false)</span></span><br><span class="line"><span class="built_in">Object</span>.defineProperty(person, <span class="string">'type'</span>, &#123;</span><br><span class="line">    writable: <span class="literal">false</span>,</span><br><span class="line">&#125;);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Object</span>.getOwnPropertyDescriptor(person, <span class="string">'type'</span>));   <span class="comment">// &#123; value: 'Object1', writable: false, enumerable: false, configurable: false &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 无法将writable从false改为true</span></span><br><span class="line"><span class="built_in">Object</span>.defineProperty(person, <span class="string">'type'</span>, &#123;</span><br><span class="line">    writable: <span class="literal">true</span>,</span><br><span class="line">&#125;);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Object</span>.getOwnPropertyDescriptor(person, <span class="string">'type'</span>));   <span class="comment">// TypeError: Cannot redefine property: type</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 无法重新配置enumerable，configurable属性</span></span><br><span class="line"><span class="built_in">Object</span>.defineProperty(person, <span class="string">'type'</span>, &#123;</span><br><span class="line">    enumerable: <span class="literal">true</span>,</span><br><span class="line">&#125;);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Object</span>.getOwnPropertyDescriptor(person, <span class="string">'type'</span>));   <span class="comment">// TypeError: Cannot redefine property: type</span></span><br></pre></td></tr></table></figure><h3 id="对象标签">对象标签</h3><p>原型标签__proto__ <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Person</span>(<span class="params">name</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.name = name;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> p = <span class="keyword">new</span> Person(<span class="string">'jack'</span>);</span><br><span class="line"><span class="built_in">console</span>.log(p.__proto__ === Person.prototype);  <span class="comment">// true</span></span><br></pre></td></tr></table></figure></p><p>类型标签 <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//  对象class标签，表示对象是哪个类型，没有直接的方法去修改或者获取</span></span><br><span class="line"><span class="keyword">let</span> toString = <span class="built_in">Object</span>.prototype.toString;</span><br><span class="line"><span class="built_in">console</span>.log(toString.call(<span class="literal">null</span>));  <span class="comment">// [object Null]</span></span><br><span class="line"><span class="built_in">console</span>.log(toString.call(<span class="literal">undefined</span>));  <span class="comment">// [object Undefined]</span></span><br><span class="line"><span class="built_in">console</span>.log(toString.call(<span class="number">1</span>));  <span class="comment">// [object Number]</span></span><br><span class="line"><span class="built_in">console</span>.log(toString.call(<span class="built_in">Number</span>(<span class="number">1</span>)));  <span class="comment">// [object Number]</span></span><br><span class="line"><span class="built_in">console</span>.log(toString.call(<span class="literal">true</span>));  <span class="comment">// [object Boolean]</span></span><br><span class="line"><span class="built_in">console</span>.log(toString.call(<span class="built_in">Boolean</span>(<span class="literal">true</span>)));  <span class="comment">// [object Boolean]</span></span><br></pre></td></tr></table></figure></p><p>可扩展标签 <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment">// extensible 可扩展标签，表示是否可以继续添加对象属性</span></span><br><span class="line"><span class="keyword">let</span> obj = &#123;<span class="attr">x</span>: <span class="number">1</span>, <span class="attr">y</span>: <span class="number">2</span>&#125;;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Object</span>.isExtensible(obj));  <span class="comment">// true 对象可扩展</span></span><br><span class="line"><span class="built_in">Object</span>.preventExtensions(obj);  <span class="comment">// 配置对象不可扩展</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Object</span>.isExtensible(obj));  <span class="comment">// false 对象不可扩展</span></span><br><span class="line">obj.z =<span class="number">1</span>;</span><br><span class="line"><span class="built_in">console</span>.log(obj.z);  <span class="comment">// undefined 添加属性失败</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Object</span>.getOwnPropertyDescriptor(obj, <span class="string">'x'</span>));  <span class="comment">// // &#123; value: 1, writable: true, enumerable: true, configurable: true &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Object.seal方法，对象的所有属性configurable值为false</span></span><br><span class="line"><span class="built_in">Object</span>.seal(obj);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Object</span>.getOwnPropertyDescriptor(obj, <span class="string">'x'</span>));  <span class="comment">// &#123; value: 1, writable: true, enumerable: true, configurable: false &#125;</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Object</span>.isSealed(obj)); <span class="comment">// true</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Object.freeze方法，对象的所有属性configurable，writable标签值为false</span></span><br><span class="line"><span class="built_in">Object</span>.freeze(obj);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Object</span>.getOwnPropertyDescriptor(obj, <span class="string">'x'</span>));   <span class="comment">// // &#123; value: 1, writable: false, enumerable: true, configurable: false &#125;</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Object</span>.isFrozen(obj));  <span class="comment">// true</span></span><br></pre></td></tr></table></figure></p><h3 id="json对象">Json对象</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 将js对象转为json格式JSON.stringify()</span></span><br><span class="line"><span class="keyword">let</span> x = &#123;<span class="attr">x</span>: <span class="number">1</span>, <span class="attr">y</span>: <span class="literal">true</span>, <span class="attr">z</span>: [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], <span class="attr">nullVal</span>: <span class="literal">null</span>&#125;;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">JSON</span>.stringify(x));  <span class="comment">// &#123;"x":1,"y":true,"z":[1,2,3],"nullVal":null&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// undefined,NaN,Infinity等特殊属性值</span></span><br><span class="line"><span class="keyword">let</span> y = &#123;<span class="attr">val</span>: <span class="literal">undefined</span>, <span class="attr">a</span>: <span class="literal">NaN</span>, <span class="attr">b</span>: <span class="literal">Infinity</span>, <span class="attr">c</span>: <span class="keyword">new</span> <span class="built_in">Date</span>()&#125;;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">JSON</span>.stringify(y));  <span class="comment">// &#123;"a":null,"b":null,"c":"2015-12-19T12:30:40.456Z"&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 将json格式转为js对象JSON.parse</span></span><br><span class="line"><span class="keyword">let</span> z = <span class="built_in">JSON</span>.parse(<span class="string">'&#123;"x": 1&#125;'</span>);</span><br><span class="line"><span class="built_in">console</span>.log(z.x);  <span class="comment">// 1</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//toJSON方法</span></span><br><span class="line"><span class="keyword">let</span> obj = &#123;</span><br><span class="line">    x: <span class="number">1</span>,</span><br><span class="line">    y: <span class="number">2</span>,</span><br><span class="line">    o: &#123;</span><br><span class="line">        o1: <span class="number">1</span>,</span><br><span class="line">        o2: <span class="number">2</span>,</span><br><span class="line">        toJSON: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">this</span>.o1 + <span class="keyword">this</span>.o2;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">JSON</span>.stringify(obj));  <span class="comment">// &#123;"x":1,"y":2,"o":3&#125;</span></span><br></pre></td></tr></table></figure><h3 id="tostring-valueof方法">toString valueOf方法</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 对象在作为操作数时，解释器总是优先调用valueOf()--(Date类型的对象在二元“+”运算时例外),而其他情况，解释器总是认为我们想要的是字符串，所以会优先调用toString()。</span></span><br><span class="line"><span class="keyword">let</span> obj = &#123;<span class="attr">x</span>: <span class="number">1</span>, <span class="attr">y</span>: <span class="number">2</span>&#125;;</span><br><span class="line"><span class="built_in">console</span>.log(obj.toString());  <span class="comment">// [object Object]</span></span><br><span class="line"><span class="built_in">console</span>.log(+obj.toString());  <span class="comment">// NaN</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="number">3</span> + obj.toString());  <span class="comment">// 3[object Object] 会被理解为字符串拼接</span></span><br><span class="line"><span class="built_in">console</span>.log(+obj.valueOf());  <span class="comment">// NaN</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 重写</span></span><br><span class="line">obj.toString = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span>.x + <span class="keyword">this</span>.y;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="built_in">console</span>.log(+obj);  <span class="comment">// 3</span></span><br><span class="line">obj.valueOf = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span>.x + <span class="keyword">this</span>.y + <span class="number">100</span>;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="built_in">console</span>.log(+obj);  <span class="comment">// 103</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 如果只重写了toString，对象转换时会无视valueOf的存在来进行转换。但是，如果只重写了valueOf方法，在要转换为字符串的时候会优先考虑valueOf方法。在不能调用toString的情况下，只能让valueOf上阵了。</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> cc = &#123;</span><br><span class="line">    i: <span class="number">10</span>,</span><br><span class="line">    valueOf: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'valueOf'</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.i;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(cc);<span class="comment">// 10 &#123; [Number: 10] i: 10, valueOf: [Function] &#125;</span></span><br><span class="line"><span class="built_in">console</span>.log(+cc); <span class="comment">// 10 valueOf</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">''</span>+cc); <span class="comment">// 10 valueOf</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">String</span>(cc)); <span class="comment">// [object Object]</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Number</span>(cc)); <span class="comment">// 10 valueOf</span></span><br><span class="line"><span class="built_in">console</span>.log(cc === <span class="string">'10'</span>); <span class="comment">// true valueOf</span></span><br></pre></td></tr></table></figure><h2 id="数组">数组</h2><h3 id="增删改查">增删改查</h3><p>创建数组 <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 字面量创建数组 数组的长度不能超过2^23 - 1 = 4,294,967,295</span></span><br><span class="line"><span class="keyword">let</span> bat = [<span class="string">'B'</span>, <span class="string">'A'</span>, <span class="string">'T'</span>];</span><br><span class="line"><span class="keyword">let</span> students = [&#123;<span class="attr">name</span>: <span class="string">'B'</span>, <span class="attr">age</span>: <span class="number">27</span>&#125;, &#123;<span class="attr">name</span>: <span class="string">'A'</span>, <span class="attr">age</span>: <span class="number">30</span>&#125;];</span><br><span class="line"><span class="keyword">let</span> arr1 = [<span class="string">'T'</span>, <span class="number">123</span>, <span class="literal">true</span>, <span class="literal">null</span>, <span class="literal">undefined</span>];</span><br><span class="line"><span class="keyword">let</span> arrInArr = [[<span class="number">1</span>, <span class="number">2</span>], [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]];</span><br><span class="line">    </span><br><span class="line"><span class="comment">// 对象创建数组 new关键字可以省略</span></span><br><span class="line"><span class="keyword">let</span> arr2 = [];  <span class="comment">// var = [];</span></span><br><span class="line"><span class="keyword">let</span> arrWithLength = <span class="keyword">new</span> <span class="built_in">Array</span>(<span class="number">100</span>);  <span class="comment">// undefined * 100</span></span><br><span class="line"><span class="keyword">let</span> arrLikesLiteral = [<span class="literal">true</span>, <span class="literal">false</span>, <span class="literal">null</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="string">'hi'</span>];  <span class="comment">// [true, false, null, 1, 2, 'hi']</span></span><br></pre></td></tr></table></figure></p><p>数组元素操作 <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 数组元素读写</span></span><br><span class="line"><span class="comment">// 索引访问</span></span><br><span class="line"><span class="keyword">let</span> x = [<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>, <span class="string">'d'</span>, <span class="string">'e'</span>];</span><br><span class="line"><span class="built_in">console</span>.log(x[<span class="number">1</span>]);  <span class="comment">// b</span></span><br><span class="line"><span class="built_in">console</span>.log(x.length);  <span class="comment">// 5</span></span><br><span class="line">x[<span class="number">5</span>] = <span class="string">'f'</span>;</span><br><span class="line"><span class="built_in">console</span>.log(x);  <span class="comment">// [ 'a', 'b', 'c', 'd', 'e', 'f' ]</span></span><br><span class="line"><span class="built_in">console</span>.log(x.length);  <span class="comment">// 6</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// delete方法并不会改变数组长度,delete 和定义为undefined的区别</span></span><br><span class="line"><span class="keyword">delete</span> x[<span class="number">0</span>];</span><br><span class="line"><span class="built_in">console</span>.log(x);  <span class="comment">// [ , 'b', 'c', 'd', 'e', 'f' ]</span></span><br><span class="line"><span class="built_in">console</span>.log(x.length);  <span class="comment">// 6</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="number">0</span> <span class="keyword">in</span> x);  <span class="comment">// 会返回false</span></span><br><span class="line">x[<span class="number">1</span>] = <span class="literal">undefined</span>;</span><br><span class="line"><span class="built_in">console</span>.log(x);  <span class="comment">// [ , undefined, 'c', 'd', 'e', 'f' ]</span></span><br><span class="line"><span class="built_in">console</span>.log(x.length);  <span class="comment">// 6</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="number">1</span> <span class="keyword">in</span> x);  <span class="comment">// true</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 数组是动态的，无需指定大小</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 指定索引位置，改变数组</span></span><br><span class="line"><span class="keyword">let</span> y = [];</span><br><span class="line">y[<span class="number">1</span>] = <span class="string">'b'</span>;</span><br><span class="line"><span class="built_in">console</span>.log(y.length);  <span class="comment">// 2</span></span><br><span class="line"><span class="built_in">console</span>.log(y);   <span class="comment">// [ , 'b' ]</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// push方法，在数组尾部添加元素,并返回新的数组长度</span></span><br><span class="line"><span class="built_in">console</span>.log(y.push(<span class="string">'c'</span>));  <span class="comment">// 3</span></span><br><span class="line"><span class="built_in">console</span>.log(y);  <span class="comment">// [ , 'b', 'c' ]</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 在数组尾部添加的另一种方法</span></span><br><span class="line">y[y.length] = <span class="string">'d'</span>;</span><br><span class="line"><span class="built_in">console</span>.log(y);  <span class="comment">// [ , 'b', 'c', 'd' ]</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// unshift方法，在数组头部添加元素，并返回新的数组长度</span></span><br><span class="line"><span class="built_in">console</span>.log(y.unshift(<span class="string">'a'</span>));  <span class="comment">// 5</span></span><br><span class="line"><span class="built_in">console</span>.log(y);  <span class="comment">// [ 'a', , 'b', 'c', 'd' ]</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// pop方法，删除数组尾部的元素并返回这个元素</span></span><br><span class="line"><span class="built_in">console</span>.log(y.pop());  <span class="comment">// 'd'</span></span><br><span class="line"><span class="built_in">console</span>.log(y);  <span class="comment">// [ 'a', , 'b', 'c' ]</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 删除数组尾部元素的另个方法</span></span><br><span class="line">y.length -= <span class="number">1</span>;</span><br><span class="line"><span class="built_in">console</span>.log(y);  <span class="comment">// [ 'a', , 'b' ]</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// shift方法，删除数组头部的元素并返回这个元素</span></span><br><span class="line"><span class="built_in">console</span>.log(y.shift());  <span class="comment">// 'a'</span></span><br><span class="line"><span class="built_in">console</span>.log(y);  <span class="comment">// [ , 'b' ]</span></span><br></pre></td></tr></table></figure></p><p>数组迭代 <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 数组迭代</span></span><br><span class="line"><span class="keyword">let</span> x = [<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>, <span class="string">'d'</span>, <span class="string">'e'</span>, <span class="string">'f'</span>, <span class="string">'g'</span>];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; x.length; i++) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(x[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// a b c d e f g</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(i <span class="keyword">in</span> x) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(x[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// a b c d e f g</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// for in 表达式的坑：会迭代原型的元素</span></span><br><span class="line"><span class="built_in">Array</span>.prototype.x = <span class="string">'keng'</span>;</span><br><span class="line"><span class="keyword">for</span>(i <span class="keyword">in</span> x) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(x[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// a b c d e f g keng</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(i <span class="keyword">in</span> x) &#123;</span><br><span class="line">    <span class="keyword">if</span>(x.hasOwnProperty(i)) &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(x[i]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// a b c d e f g</span></span><br></pre></td></tr></table></figure></p><p>特殊数组：二维数组和稀疏数组 <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 特殊数组：二维数组，稀疏数组</span></span><br><span class="line"><span class="comment">// 二维数组</span></span><br><span class="line"><span class="keyword">let</span> arr = [[<span class="string">'a'</span>, <span class="string">'b'</span>], [<span class="string">'c'</span>, <span class="string">'d'</span>], [<span class="string">'e'</span>, <span class="string">'f'</span>]];</span><br><span class="line"><span class="keyword">let</span> i = <span class="number">0</span>, j = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">let</span> row;</span><br><span class="line"><span class="keyword">for</span>(; i &lt; arr.length; i++) &#123;</span><br><span class="line">    row = arr[i];</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'row'</span> + i);</span><br><span class="line">    <span class="keyword">for</span>(j = <span class="number">0</span>; j &lt; row.length; j++) &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(row[j]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// row0 a b row1 c d row2 e f</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 稀疏数组：并不含有从0开始的连续索引</span></span><br><span class="line"><span class="keyword">let</span> arr1 = [<span class="literal">undefined</span>];</span><br><span class="line"><span class="keyword">let</span> arr2 = <span class="keyword">new</span> <span class="built_in">Array</span>(<span class="number">1</span>);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="number">0</span> <span class="keyword">in</span> arr1);  <span class="comment">// true</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="number">0</span> <span class="keyword">in</span> arr2);  <span class="comment">// false</span></span><br></pre></td></tr></table></figure></p><h3 id="方法">方法</h3><p>Array.prototype.join(separator) <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Array.prototype.join(separator)方法：将数组拼接成字符串，返回字符串，不改变原数组</span></span><br><span class="line"><span class="keyword">let</span> arr = [<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>];</span><br><span class="line"><span class="built_in">console</span>.log(arr.join());  <span class="comment">// a,b,c</span></span><br><span class="line"><span class="built_in">console</span>.log(arr.join(<span class="string">'_'</span>));  <span class="comment">// a,b,c</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">repeatString</span>(<span class="params">str, n</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Array</span>(n + <span class="number">1</span>).join(str);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(repeatString(<span class="string">'a'</span>, <span class="number">3</span>));  <span class="comment">// aaa</span></span><br><span class="line"><span class="built_in">console</span>.log(repeatString(<span class="string">'Hi'</span>, <span class="number">5</span>));  <span class="comment">// HiHiHiHiHi</span></span><br></pre></td></tr></table></figure></p><p>Array.prototype.reverse() <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Array.prototype.reverse() 将数组逆序，返回数组本身，会改变数组本身</span></span><br><span class="line"><span class="keyword">let</span> arr = [<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>];</span><br><span class="line"><span class="keyword">let</span> arr1 = arr;</span><br><span class="line"><span class="keyword">let</span> arr2 = [<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>];</span><br><span class="line"><span class="built_in">console</span>.log(arr.reverse());  <span class="comment">// [ 'c', 'b', 'a' ]</span></span><br><span class="line"><span class="built_in">console</span>.log(arr);  <span class="comment">// [ 'c', 'b', 'a' ]</span></span><br><span class="line"><span class="built_in">console</span>.log(arr1);  <span class="comment">// [ 'c', 'b', 'a' ]</span></span><br><span class="line"><span class="built_in">console</span>.log(arr2);  <span class="comment">// [ 'a', 'b', 'c' ]</span></span><br></pre></td></tr></table></figure></p><p>Array.prototype.sort(sortby） <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Array.prototype.sort(sortby)方法：接受一个函数参数(不传参数默认按字符编码顺序)，返回数组本身，会修改原数组</span></span><br><span class="line"><span class="keyword">let</span> x = [<span class="string">'f'</span>, <span class="string">'b'</span>, <span class="string">'d'</span>, <span class="string">'e'</span>, <span class="string">'a'</span>];</span><br><span class="line"><span class="built_in">console</span>.log(x.sort());  <span class="comment">// [ 'a', 'b', 'd', 'e', 'f' ]</span></span><br><span class="line"><span class="built_in">console</span>.log(x);  <span class="comment">// [ 'a', 'b', 'd', 'e', 'f' ]</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> y = [<span class="number">13</span>, <span class="number">24</span>, <span class="number">51</span>, <span class="number">3</span>];</span><br><span class="line"><span class="built_in">console</span>.log(y.sort());  <span class="comment">// [ 13, 24, 3, 51 ]</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 传入参数：比较函数(a, b)</span></span><br><span class="line"><span class="comment">// 若 a 小于 b，在排序后的数组中 a 应该出现在 b 之前，则返回一个小于 0 的值。</span></span><br><span class="line"><span class="comment">// 若 a 等于 b，则返回 0。</span></span><br><span class="line"><span class="comment">// 若 a 大于 b，则返回一个大于 0 的值。</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sortNumber</span>(<span class="params">a, b</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a - b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(y.sort(sortNumber));  <span class="comment">// [ 3, 13, 24, 51 ]</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> z = [&#123;<span class="attr">age</span>: <span class="number">25</span>&#125;, &#123;<span class="attr">age</span>: <span class="number">29</span>&#125;, &#123;<span class="attr">age</span>: <span class="number">40</span>&#125;];</span><br><span class="line"><span class="built_in">console</span>.log(z.sort(<span class="function"><span class="keyword">function</span> <span class="title">sortAge</span>(<span class="params">a, b</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a.age - b.age;</span><br><span class="line">&#125;));  <span class="comment">// [ &#123; age: 25 &#125;, &#123; age: 29 &#125;, &#123; age: 40 &#125; ]</span></span><br></pre></td></tr></table></figure></p><p>Array.prototype.concat(arrayX, arrayY.....) <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Array.prototype.concat(arrayX, arrayY.....)方法 连接多个数组，返回一个新的数组，不会改变原数组</span></span><br><span class="line"><span class="keyword">let</span> arr = [<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>];</span><br><span class="line"><span class="built_in">console</span>.log(arr.concat(<span class="string">'d'</span>, <span class="string">'e'</span>));  <span class="comment">// [ 'a', 'b', 'c', 'd', 'e' ]</span></span><br><span class="line"><span class="built_in">console</span>.log(arr);  <span class="comment">// [ 'a', 'b', 'c' ]</span></span><br><span class="line"><span class="built_in">console</span>.log(arr.concat([<span class="string">'d'</span>, <span class="string">'e'</span>], <span class="string">'f'</span>));  <span class="comment">// [ 'a', 'b', 'c', 'd', 'e', 'f' ]</span></span><br><span class="line"><span class="built_in">console</span>.log(arr.concat([<span class="string">'d'</span>, <span class="string">'e'</span>], [<span class="string">'f'</span>, <span class="string">'g'</span>]));  <span class="comment">// 'b', 'c', 'd', 'e', 'f', 'g' ]</span></span><br><span class="line"><span class="built_in">console</span>.log(arr.concat([[<span class="string">'d'</span>, <span class="string">'e'</span>], <span class="string">'f'</span>]));  <span class="comment">// [ 'a', 'b', 'c', [ 'd', 'e' ], 'f' ]</span></span><br><span class="line"><span class="built_in">console</span>.log(arr.concat([[[<span class="string">'d'</span>, <span class="string">'e'</span>], <span class="string">'f'</span>], <span class="string">'g'</span>]));  <span class="comment">// [ 'a', 'b', 'c', [ [ 'd', 'e' ], 'f' ], 'g' ]</span></span><br></pre></td></tr></table></figure></p><p>Array.prototype.slice(start, end) <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Array.prototype.slice(start, end)方法：左闭右开截取数组，返回一个新的数组，不改变原数组</span></span><br><span class="line"><span class="keyword">let</span> x = [<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>, <span class="string">'d'</span>, <span class="string">'e'</span>];</span><br><span class="line"><span class="built_in">console</span>.log(x.slice(<span class="number">1</span>, <span class="number">3</span>));  <span class="comment">// ['b', 'c']</span></span><br><span class="line"><span class="built_in">console</span>.log(x.slice(<span class="number">1</span>));  <span class="comment">// ['b', 'c', 'd', 'e']</span></span><br><span class="line"><span class="built_in">console</span>.log(x.slice(<span class="number">1</span>, <span class="number">-1</span>));  <span class="comment">// ['b', 'c', 'd']</span></span><br><span class="line"><span class="built_in">console</span>.log(x.slice(<span class="number">-4</span>, <span class="number">-3</span>));  <span class="comment">// ['b']</span></span><br></pre></td></tr></table></figure></p><p>Array.prototype.splice(index, howmany, item1,....itemX) <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Array.prototype.splice(index, howmany, item1,....itemX)方法：</span></span><br><span class="line"><span class="comment">// 向/从数组中添加/删除项目，然后返回被删除的项目。会改变原数组</span></span><br><span class="line"><span class="comment">// index参数：必须，整数，添加或删除的位置，左闭合</span></span><br><span class="line"><span class="comment">// howmany参数：可选，设置为0，则不会删除</span></span><br><span class="line"><span class="comment">// item1,.....itemX：可选，向数组中添加的元素</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> a = [<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>, <span class="string">'d'</span>, <span class="string">'e'</span>];</span><br><span class="line"><span class="built_in">console</span>.log(a.splice(<span class="number">2</span>));   <span class="comment">// [ 'c', 'd', 'e' ]</span></span><br><span class="line"><span class="built_in">console</span>.log(a);  <span class="comment">// [ 'a', 'b' ]</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> b = [<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>, <span class="string">'d'</span>, <span class="string">'e'</span>];</span><br><span class="line"><span class="built_in">console</span>.log(b.splice(<span class="number">2</span>, <span class="number">1</span>));  <span class="comment">// [ 'c' ]</span></span><br><span class="line"><span class="built_in">console</span>.log(b);  <span class="comment">// [ 'a', 'b', 'd', 'e' ]</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> c = [<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>, <span class="string">'d'</span>, <span class="string">'e'</span>];</span><br><span class="line"><span class="built_in">console</span>.log(c.splice(<span class="number">2</span>, <span class="number">0</span>));  <span class="comment">// []</span></span><br><span class="line"><span class="built_in">console</span>.log(c);  <span class="comment">// [ 'a', 'b', 'c', 'd', 'e' ]</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> d = [<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>, <span class="string">'d'</span>, <span class="string">'e'</span>];</span><br><span class="line"><span class="built_in">console</span>.log(d.splice(<span class="number">2</span>, <span class="number">2</span>, <span class="string">'f'</span>, <span class="string">'g'</span>, [<span class="string">'h'</span>, <span class="string">'i'</span>]));  <span class="comment">// [ 'c', 'd' ]</span></span><br><span class="line"><span class="built_in">console</span>.log(d);  <span class="comment">// [ 'a', 'b', 'f', 'g', [ 'h', 'i' ], 'e' ]</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 指定位置插入新的元素</span></span><br><span class="line"><span class="keyword">let</span> e = [<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>, <span class="string">'d'</span>, <span class="string">'e'</span>];</span><br><span class="line"><span class="built_in">console</span>.log(e.splice(<span class="number">2</span>, <span class="number">0</span>, <span class="string">'f'</span>));  <span class="comment">// []</span></span><br><span class="line"><span class="built_in">console</span>.log(e); <span class="comment">// [ 'a', 'b', 'f', 'c', 'd', 'e' ]</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> f = [<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>, <span class="string">'d'</span>, <span class="string">'e'</span>];</span><br><span class="line"><span class="built_in">console</span>.log(f.splice());  <span class="comment">// []</span></span><br><span class="line"><span class="built_in">console</span>.log(f); <span class="comment">// [ 'a', 'b', 'c', 'd', 'e' ]</span></span><br></pre></td></tr></table></figure></p><p>Array.prototype.forEach() <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Array.prototype.forEach()方法(ES5)：接收函数参数</span></span><br><span class="line"><span class="comment">// 函数的3个参数x: 元素值，index：元素索引，a 数组本身</span></span><br><span class="line"><span class="keyword">let</span> x = [<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>, <span class="string">'d'</span>, <span class="string">'e'</span>];</span><br><span class="line">x.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">x, index, a</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(x + <span class="string">'_'</span> + index + <span class="string">'_'</span> + a);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// a_0_a,b,c,d,e b_1_a,b,c,d,e c_2_a,b,c,d,e d_3_a,b,c,d,e e_4_a,b,c,d,e</span></span><br></pre></td></tr></table></figure></p><p>Array.prototype.map() <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Array.prototype.map()方法(ES5):接收函数参数,不会修改原数组</span></span><br><span class="line"><span class="keyword">let</span> x = [<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>];</span><br><span class="line"><span class="keyword">let</span> y = x.map(<span class="function"><span class="keyword">function</span>(<span class="params">x</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> x + <span class="string">'like'</span>;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(x);  <span class="comment">// [ 'a', 'b', 'c' ]</span></span><br><span class="line"><span class="built_in">console</span>.log(y);  <span class="comment">// [ 'alike', 'blike', 'clike' ]</span></span><br></pre></td></tr></table></figure></p><p>Array.prototype.filter() <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Array.prototype.filter()过滤方法(ES5):接收函数参数，不修改原数组</span></span><br><span class="line"><span class="keyword">let</span> x = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span>];</span><br><span class="line"><span class="keyword">let</span> y = x.filter(<span class="function"><span class="keyword">function</span>(<span class="params">x, index</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> index % <span class="number">3</span> === <span class="number">0</span> || x &gt;= <span class="number">8</span>;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="built_in">console</span>.log(y);  <span class="comment">// [ 1, 4, 7, 8, 9, 10 ]</span></span><br><span class="line"><span class="built_in">console</span>.log(x);  <span class="comment">// [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 ]</span></span><br></pre></td></tr></table></figure></p><p>Array.prototype.every() &amp; Array.prototype.some() <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Array.prototype.every() &amp; Array.prototype.some()判断方法(ES5):接收函数参数，不修改原数组</span></span><br><span class="line"><span class="comment">// every 全部符合条件  some 只需一个符合条件</span></span><br><span class="line"><span class="keyword">let</span> arr = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>];</span><br><span class="line"><span class="built_in">console</span>.log(arr.every(<span class="function"><span class="keyword">function</span>(<span class="params">x</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> x &lt; <span class="number">10</span>;</span><br><span class="line">&#125;));  <span class="comment">// true</span></span><br><span class="line"><span class="built_in">console</span>.log(arr.every(<span class="function"><span class="keyword">function</span>(<span class="params">x</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> x &lt;= <span class="number">3</span>;</span><br><span class="line">&#125;));  <span class="comment">// false</span></span><br><span class="line"><span class="built_in">console</span>.log(arr.some(<span class="function"><span class="keyword">function</span>(<span class="params">x</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> x === <span class="number">3</span>;</span><br><span class="line">&#125;));  <span class="comment">// true</span></span><br><span class="line"><span class="built_in">console</span>.log(arr.some(<span class="function"><span class="keyword">function</span>(<span class="params">x</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> x === <span class="number">100</span>;</span><br><span class="line">&#125;));  <span class="comment">// false</span></span><br></pre></td></tr></table></figure></p><p>Array.prototype.reduce(function, index) Array.prototype.reduceRight(function, index) <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Array.prototype.reduce(function, index) Array.prototype.reduceRight(function, index)方法</span></span><br><span class="line"><span class="comment">// 接收一个函数参数和一个数组索引参数，并返回一个值，不修改原数组</span></span><br><span class="line"><span class="comment">// 函数参加接收2个参数分别代表2个索引</span></span><br><span class="line"><span class="comment">// 索引参数表示从第index个元素开始</span></span><br><span class="line"><span class="keyword">let</span> a = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>];</span><br><span class="line"><span class="keyword">let</span> sum = a.reduce(<span class="function"><span class="keyword">function</span>(<span class="params">x, y</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> x + y;</span><br><span class="line">&#125;, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">console</span>.log(sum);  <span class="comment">// 6  1+2返回3 3+3 返回6</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> b = [<span class="number">3</span>, <span class="number">9</span>, <span class="number">6</span>];</span><br><span class="line"><span class="keyword">let</span> max1 = b.reduce(<span class="function"><span class="keyword">function</span>(<span class="params">x, y</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(x + <span class="string">'|'</span> + y);</span><br><span class="line">    <span class="keyword">return</span> x &gt; y ? x : y;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// 3|9</span></span><br><span class="line"><span class="comment">// 9|6</span></span><br><span class="line"><span class="built_in">console</span>.log(max1);  <span class="comment">// 9</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> max2 = b.reduceRight(<span class="function"><span class="keyword">function</span>(<span class="params">x, y</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(x + <span class="string">'|'</span> + y);</span><br><span class="line">    <span class="keyword">return</span> x &gt; y ? x : y;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// 6|9</span></span><br><span class="line"><span class="comment">// 9|3</span></span><br><span class="line"><span class="built_in">console</span>.log(max2);  <span class="comment">// 9</span></span><br></pre></td></tr></table></figure></p><p>Array.prototype.indexOf(value, index) Array.prototype.lastIndexOf(value, index) <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Array.prototype.indexOf(value, index) Array.prototype.lastIndexOf(value, index)数字检索方法</span></span><br><span class="line"><span class="comment">// value参数表示要查找的元素值，index表示从第几个索引位置开始查找(闭合)</span></span><br><span class="line"><span class="keyword">let</span> arr = [<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>, <span class="string">'b'</span>, <span class="string">'a'</span>];</span><br><span class="line"><span class="built_in">console</span>.log(arr.indexOf(<span class="string">'b'</span>));  <span class="comment">// 1 在数组中查找是否有元素值为'b'，有则返回这个元素索引</span></span><br><span class="line"><span class="built_in">console</span>.log(arr.indexOf(<span class="string">'f'</span>));  <span class="comment">// -1 如果没有则返回-1</span></span><br><span class="line"><span class="built_in">console</span>.log(arr.indexOf(<span class="string">'b'</span>, <span class="number">1</span>));  <span class="comment">// 1 从第2个元素开始查找，返回索引1</span></span><br><span class="line"><span class="built_in">console</span>.log(arr.indexOf(<span class="string">'b'</span>, <span class="number">2</span>));  <span class="comment">// 3</span></span><br><span class="line"><span class="built_in">console</span>.log(arr.indexOf(<span class="string">'b'</span>, <span class="number">-2</span>));  <span class="comment">// 3</span></span><br><span class="line"><span class="built_in">console</span>.log(arr.indexOf(<span class="string">'b'</span>, <span class="number">-4</span>));  <span class="comment">// 1</span></span><br><span class="line"><span class="built_in">console</span>.log(arr.indexOf(<span class="string">'b'</span>, <span class="number">-8</span>));  <span class="comment">// 1</span></span><br><span class="line"><span class="built_in">console</span>.log(arr.lastIndexOf(<span class="string">'b'</span>));  <span class="comment">// 3</span></span><br></pre></td></tr></table></figure></p><p>Array.isArray() <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Array.isArray() 判断是否为数组</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Array</span>.isArray([]));  <span class="comment">// true</span></span><br></pre></td></tr></table></figure></p><h2 id="函数">函数</h2><h3 id="创建">创建</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 函数声明</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">add1</span>(<span class="params">a, b</span>) </span>&#123;</span><br><span class="line">    a = +a;</span><br><span class="line">    b = +b;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">isNaN</span>(a) || <span class="built_in">isNaN</span>(b)) &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> a + b;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 函数表达式</span></span><br><span class="line"><span class="keyword">let</span> add2 = <span class="function"><span class="keyword">function</span>(<span class="params">a, b</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// do sth</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// IEF(立即执行函数表达式)</span></span><br><span class="line">(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">// do sth</span></span><br><span class="line">&#125;)();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 函数表达式</span></span><br><span class="line"><span class="keyword">return</span> <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">// do sth</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// NFE(命名式函数表达式)</span></span><br><span class="line"><span class="keyword">let</span> add3 = <span class="function"><span class="keyword">function</span> <span class="title">foo</span>(<span class="params">a, b</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// do sth</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p><strong>函数声明和函数表达式区别：函数声明会前置</strong> <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">let</span> num1 = add1(<span class="number">1</span>, <span class="number">2</span>);</span><br><span class="line"><span class="built_in">console</span>.log(num1);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">add1</span>(<span class="params">a, b</span>) </span>&#123;</span><br><span class="line">    a = +a;</span><br><span class="line">    b = +b;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">isNaN</span>(a) || <span class="built_in">isNaN</span>(b)) &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> a + b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 结果为3</span></span><br></pre></td></tr></table></figure></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> num = add(<span class="number">1</span>, <span class="number">2</span>);</span><br><span class="line"><span class="built_in">console</span>.log(num);</span><br><span class="line"><span class="keyword">let</span> add = <span class="function"><span class="keyword">function</span> (<span class="params">a, b</span>) </span>&#123;</span><br><span class="line">    a = +a;</span><br><span class="line">    b = +b;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">isNaN</span>(a) || <span class="built_in">isNaN</span>(b)) &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> a + b;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">// TypeError: add is not a function</span></span><br></pre></td></tr></table></figure><h3 id="call和apply">call和apply</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// apply和call方法（浏览器）</span></span><br><span class="line"><span class="comment">// 第一个参数是作为this的对象，如果不是对象，会转换为对象</span></span><br><span class="line"><span class="comment">// call传入的是扁平传入参数</span></span><br><span class="line"><span class="comment">// apply第二个参数树数组</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">foo</span>(<span class="params">x, y</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(x, y, <span class="keyword">this</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">foo.call(<span class="number">100</span>, <span class="number">1</span>, <span class="number">2</span>);  <span class="comment">// 1, 2, Number(100)</span></span><br><span class="line">foo.apply(<span class="literal">true</span>, [<span class="number">3</span>, <span class="number">4</span>]);  <span class="comment">//3, 4, Boolean(true)</span></span><br><span class="line">foo.apply(<span class="literal">null</span>);  <span class="comment">// undefined, undefined, window</span></span><br><span class="line">foo.apply(<span class="literal">undefined</span>);  <span class="comment">// undefined, undefined, window</span></span><br></pre></td></tr></table></figure><h3 id="arguments属性">arguments属性</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">foo</span>(<span class="params">x, y, z</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="built_in">arguments</span>.length);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// arguments.callee()递归</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sum</span> (<span class="params">num</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (num &lt;= <span class="number">1</span>) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span> num * <span class="built_in">arguments</span>.callee(num<span class="number">-1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(sum(<span class="number">4</span>));    <span class="comment">//返回结果:24</span></span><br></pre></td></tr></table></figure><h3 id="bind">bind</h3><p>bind方法：改变this <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// bind方法</span></span><br><span class="line"><span class="keyword">this</span>.x = <span class="number">9</span>;</span><br><span class="line"><span class="keyword">var</span> <span class="built_in">module</span> = &#123;</span><br><span class="line">    x: <span class="number">81</span>,</span><br><span class="line">    getX: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.x;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.getX();  <span class="comment">// 81 this指向module</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> getX = <span class="built_in">module</span>.getX;</span><br><span class="line">getX();  <span class="comment">// 9 this指向全局变量</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> boundGetX = getX.bind(<span class="built_in">module</span>);</span><br><span class="line">boundGetX();  <span class="comment">// 81  bind改变this指向</span></span><br></pre></td></tr></table></figure></p><p>bind方法：科里化 <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// bind方法</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">add</span>(<span class="params">a, b, c</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a+b+c;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> func = add.bind(<span class="literal">undefined</span>, <span class="number">100</span>);</span><br><span class="line">func(<span class="number">1</span>, <span class="number">2</span>);  <span class="comment">// 103  undefined传给this， 100传给第一个参数a</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> func2 = func.bind(<span class="literal">undefined</span>, <span class="number">200</span>);</span><br><span class="line">func2(<span class="number">10</span>);  <span class="comment">// 310 undefined传给this，200传给b</span></span><br></pre></td></tr></table></figure></p><p>bind与new <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// bind方法与new</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">foo</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.b = <span class="number">100</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span>.a;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> func = foo.bind(&#123;<span class="attr">a</span>: <span class="number">1</span>&#125;);</span><br><span class="line">func(); <span class="comment">// 1  foo.bind后this指向&#123;a: 1&#125; return this.a = 1</span></span><br><span class="line"><span class="keyword">new</span> func();  <span class="comment">// &#123;b: 100&#125; new调用将返回一个this，this会被初始化一个空对象，并且其原型是foo.prototype,空对象的b属性为100</span></span><br></pre></td></tr></table></figure></p><h2 id="闭包">闭包</h2><p>闭包基本概念 <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 闭包</span></span><br><span class="line"><span class="keyword">let</span> n = <span class="number">999</span>;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">f1</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(n);</span><br><span class="line">&#125;</span><br><span class="line">f1();  <span class="comment">// 999  函数内部可以访问全局变量</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">f2</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> n = <span class="number">999</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(n);  <span class="comment">// error  函数外部无法访问函数内部局部变量</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">f3</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    n = <span class="number">999</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(n); <span class="comment">// 999 因为没有使用var语句，相当于定义一个全局变量</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 简单的闭包原型</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">f4</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> n = <span class="number">999</span>;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">f5</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(n);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> f5</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> result = f4();</span><br><span class="line">result();  <span class="comment">// 999</span></span><br></pre></td></tr></table></figure></p><p>闭包案例 <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-id">#div1</span> &#123;</span></span><br><span class="line">            background-color: rosybrown;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-id">#div2</span> &#123;</span></span><br><span class="line">            background-color: aquamarine;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-id">#div3</span> &#123;</span></span><br><span class="line">            background-color: yellowgreen;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="handlebars"><span class="xml">    document.body.innerHTML = '<span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"div1"</span>&gt;</span>aaa<span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"div2"</span>&gt;</span>bbb<span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"div3"</span>&gt;</span>ccc<span class="tag">&lt;/<span class="name">div</span>&gt;</span>';</span></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">1</span>; i &lt; <span class="number">4</span>; i++) &#123;</span></span><br><span class="line"><span class="actionscript">        alert(i);  <span class="comment">// 结果为1，2，3</span></span></span><br><span class="line"><span class="javascript">        <span class="built_in">document</span>.getElementById(<span class="string">'div'</span> + i).</span></span><br><span class="line"><span class="actionscript">                addEventListener(<span class="string">'click'</span>, <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">            alert(i);  <span class="comment">// 点击div1，div2，div3结果都是4,因为addEventListener的回调函数执行时i都为4</span></span></span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>正确写法 <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-id">#div1</span> &#123;</span></span><br><span class="line">            background-color: rosybrown;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-id">#div2</span> &#123;</span></span><br><span class="line">            background-color: aquamarine;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-id">#div3</span> &#123;</span></span><br><span class="line">            background-color: yellowgreen;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="handlebars"><span class="xml">    document.body.innerHTML = '<span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"div1"</span>&gt;</span>aaa<span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"div2"</span>&gt;</span>bbb<span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"div3"</span>&gt;</span>ccc<span class="tag">&lt;/<span class="name">div</span>&gt;</span>';</span></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">1</span>; i &lt; <span class="number">4</span>; i++) &#123;</span></span><br><span class="line"><span class="actionscript">        !<span class="function"><span class="keyword">function</span><span class="params">(i)</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">            alert(i);  <span class="comment">// 1,2,3</span></span></span><br><span class="line"><span class="javascript">            <span class="built_in">document</span>.getElementById(<span class="string">'div'</span> + i).</span></span><br><span class="line"><span class="actionscript">               addEventListener(<span class="string">'click'</span>, <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">                   alert(i);  <span class="comment">// 1, 2,3 </span></span></span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;(i);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>闭包中的封装 <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> _userID = <span class="number">23245</span>;</span><br><span class="line">    <span class="keyword">let</span> _typeID = <span class="string">'item'</span>;</span><br><span class="line">    <span class="keyword">let</span> exportID = &#123;&#125;;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">converter</span>(<span class="params">userID</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> +userID;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    exportID.getUserID = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> converter(_userID);</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    exportID.getTypeID = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> _typeID;</span><br><span class="line">    &#125;;</span><br><span class="line">    global.exportID = exportID;</span><br><span class="line">&#125;());</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(exportID.getUserID());  <span class="comment">//23245</span></span><br><span class="line"><span class="built_in">console</span>.log(exportID._userID);  <span class="comment">// undefined</span></span><br></pre></td></tr></table></figure></p><h2 id="this">this</h2><h3 id="全局下的this">全局下的this</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 全局下的this(浏览器下)</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="keyword">this</span>.window === <span class="built_in">document</span>);  <span class="comment">// true</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="keyword">this</span> === <span class="built_in">window</span>);  <span class="comment">// true</span></span><br><span class="line"><span class="keyword">this</span>.a = <span class="number">37</span>;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">window</span>.a);  <span class="comment">// 37</span></span><br></pre></td></tr></table></figure><h3 id="一般函数的this">一般函数的this</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 一般函数的this（浏览器下）</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">f1</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">&#125;</span><br><span class="line">f1() === <span class="built_in">window</span>;  <span class="comment">// true</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">f2</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="meta">    "use strict"</span>;  <span class="comment">// 严格模式下</span></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span></span><br><span class="line">&#125;</span><br><span class="line">f2() === <span class="literal">undefined</span>;  <span class="comment">// true</span></span><br></pre></td></tr></table></figure><h3 id="作为对象方法的函数的this">作为对象方法的函数的this</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> o1 = &#123;</span><br><span class="line">    prop: <span class="number">37</span>,</span><br><span class="line">    f: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.prop;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="built_in">console</span>.log(o1.f());  <span class="comment">// 37</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> o2 = &#123;<span class="attr">prop</span>: <span class="number">37</span>&#125;;</span><br><span class="line"><span class="function"><span class="keyword">function</span>  <span class="title">independent</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span>.prop;</span><br><span class="line">&#125;</span><br><span class="line">o2.f = independent;</span><br><span class="line"><span class="built_in">console</span>.log(o2.f());  <span class="comment">// 37</span></span><br></pre></td></tr></table></figure><h3 id="原型链上的this">原型链上的this</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> o = &#123;</span><br><span class="line">    f: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.a + <span class="keyword">this</span>.b;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">let</span> p = <span class="built_in">Object</span>.create(o); <span class="comment">// p为空对象，其原型会指向o</span></span><br><span class="line">p.a = <span class="number">1</span>;</span><br><span class="line">p.b = <span class="number">4</span>;</span><br><span class="line"><span class="built_in">console</span>.log(p.f())  <span class="comment">// 5</span></span><br></pre></td></tr></table></figure><h3 id="构造器中的this">构造器中的this</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 当new的函数构造器没有return返回值或者返回值不是对象时，new返回一个this指向构造器的prototype这样一个空对象</span></span><br><span class="line"><span class="comment">// 如果return返回的是对象 new返回的这是这个对象</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">MyClass</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.a = <span class="number">37</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> o = <span class="keyword">new</span> MyClass();</span><br><span class="line"><span class="built_in">console</span>.log(o.a);  <span class="comment">// 37</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">C2</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.a = <span class="number">37</span>;</span><br><span class="line">    <span class="keyword">return</span> &#123;<span class="attr">a</span>: <span class="number">38</span>&#125;;</span><br><span class="line">&#125;</span><br><span class="line">o = <span class="keyword">new</span> C2();</span><br><span class="line"><span class="built_in">console</span>.log(o.a);  <span class="comment">// 38</span></span><br></pre></td></tr></table></figure><h3 id="call和apply的this">call和apply的this</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">add</span>(<span class="params">c, d</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span>.a + <span class="keyword">this</span>.b + c + d;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> o = &#123;<span class="attr">a</span>: <span class="number">1</span>, <span class="attr">b</span>: <span class="number">2</span>&#125;;</span><br><span class="line">add.call(o, <span class="number">5</span>, <span class="number">6</span>);  <span class="comment">// 1+3+5+7=16</span></span><br><span class="line">add.apply(o, [<span class="number">10</span>, <span class="number">20</span>]);  <span class="comment">//1+3+10+20=34</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">bar</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="built_in">Object</span>.prototype.toString.call(<span class="keyword">this</span>));</span><br><span class="line">&#125;</span><br><span class="line">bar.call(<span class="number">7</span>); <span class="comment">// [object Number]</span></span><br></pre></td></tr></table></figure><h3 id="band和this">band和this</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//bind是es5后，ie9+使用</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">f</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span>.a;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> g = f.bind(&#123;<span class="attr">a</span>: <span class="string">'test'</span>&#125;);</span><br><span class="line"><span class="built_in">console</span>.log(g());  <span class="comment">// test</span></span><br><span class="line"><span class="keyword">let</span> o = &#123;</span><br><span class="line">    a: <span class="number">37</span>,</span><br><span class="line">    f: f,</span><br><span class="line">    g: g</span><br><span class="line">&#125;;</span><br><span class="line"><span class="built_in">console</span>.log(o.f(), o.g());  <span class="comment">// 37, test</span></span><br></pre></td></tr></table></figure><h2 id="作用域">作用域</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment">// 作用域： 全局作用域，函数作用域，eval作用域</span></span><br><span class="line"><span class="keyword">let</span> a = <span class="number">10</span>;</span><br><span class="line">(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> b = <span class="number">20</span>;</span><br><span class="line">&#125;)();</span><br><span class="line"><span class="built_in">console</span>.log(a);  <span class="comment">// 10</span></span><br><span class="line"><span class="built_in">console</span>.log(b);  <span class="comment">// error</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> item <span class="keyword">in</span> &#123;<span class="attr">a</span>: <span class="number">1</span>, <span class="attr">b</span>: <span class="number">2</span>&#125;) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(item);  <span class="comment">// a, b</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(item); <span class="comment">// b</span></span><br></pre></td></tr></table></figure><h2 id="es3中的执行上下文">ES3中的执行上下文</h2><p>EC = Execution Context 执行上下文<br>变量对象（Variable Object 简写VO）是一个抽象概念，用于存储执行上下文中的变量，函数声明，函数参数 <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params">x</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> b = <span class="number">20</span>;</span><br><span class="line">&#125;</span><br><span class="line">test(<span class="number">30</span>);</span><br></pre></td></tr></table></figure></p><p>对应的上下文 <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">// 整个js环境中的VO</span><br><span class="line">VO(globalContext) = &#123;</span><br><span class="line">    a: 10,</span><br><span class="line">    test: &lt;ref to function&gt;</span><br><span class="line">&#125;;</span><br><span class="line">// 执行test(30)的VO</span><br><span class="line">VO(test functionContext) = &#123;</span><br><span class="line">    x: 30,</span><br><span class="line">    b: 20</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p><p>全局执行上下文 <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">VO(globalContext) === [[global]]</span><br><span class="line">[[global]] = &#123;</span><br><span class="line">    Math : &lt;...&gt;,</span><br><span class="line">    String : &lt;...&gt;,</span><br><span class="line">    isNaN: function() &#123;[Native Code]&#125;,</span><br><span class="line">    ...</span><br><span class="line">    ...</span><br><span class="line">    window: global</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">String(10);  //[[global]].String(10)</span><br><span class="line">window.a = 10;  // [[global]].window.a = 10</span><br><span class="line">this.b = 20;  // [[global]].b = 20</span><br></pre></td></tr></table></figure></p><p>变量初始化阶段 <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1, 函数参数（若没有传入，则其值为undefined）</span></span><br><span class="line"><span class="comment">// 2, 函数声明（若函数声明和函数参数冲突，则函数声明会覆盖掉函数参数）</span></span><br><span class="line"><span class="comment">// 3，变量声明（初始化变量值为undefined，若何函数参数，函数声明冲突，会被忽略掉）</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params">a, b</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> c = <span class="number">10</span>;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">d</span>(<span class="params"></span>) </span>&#123;&#125;</span><br><span class="line">    <span class="keyword">var</span> e = <span class="function"><span class="keyword">function</span> <span class="title">_e</span>(<span class="params"></span>) </span>&#123;&#125;;</span><br><span class="line">    (<span class="function"><span class="keyword">function</span> <span class="title">x</span>(<span class="params"></span>) </span>&#123;&#125;);</span><br><span class="line">    b = <span class="number">20</span>;</span><br><span class="line">&#125;</span><br><span class="line">test(<span class="number">10</span>);</span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">AO(test) = &#123;</span><br><span class="line">    a: 10,</span><br><span class="line">    b: undefined,</span><br><span class="line">    c: undefined,</span><br><span class="line">    d: &lt;ref to func &apos;d&apos;&gt;,</span><br><span class="line">    e: undefined,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>变量初始化案例1 <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">foo</span>(<span class="params">x, y, z</span>) </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">x</span>(<span class="params"></span>) </span>&#123;&#125;</span><br><span class="line">    <span class="built_in">console</span>.log(x);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">foo(<span class="number">100</span>);  <span class="comment">// [Function: x]</span></span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">AO(foo) = &#123;</span><br><span class="line">    //x: 100,</span><br><span class="line">    y: undefined,</span><br><span class="line">    z: undefined,</span><br><span class="line">    x: &lt;ref to func &apos;x&apos;&gt;,  // 函数声明x会覆盖掉参数声明 </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>变量初始化案例2 <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">foo</span>(<span class="params">x, y, z</span>) </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">func</span>(<span class="params"></span>) </span>&#123;&#125;</span><br><span class="line">    <span class="keyword">var</span> func;</span><br><span class="line">    <span class="built_in">console</span>.log(func);</span><br><span class="line">&#125;</span><br><span class="line">foo(<span class="number">100</span>);  <span class="comment">// [Function: func]</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">foo</span>(<span class="params">x, y, z</span>) </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">func</span>(<span class="params"></span>) </span>&#123;&#125;</span><br><span class="line">    <span class="keyword">var</span> func = <span class="number">1</span>;</span><br><span class="line">    <span class="built_in">console</span>.log(func);</span><br><span class="line">&#125;</span><br><span class="line">foo(<span class="number">100</span>);  <span class="comment">// 1  执行阶段会执行func = 1 这个语句</span></span><br></pre></td></tr></table></figure></p><p>代码执行阶段 <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params">a, b</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> c = <span class="number">10</span>;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">d</span>(<span class="params"></span>) </span>&#123;&#125;</span><br><span class="line">    <span class="keyword">var</span> e = <span class="function"><span class="keyword">function</span> <span class="title">_e</span>(<span class="params"></span>) </span>&#123;&#125;;</span><br><span class="line">    (<span class="function"><span class="keyword">function</span> <span class="title">x</span>(<span class="params"></span>) </span>&#123;&#125;)();</span><br><span class="line">    b = <span class="number">20</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">// 初始化阶段</span><br><span class="line">AO(test) = &#123;</span><br><span class="line">    a: 10,</span><br><span class="line">    b: undefined,</span><br><span class="line">    c: undefined,</span><br><span class="line">    d: &lt;ref to func &apos;d&apos;&gt;,</span><br><span class="line">    e: undefined</span><br><span class="line">&#125;;</span><br><span class="line">// 代码执行阶段</span><br><span class="line">AO(test) = &#123;</span><br><span class="line">    a: 10,</span><br><span class="line">    b: 20,</span><br><span class="line">    c: 10,</span><br><span class="line">    d: &lt;reference to FunctionDeclaration &apos;d&apos;&gt;,</span><br><span class="line">    e: function _e()</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>全局执行上下文案例 <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(x);  <span class="comment">// [Function: x]</span></span><br><span class="line"><span class="keyword">var</span> x = <span class="number">10</span>;  <span class="comment">// 初始化阶段x: 冲突，被忽略</span></span><br><span class="line"><span class="built_in">console</span>.log(x);  <span class="comment">// 10</span></span><br><span class="line">x = <span class="number">20</span>;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">x</span>(<span class="params"></span>) </span>&#123;&#125;  <span class="comment">// 初始化阶段x: &lt;ref to func 'x'&gt;</span></span><br><span class="line"><span class="built_in">console</span>.log(x);  <span class="comment">// 20</span></span><br><span class="line"><span class="keyword">if</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> a = <span class="number">1</span>;  <span class="comment">// 初始化阶段a: undefined</span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">var</span> b = <span class="literal">true</span>;  <span class="comment">// 初始化阶段b: undefined</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(a);  <span class="comment">// 1</span></span><br><span class="line"><span class="built_in">console</span>.log(b);  <span class="comment">// undefined</span></span><br></pre></td></tr></table></figure></p><h2 id="继承">继承</h2><h3 id="实现继承的方法">实现继承的方法</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Person</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Student</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Student.prototype = Person.prototype;  <span class="comment">// 错误，会影响被继承类的方法</span></span><br><span class="line">Student.prototype = <span class="keyword">new</span> Person();  <span class="comment">// 错误，传参问题，因为Student是类，并不是实例</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 正确的方法</span></span><br><span class="line">Student.prototype = <span class="built_in">Object</span>.create(Person.prototype);</span><br><span class="line">Student.prototype.constructor = Student;</span><br><span class="line"><span class="comment">// Object.create()是es5的方法，下面是fix方法</span></span><br><span class="line"><span class="keyword">if</span>(!<span class="built_in">Object</span>.create) &#123;</span><br><span class="line">    <span class="built_in">Object</span>.create = <span class="function"><span class="keyword">function</span>(<span class="params">proto</span>) </span>&#123;</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">F</span>(<span class="params"></span>) </span>&#123;&#125;</span><br><span class="line">        F.prototype = proto;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> F;</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>原型的继承方法 <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Person</span>(<span class="params">name, age</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.name = name;</span><br><span class="line">    <span class="keyword">this</span>.age = age;</span><br><span class="line">    <span class="keyword">this</span>.sayNo = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="keyword">this</span>.name + <span class="string">' say no'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Person.prototype.hi = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'Hi, my name is '</span> + <span class="keyword">this</span>.name + <span class="string">',I\'m '</span> + <span class="keyword">this</span>.age + <span class="string">' years old now'</span>);</span><br><span class="line">&#125;;</span><br><span class="line">Person.prototype.LEGS_NUM = <span class="number">2</span>;</span><br><span class="line">Person.prototype.ARMS_NUM = <span class="number">2</span>;</span><br><span class="line">Person.prototype.walk = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>.name + <span class="string">' is walking...'</span>);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(Person);  <span class="comment">// [Function: Person]</span></span><br><span class="line"><span class="built_in">console</span>.log(Person.prototype);  <span class="comment">// Person &#123; hi: [Function], LEGS_NUM: 2, ARMS_NUM: 2, walk: [Function] &#125;</span></span><br><span class="line"><span class="keyword">var</span> Jack = <span class="keyword">new</span> Person();  <span class="comment">// Person构造器没有return对象，所以返回的是this</span></span><br><span class="line">Jack.sayNo();  <span class="comment">// undefined say no</span></span><br><span class="line">Jack.hi();  <span class="comment">// Hi, my name is undefined,I'm undefined years old now</span></span><br><span class="line">Jack.walk();  <span class="comment">// undefined is walking...</span></span><br><span class="line"><span class="built_in">console</span>.log(Jack);  <span class="comment">// Person &#123; name: undefined, age: undefined, sayNo: [Function] &#125;</span></span><br><span class="line"><span class="built_in">console</span>.log(Jack.__proto__);  <span class="comment">// Person &#123; hi: [Function], LEGS_NUM: 2, ARMS_NUM: 2, walk: [Function] &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 以下5行代码是js中对象继承的写法</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Student</span>(<span class="params">name, age, className</span>) </span>&#123;</span><br><span class="line">    Person.call(<span class="keyword">this</span>, name, age);  <span class="comment">// 使用call方法调用父构造器函数</span></span><br><span class="line">    <span class="keyword">this</span>.className = className;</span><br><span class="line">&#125;</span><br><span class="line">Student.prototype = <span class="built_in">Object</span>.create(Person.prototype);   <span class="comment">// 这个如果直接使用Student.prototype = Person.prototype，改变Student对象方法会改变Person对象的方法，因为他们指向的是同一个对象</span></span><br><span class="line">Student.prototype.constructor = Student;</span><br><span class="line"></span><br><span class="line">Student.prototype.hi = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'Hi, my name is '</span> + <span class="keyword">this</span>.name + <span class="string">', I\'m'</span> + <span class="keyword">this</span>.age + <span class="string">' years old now, and from '</span> + <span class="keyword">this</span>.className + <span class="string">'.'</span>);</span><br><span class="line">&#125;;</span><br><span class="line">Student.prototype.learn = <span class="function"><span class="keyword">function</span>(<span class="params">subject</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>.name + <span class="string">' is learning '</span> + subject + <span class="string">' at '</span> + <span class="keyword">this</span>.className + <span class="string">'.'</span>);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> Lussi = <span class="keyword">new</span> Student(<span class="string">'Lussi'</span>, <span class="number">27</span>, <span class="string">'Class Tree'</span>);</span><br><span class="line">Lussi.sayNo();  <span class="comment">// Lussi say no</span></span><br><span class="line">Lussi.hi();  <span class="comment">// Hi, my name is Lussi, I'm27 years old now, and from Class Tree.</span></span><br><span class="line">Lussi.walk();  <span class="comment">// Lussi is walking...</span></span><br><span class="line">Lussi.learn(<span class="string">'math'</span>);  <span class="comment">// Lussi is learning math at Class Tree.</span></span><br><span class="line"><span class="built_in">console</span>.log(Lussi);  <span class="comment">// Student &#123;name: 'Lussi', age: 27, sayNo: [Function], className: 'Class Tree' &#125;</span></span><br><span class="line"><span class="built_in">console</span>.log(Lussi.__proto__);  <span class="comment">// Student &#123;constructor: [Function: Student], hi: [Function], learn: [Function] &#125;</span></span><br><span class="line"><span class="built_in">console</span>.log(Lussi.__proto__.__proto__);  <span class="comment">// Person &#123; hi: [Function], LEGS_NUM: 2, ARMS_NUM: 2, walk: [Function] &#125;</span></span><br><span class="line"><span class="built_in">console</span>.log(Lussi.__proto__.__proto__.__proto__);  <span class="comment">// &#123;&#125;</span></span><br><span class="line"><span class="built_in">console</span>.log(Lussi.__proto__.__proto__.__proto__.__proto__);  <span class="comment">// null  </span></span><br><span class="line"><span class="comment">// 改变prototype</span></span><br><span class="line">Student.prototype.x = <span class="number">101</span>;  <span class="comment">// 会影响已经创建实例的属性</span></span><br><span class="line"><span class="built_in">console</span>.log(Jack.x);  <span class="comment">// undefined</span></span><br><span class="line"><span class="built_in">console</span>.log(Lussi.x);  <span class="comment">// 101</span></span><br><span class="line"></span><br><span class="line">Student.prototype = &#123;<span class="attr">y</span>: <span class="number">2</span>&#125;;  <span class="comment">// 不会影响已经创建实例的属性，但会影响新创建的实例，并且重新修改prototype.y属性也不会改变</span></span><br><span class="line"><span class="built_in">console</span>.log(Jack.y); <span class="comment">// undefined</span></span><br><span class="line"><span class="built_in">console</span>.log(Lussi.y);  <span class="comment">// undefined</span></span><br><span class="line"><span class="keyword">var</span> Lilei = <span class="keyword">new</span> Student(<span class="string">'Lilei'</span>, <span class="number">24</span>, <span class="string">'Class three'</span>);</span><br><span class="line"><span class="built_in">console</span>.log(Lilei.x);  <span class="comment">// undefined</span></span><br><span class="line"><span class="built_in">console</span>.log(Lilei.y);  <span class="comment">// 2</span></span><br><span class="line">Student.prototype.y = <span class="number">100</span>;</span><br><span class="line"><span class="built_in">console</span>.log(Lilei.y);  <span class="comment">// 100</span></span><br><span class="line"><span class="built_in">console</span>.log(Lussi.y);  <span class="comment">// undefined</span></span><br><span class="line">Student.prototype.z = <span class="number">30</span>;</span><br><span class="line"><span class="built_in">console</span>.log(Lilei.z);  <span class="comment">// 30</span></span><br><span class="line"><span class="built_in">console</span>.log(Lussi.z);  <span class="comment">// undefined</span></span><br><span class="line">Person.prototype.z = <span class="number">40</span>;</span><br><span class="line"><span class="built_in">console</span>.log(Lilei.z);  <span class="comment">// 30</span></span><br><span class="line"><span class="built_in">console</span>.log(Lussi.z);  <span class="comment">// 40</span></span><br><span class="line"><span class="built_in">console</span>.log(Jack.z);  <span class="comment">// 40</span></span><br></pre></td></tr></table></figure></p><h3 id="模拟重载">模拟重载</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Person</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> args = <span class="built_in">arguments</span>;</span><br><span class="line">    <span class="comment">// 判断第一个传入的是不是对象，因为args[null]也返回object，所有需要判断是否为null</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">typeof</span> args[<span class="number">0</span>] === <span class="string">'object'</span> &amp;&amp; args[<span class="number">0</span>]) &#123;</span><br><span class="line">        <span class="keyword">if</span>(args[<span class="number">0</span>].name) &#123;</span><br><span class="line">            <span class="keyword">this</span>.name = args[<span class="number">0</span>].name;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(args[<span class="number">0</span>].age) &#123;</span><br><span class="line">            <span class="keyword">this</span>.age = args[<span class="number">0</span>].age;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">if</span>(args[<span class="number">0</span>]) &#123;</span><br><span class="line">            <span class="keyword">this</span>.name = args[<span class="number">0</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(args[<span class="number">1</span>]) &#123;</span><br><span class="line">            <span class="keyword">this</span>.age = args[<span class="number">1</span>];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">Person.prototype.toString = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'name='</span> + <span class="keyword">this</span>.name + <span class="string">', age='</span> + <span class="keyword">this</span>.age);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> LiLei = <span class="keyword">new</span> Person(<span class="string">'LiLei'</span>, <span class="number">23</span>);</span><br><span class="line"><span class="keyword">let</span> Hanmm = <span class="keyword">new</span> Person(&#123;<span class="attr">name</span>: <span class="string">'Hanmm'</span>, <span class="attr">age</span>: <span class="number">21</span>&#125;);</span><br><span class="line">LiLei.toString();  <span class="comment">// name=LiLei, age=23</span></span><br><span class="line">Hanmm.toString();  <span class="comment">// name=Hanmm, age=21</span></span><br></pre></td></tr></table></figure><h3 id="调用子类方法">调用子类方法</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Person</span>(<span class="params">name</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.name = name;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Student</span>(<span class="params">name, className</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.className = className;</span><br><span class="line">    Person.call(<span class="keyword">this</span>, name);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Person.prototype.init = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'Person.init'</span>);</span><br><span class="line">&#125;;</span><br><span class="line">Student.prototype.init = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'Student.init'</span>);</span><br><span class="line">    Person.prototype.init.apply(<span class="keyword">this</span>, <span class="built_in">arguments</span>);</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">let</span> LiLei = <span class="keyword">new</span> Student(<span class="string">'LiLei'</span>, <span class="string">'Class four'</span>);</span><br><span class="line"><span class="built_in">console</span>.log(LiLei);  <span class="comment">// Student &#123; className: 'Class four', name: 'LiLei' &#125;</span></span><br><span class="line">LiLei.init();  <span class="comment">// Student.init  Person.init</span></span><br></pre></td></tr></table></figure><h3 id="实现链式调用">实现链式调用</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">ClassManager</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'ClassManager'</span>);</span><br><span class="line">    <span class="keyword">this</span>.name = <span class="string">'ClassName'</span>;</span><br><span class="line">&#125;</span><br><span class="line">ClassManager.prototype.addClass = <span class="function"><span class="keyword">function</span>(<span class="params">str</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'class: '</span>  + str + <span class="string">' added.'</span>);</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span>;  <span class="comment">// this始终指向ClassManger类的实例</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> manager = <span class="keyword">new</span> ClassManager();</span><br><span class="line">manager.addClass(<span class="string">'A'</span>).addClass(<span class="string">'B'</span>).addClass(<span class="string">'C'</span>);  <span class="comment">//class: A added. ClassManager &#123; name: 'ClassName' &#125; class: B added. ClassManager &#123; name: 'ClassName' &#125; class: C added. ClassManager &#123; name: 'ClassName' &#125;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Javascript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>css兼容性汇总</title>
      <link href="/2016/11/10/Css%E5%85%BC%E5%AE%B9%E6%80%A7%E6%B1%87%E6%80%BB/"/>
      <url>/2016/11/10/Css%E5%85%BC%E5%AE%B9%E6%80%A7%E6%B1%87%E6%80%BB/</url>
      
        <content type="html"><![CDATA[<h3 id="ie6ie7中overflowhidden失效问题">ie6,ie7中overflow:hidden失效问题</h3><blockquote><p>在父元素中使用position:relative;可以hack iframe自适应高度</p></blockquote><h3 id="不建议使用iframe">不建议使用iframe</h3><p>在css里面设置一个min-height <figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.class</span> &#123;</span><br><span class="line"><span class="attribute">min-height</span>: <span class="number">100px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>主页面嵌入如下js代码 <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">setIframeHeight</span>(<span class="params">iframe</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (iframe) &#123;</span><br><span class="line">        <span class="keyword">var</span> iframeWin = iframe.contentWindow || iframe.contentDocument.parentWindow;</span><br><span class="line">        <span class="keyword">if</span> (iframeWin.document.body) &#123;</span><br><span class="line">            iframe.height = iframeWin.document.documentElement.scrollHeight || iframeWin.document.body.scrollHeight;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    setIframeHeight(<span class="built_in">document</span>.getElementById(<span class="string">'external-frame'</span>));</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p><p>iframe标签里 <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">"backtop.html"</span> <span class="attr">frameborder</span>=<span class="string">"0"</span> <span class="attr">scrolling</span>=<span class="string">"no"</span> <span class="attr">id</span>=<span class="string">"external-frame"</span> <span class="attr">onload</span>=<span class="string">"setIframeHeight(this)"</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>css代码 <figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">ul</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: block;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">text-indent</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">top</span>: -<span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">0</span>;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>js代码 <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> defaultTopPosition = $(<span class="string">'#indexCellcate'</span>).css(<span class="string">'top'</span>);</span><br></pre></td></tr></table></figure></p><p>浏览器差异 <figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ie7，ie8 返回-205.422px  </span><br><span class="line">现代chrome，firefox -205.422px  </span><br><span class="line">但是ie9及以上会返回0px</span><br><span class="line">如果将css中的top设置为-205.422px，则无差异。</span><br></pre></td></tr></table></figure></p><blockquote><p>但响应式布局要求百分百设置,我的解决思路: 获取对应元素的高度来替代top值 <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> defaultTopPosition = cellcate.children(<span class="string">'li'</span>).height();</span><br><span class="line">defaultTopPosition = -<span class="built_in">parseInt</span>(defaultTopPosition);</span><br></pre></td></tr></table></figure></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Css </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>windowsServer服务器基础设置</title>
      <link href="/2016/11/09/WindowsServer%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%9F%BA%E7%A1%80%E8%AE%BE%E7%BD%AE/"/>
      <url>/2016/11/09/WindowsServer%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%9F%BA%E7%A1%80%E8%AE%BE%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h2 id="远程连接">远程连接</h2><h3 id="禁止administrators组远程连接">禁止administrators组远程连接</h3><ul><li>运行gpedit.msc<br></li><li>计算机配置-&gt;windows设置-&gt;安全设置-&gt;本地策略-&gt;用户权限分配-&gt;通过终端服务允许登录<br></li><li>将Administrators账号删除掉,保留Remote Desktop Users</li></ul><h3 id="创建新的用户">创建新的用户</h3><p>本地用户和组-&gt;用户右键-&gt;新用户-&gt;输入用户名，设置密码 添加Administrators组，Remote Desktop Users组</p><h3 id="限制登陆次数">限制登陆次数</h3><p>计算机配置-&gt;windows设置-&gt;安全设置-&gt;账户策略-&gt;账户锁定策略”，“账户锁定阈值”设置为 20后，系统会自动设置锁定时间和计数器</p><p><font color="#d44375">超过2个远程连接处理办法及规避方法</font> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mstsc /console /v:10.10.10.10:3389</span><br></pre></td></tr></table></figure></p><p>开始－管理工具－终端服务配置－服务器配置－限制每个用户使用一个会话</p><h2 id="防火墙">防火墙</h2><h3 id="开启防火墙">开启防火墙</h3><ul><li>控制面板&gt;防火墙&gt;开启<br></li><li>例外里勾选远程桌面,保证服务器可以正常连接<br></li><li>其他情况就在添加端口里添加即可</li></ul><h2 id="ftp">FTP</h2><h3 id="开启ftp">开启ftp</h3><ul><li>在控制面板的添加/删除程序——Windows组件向导——应用程序服务器——Internet信息服务(IIS)中选中“文件传输协议(FTP)服务”。<br></li><li>需要文件夹AMD64 设置一个ftp用户ftpuser<br></li><li>在ftp设置中关掉允许匿名连接<br></li><li>主目录中本地路径为E:\FTP<br></li><li>不要勾选写入权限<br></li><li>默认ftp站点新建虚拟目录ftpuser 路径E:\FTP\ftpuser<br></li><li>在防火墙上开启20，21端口 在ftp客户端选择port主动模式，主动模式不需要服务器开启其他端口</li></ul>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Sublime入门基础</title>
      <link href="/2016/11/09/Sublime%E5%85%A5%E9%97%A8%E5%9F%BA%E7%A1%80/"/>
      <url>/2016/11/09/Sublime%E5%85%A5%E9%97%A8%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<h2 id="官方网站">官方网站</h2><p><a href="http://www.sublimetext.com/3" target="_blank" rel="noopener">http://www.sublimetext.com/3</a></p><h2 id="安装">安装</h2><h3 id="ubuntu下载">Ubuntu下载</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo add-apt-repository ppa:webupd8team/sublime-text-3</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo apt-get update</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo apt-get install sublime-text-installer</span></span><br></pre></td></tr></table></figure><h3 id="插件下载地址">插件下载地址</h3><p><a href="https://packagecontrol.io/" target="_blank" rel="noopener">https://packagecontrol.io/</a></p><h3 id="注册码">注册码</h3><blockquote><p>请支持正版</p></blockquote><h2 id="设置">设置</h2><h3 id="安装package-control">安装Package Control</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">import urllib.request,os; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); open(os.path.join(ipp, pf), 'wb').write(urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ','%20')).read())</span><br></pre></td></tr></table></figure><h3 id="设置空格缩进">设置空格缩进</h3><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;    </span><br><span class="line">    <span class="attr">"tab_size"</span>: <span class="number">4</span>,    </span><br><span class="line">    <span class="attr">"translate_tabs_to_spaces"</span>: <span class="literal">true</span> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="设置行间距">设置行间距</h3><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"line_padding_bottom"</span>: <span class="number">3</span>, </span><br><span class="line">    <span class="attr">"line_padding_top"</span>: <span class="number">3</span>,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="插件安装">插件安装</h2><p><strong>Emmet(懂的)</strong><br><strong>ConvertToUtf8(编码转换)</strong><br><strong>Sublime​Linter(代码检查工具，需要配合各语言插件包检查)</strong><br><strong>SideBarEnhancements（侧边栏右键增强）</strong><br><strong>Bracket​Highlighter（显示标签块？？）</strong><br><strong>SublimeCodeIntel(跳转到自定义函数)</strong> <strong>HTML5(html5的snippets)</strong><br><strong>Alignment(自动对齐插件)</strong><br><strong>SFTP(ftp上传)需要配置对应的ftp路径等信息</strong> <strong>git</strong> <strong>jquery(jquery snippets)</strong> <strong>SaSS(可以支持sass)</strong> <strong>DocBlockr（块状注释）</strong></p><h2 id="ubuntu安装中文输入法">ubuntu安装中文输入法</h2><p><strong>安装</strong> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash">  git <span class="built_in">clone</span> https://github.com/lyfeyaj/sublime-text-imfix.git</span></span><br></pre></td></tr></table></figure></p><p><strong>复制文件</strong> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> ~/sublime-text-imfix</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo cp ./lib/libsublime-imfix.so /opt/sublime_text/</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo cp ./src/subl /usr/bin/</span></span><br></pre></td></tr></table></figure></p><p><strong>终端输入</strong> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">LD_PRELOAD=./libsublime-imfix.so subl</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> 办公 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> IDE </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git入门基础</title>
      <link href="/2016/11/09/Git%E5%85%A5%E9%97%A8%E5%9F%BA%E7%A1%80/"/>
      <url>/2016/11/09/Git%E5%85%A5%E9%97%A8%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<h2 id="配置">配置</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 设置代理</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git config --global http.proxy <span class="string">'socks5://127.0.0.1:1080'</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git config --global https.proxy <span class="string">'socks5://127.0.0.1:1080'</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看配置项</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git config --list</span></span><br></pre></td></tr></table></figure><h2 id="使用">使用</h2><h3 id="初始化">初始化</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git init</span><br></pre></td></tr></table></figure><h3 id="创建分支">创建分支</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> git branch v2.0</span></span><br><span class="line">E:\HKMAIN (master)</span><br><span class="line"><span class="meta">$</span><span class="bash"> git branch Vmysql</span></span><br><span class="line">E:\HKMAIN (master)</span><br><span class="line"><span class="meta">$</span><span class="bash"> git branch</span></span><br><span class="line">Vmysql</span><br><span class="line">* master</span><br><span class="line">v1.2</span><br><span class="line"></span><br><span class="line">E:\HKMAIN (master)</span><br><span class="line"><span class="meta">$</span><span class="bash"> git checkout Vmysql</span></span><br><span class="line">Switched to branch 'Vmysql'</span><br><span class="line"></span><br><span class="line">E:\HKMAIN (Vmysql)</span><br><span class="line"><span class="meta">$</span><span class="bash"></span></span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 或者直接使用git checkout -b v3.0</span></span><br><span class="line">E:\HKMAIN (Vmysql)</span><br><span class="line"><span class="meta">$</span><span class="bash"> git checkout -b Vsqlserver</span></span><br><span class="line">Switched to a new branch 'Vsqlserver'</span><br><span class="line">    </span><br><span class="line">E:\HKMAIN (Vsqlserver)</span><br><span class="line"><span class="meta">$</span><span class="bash"> git branch</span></span><br><span class="line">  Vmysql</span><br><span class="line">* Vsqlserver</span><br><span class="line">  master</span><br><span class="line">  v1.2</span><br></pre></td></tr></table></figure><h3 id="查看分支">查看分支</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">E:\HKMAIN (master)</span><br><span class="line"><span class="meta">$</span><span class="bash"> git branch</span></span><br><span class="line">* master</span><br><span class="line">  v1.1</span><br><span class="line">  v1.2</span><br><span class="line"><span class="meta">$</span><span class="bash"> git branch -v</span></span><br><span class="line">* master bf0d2bf 蛋白模板修改USAGE:Reconstitute in sterile ddH2O.</span><br><span class="line">  v1.1   b48a782 试剂盒现货列表添加样本信息一栏</span><br><span class="line">  v1.2   acbf4f1 c1.2</span><br></pre></td></tr></table></figure><h3 id="删除分支">删除分支</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 查看未合并的分支</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git branch --no-merged</span></span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 删除分支</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git branch -d v1.1</span></span><br><span class="line">```    </span><br><span class="line"></span><br><span class="line">```shell</span><br><span class="line"><span class="meta">#</span><span class="bash"> 如果是未合并的分支，使用大写的-D</span></span><br><span class="line">E:\HKMAIN (master)</span><br><span class="line"><span class="meta">$</span><span class="bash"> git branch -d v1.1</span></span><br><span class="line">Deleted branch v1.1 (was b48a782).</span><br><span class="line">E:\HKMAIN (master)</span><br><span class="line"><span class="meta">$</span><span class="bash"> git branch -v</span></span><br><span class="line">* master bf0d2bf 蛋白模板修改USAGE:Reconstitute in sterile ddH2O.</span><br><span class="line">  v1.2   acbf4f1 c1.2</span><br></pre></td></tr></table></figure><h3 id="远程仓库">远程仓库</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> git查看远程仓库</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git remote -v</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> git添加远程仓库</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git remote add xxx git@gitlab.xxx.com:xxx/xxx</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 删除远程分值</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git remote rm xxx</span></span><br></pre></td></tr></table></figure><h3 id="暂存">暂存</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 使用git stash命令先把当前进度保存起来，然后切换到另一个分支去修改bug，修改完提交后，再切回dev分支，使用git stash pop来恢复之前的进度继续开发新功能。</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 保存当前进度</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git stash</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看现有的存储</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git stash list</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 恢复最新的进度到工作区</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git stash pop</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git stash save your-file-name</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Excel公式入门基础</title>
      <link href="/2016/11/09/Excel%E5%85%AC%E5%BC%8F%E5%85%A5%E9%97%A8%E5%9F%BA%E7%A1%80/"/>
      <url>/2016/11/09/Excel%E5%85%AC%E5%BC%8F%E5%85%A5%E9%97%A8%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<h3 id="返回最后一个值倒数第二个值">返回最后一个值、倒数第二个值</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">=LOOKUP(1,0/(A2:J2&lt;&gt;&quot;&quot;),A2:J2)</span><br><span class="line">=LOOKUP(1,0/(B2:J2&lt;&gt;&quot;&quot;),A2:J2)</span><br></pre></td></tr></table></figure><h3 id="返回时间差">返回时间差</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">=DATEDIF(--TEXT(F2,&quot;00-00-00&quot;),TODAY(),&quot;D&quot;)</span><br></pre></td></tr></table></figure><h3 id="vlookup-逆向检索">VLOOKUP 逆向检索</h3><p><a href="http://zhidao.baidu.com/link?url=-1b12Kx36WQ4vf05DIDhZmxCOtvC6Zdhc62kve1QRoF-hV_Hbl3cZDuBZOYgGRjEo513fDk9-UL6gfUnMI9Jna" target="_blank" rel="noopener">参考</a> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">=VLOOKUP(C2,IF(&#123;1,0&#125;,Sheet2!$D$2:$D$5,Sheet2!$A$2:$A$5),2,FALSE)</span><br><span class="line">=INDEX(Sheet2!A:A,MATCH(Sheet1!C2,Sheet2!D:D,0))</span><br></pre></td></tr></table></figure></p><h3 id="countifs-多条件求和">COUNTIFS 多条件求和</h3><p><img src="http://7xq3ry.com1.z0.glb.clouddn.com/20160304142206.png" alt="示例"> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">统计每个部门人数</span><br><span class="line">&#123;=SUM(IFERROR(1/(COUNTIFS(Sheet2!L$2:Sheet2!L$250,B5,Sheet2!N$2:Sheet2!N$250,Sheet2!N$2:Sheet2!N$250)*(Sheet2!L$2:Sheet2!L$250=B5)),))&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> 办公 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Excel </tag>
            
            <tag> Office </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Wireshark抓包基础</title>
      <link href="/2016/11/09/Wireshark%E6%8A%93%E5%8C%85%E5%9F%BA%E7%A1%80/"/>
      <url>/2016/11/09/Wireshark%E6%8A%93%E5%8C%85%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<h3 id="nmap安装">Nmap安装</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo apt-get install nmap</span></span><br></pre></td></tr></table></figure><h3 id="zenmap图形gui安装">Zenmap图形GUI安装</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo apt-get install Zenmap</span></span><br></pre></td></tr></table></figure><h3 id="扫描主机">扫描主机</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> nmap -T4 -A -v 192.168.1.3/16</span></span><br></pre></td></tr></table></figure><p>其中-A选项用于使用进攻性（Aggressive）方式扫描；-T4指定扫描过程使用的时序（Timing），总有6个级别（0-5），级别越高，扫描速度越快，但也容易被防火墙或IDS检测并屏蔽掉，在网络通讯状况良好的情况推荐使用T4；-v表示显示冗余（verbosity）信息，在扫描过程中显示扫描的细节，从而让用户了解当前的扫描状态。</p><ul><li>/32 表示扫描 192.168.1.3<br></li><li>/24 表示扫描 192.168.1.0-192.168.1.255<br></li><li>/16 表示扫描 192.168.0.0-192.168.255.255<br></li><li>/8<br></li><li>/1</li></ul><p><a href="https://zh.wikipedia.org/wiki/%E6%97%A0%E7%B1%BB%E5%88%AB%E5%9F%9F%E9%97%B4%E8%B7%AF%E7%94%B1" target="_blank" rel="noopener">参考cird</a></p><h3 id="nmap所识别的6个端口状态">Nmap所识别的6个端口状态</h3><p><font color="#2bbc8a">open(开放的)</font></p><p>应用程序正在该端口接收TCP 连接或者UDP报文。发现这一点常常是端口扫描 的主要目标。安全意识强的人们知道每个开放的端口 都是攻击的入口。攻击者或者入侵测试者想要发现开放的端口。 而管理员则试图关闭它们或者用防火墙保护它们以免妨碍了合法用户。 非安全扫描可能对开放的端口也感兴趣，因为它们显示了网络上那些服务可供使用。</p><p><font color="#2bbc8a">closed(关闭的)</font></p><p>关闭的端口对于Nmap也是可访问的(它接受Nmap的探测报文并作出响应)， 但没有应用程序在其上监听。 它们可以显示该IP地址上(主机发现，或者ping扫描)的主机正在运行up 也对部分操作系统探测有所帮助。 因为关闭的关口是可访问的，也许过会儿值得再扫描一下，可能一些又开放了。 系统管理员可能会考虑用防火墙封锁这样的端口。 那样他们就会被显示为被过滤的状态，下面讨论。</p><p><font color="#2bbc8a">filtered(被过滤的)</font></p><p>由于包过滤阻止探测报文到达端口， Nmap无法确定该端口是否开放。过滤可能来自专业的防火墙设备，路由器规则 或者主机上的软件防火墙。这样的端口让攻击者感觉很挫折，因为它们几乎不提供 任何信息。有时候它们响应ICMP错误消息如类型3代码13 (无法到达目标: 通信被管理员禁止)，但更普遍的是过滤器只是丢弃探测帧， 不做任何响应。 这迫使Nmap重试若干次以访万一探测包是由于网络阻塞丢弃的。 这使得扫描速度明显变慢。</p><p><font color="#2bbc8a">unfiltered(未被过滤的)</font></p><p>未被过滤状态意味着端口可访问，但Nmap不能确定它是开放还是关闭。 只有用于映射防火墙规则集的ACK扫描才会把端口分类到这种状态。 用其它类型的扫描如窗口扫描，SYN扫描，或者FIN扫描来扫描未被过滤的端口可以帮助确定 端口是否开放。</p><p><font color="#2bbc8a">open|filtered(开放或者被过滤的)</font></p><p>当无法确定端口是开放还是被过滤的，Nmap就把该端口划分成 这种状态。开放的端口不响应就是一个例子。没有响应也可能意味着报文过滤器丢弃 了探测报文或者它引发的任何响应。因此Nmap无法确定该端口是开放的还是被过滤的。 UDP，IP协议， FIN，Null，和Xmas扫描可能把端口归入此类。</p><p><font color="#2bbc8a">closed|filtered(关闭或者被过滤的)</font></p><p>该状态用于Nmap不能确定端口是关闭的还是被过滤的。 它只可能出现在IPID Idle扫描中。</p><h3 id="监视指定网络接口的数据包tcpdump">监视指定网络接口的数据包tcpdump</h3><p>如果不指定网卡，默认tcpdump只会监视第一个网络接口，一般是eth0， <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> tcpdump -i eth0</span></span><br></pre></td></tr></table></figure></p><h3 id="路由追踪traceroute">路由追踪traceroute</h3><p>linux <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo apt-get install traceroute  </span></span><br><span class="line"><span class="meta">$</span><span class="bash"> traceroute hostname</span></span><br></pre></td></tr></table></figure></p><p>window <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tracert hostname</span><br></pre></td></tr></table></figure></p><h3 id="ubuntu开启和关闭混杂模式">ubuntu开启和关闭混杂模式</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ifconfig eth0 promisc # 设置eth0为混杂模式。 </span><br><span class="line">ifconfig eth0 -promisc # 取消它的混杂模式</span><br></pre></td></tr></table></figure><p>ifconfig参数详解</p><ul><li><font color="#2bbc8a">eth0/eth1</font> 分别表示第一块网卡和第二块网卡；</li><li><font color="#2bbc8a">lo</font> 表示回环测试接口，注意，这个虚拟的interface一定要存在！</li><li><font color="#2bbc8a">usb0</font> 表示USB接口的网卡；</li><li><font color="#2bbc8a">Linkencap</font> 表示位于OSI物理层的名称，即连接类型Ethernet（以太网）</li><li><font color="#2bbc8a">HWaddr</font> 表示网卡的硬件地址，即MAC地址</li><li><font color="#2bbc8a">inetaddr</font> 表示网卡IP；</li><li><font color="#2bbc8a">Bcast</font> 表示广播(broadcast ) 的地址；</li><li><font color="#2bbc8a">Mask</font> 表示子网掩码；</li><li><font color="#2bbc8a">UP</font> 表示网卡开启状态；</li><li><font color="#2bbc8a">BROADCAST</font> 表示支持广播；</li><li><font color="#2bbc8a">MULTICAST</font> 表示网卡混杂模式；</li><li><font color="#2bbc8a">RUNNING</font> 表示网卡的网线被接上；</li><li><font color="#2bbc8a">MULTICAST</font> 表示支持组播；</li><li><font color="#2bbc8a">MTU</font> 表示MaximumTrasmission Unit 最大传输单元(字节)，即此接口一次所能传输的最大封包；</li><li><font color="#2bbc8a">Metric</font> 表示路由度量值，缺省值是0；</li><li><font color="#2bbc8a">RX</font> 表示网络由激活到目前为止接收的数据包；</li><li><font color="#2bbc8a">TX</font> 表示网络由激活到目前为止发送的数据包；</li><li><font color="#2bbc8a">Collisions</font> 表示网络信号冲突的情况；</li><li><font color="#2bbc8a">Txqueuelen</font> 表示传输缓冲区长度大小；</li><li><font color="#2bbc8a">Memory</font> 表示占用内存范围。</li></ul><h3 id="安装wireshark">安装wireshark</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo apt-get install wireshark</span></span><br></pre></td></tr></table></figure><p><strong>wireshark捕获过滤器</strong></p><ul><li>src 192.168.0.10 &amp;&amp; port 80 源地址192.168.0.10和端口为80相关<br></li><li>host 192.160.0.1 和主机192.168.0.1相关<br></li><li>src host 192.168.0.1<br></li><li>port 8080<br></li><li>!port 8080<br></li><li>dst port 80<br></li><li>icmp<br></li><li>!ip6</li></ul><p><strong>wireshark显示过滤器</strong></p><ul><li>!tcp<br></li><li>ip.addr == 192.168.0.1<br></li><li>frame.len &lt;= 128<br></li><li>tcp.port == 23 || tcp.port == 21<br></li><li>smtp || pop || imap<br></li><li>ip.addr == 192.168.0.1 or ip.addr == 192.168.0.2</li></ul>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Wireshark </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Jetbrains使用配置</title>
      <link href="/2016/11/09/Jetbrains%E4%BD%BF%E7%94%A8%E9%85%8D%E7%BD%AE/"/>
      <url>/2016/11/09/Jetbrains%E4%BD%BF%E7%94%A8%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h2 id="安装">安装</h2><h3 id="ubuntu安装">Ubuntu安装</h3><p>下载并压缩到/opt/目录下,并在/usr/share/appliactions/下创建快捷方式的文件，命名为phpstorm.desktop,编辑如下代码，保存 <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">[Desktop Entry]</span><br><span class="line">Categories=Development;</span><br><span class="line">Comment[zh_CN]=</span><br><span class="line">Comment=</span><br><span class="line">Exec=/opt/phpstorm/bin/phpstorm.sh</span><br><span class="line">GenericName[zh_CN]=IDE</span><br><span class="line">GenericName=IDE</span><br><span class="line">Icon=/opt/phpstorm/bin/webide.png</span><br><span class="line">Name[zh_CN]=phpStorm</span><br><span class="line">Name=phpStorm　　　　　　　</span><br><span class="line">Path=</span><br><span class="line">StartupNotify=true</span><br><span class="line">Terminal=false</span><br><span class="line">Type=Application</span><br><span class="line">X-DBUS-ServiceName=</span><br><span class="line">X-DBUS-StartupType=</span><br><span class="line">X-KDE-SubstituteUID=false</span><br><span class="line">X-KDE-Username=Learn Programming</span><br></pre></td></tr></table></figure></p><h3 id="输入法问题">输入法问题</h3><p>升级到ubuntu16.04后，输入无法使用<br>去安装目录bin文件夹下找到启动idea.sh,用编辑器打开，添加 <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">XMODIFIERS=&quot;@im=fcitx&quot;</span><br><span class="line">export XMODIFIERS</span><br></pre></td></tr></table></figure></p><p>在 <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># ---------------------------------------------------------------------</span><br><span class="line"># Run the IDE.</span><br><span class="line"># ---------------------------------------------------------------------</span><br></pre></td></tr></table></figure></p><p>上面即可！</p><h2 id="license">License</h2><blockquote><p>请支持正版</p></blockquote><h2 id="界面样式">界面样式</h2><p><a href="https://github.com/jkaving/intellij-colors-solarized" target="_blank" rel="noopener">theme</a><br><a href="https://github.com/ChrisRM/material-theme-jetbrains" target="_blank" rel="noopener">背景修改，含theme</a></p><h3 id="界面配置">界面配置</h3><p>显示行号<br>Editor-&gt;General-&gt;Appearance-&gt;Show line number<br>关闭自动保存<br>Appearance&amp;Behavior-&gt;System settings-&gt;save files on frame deactivation 关闭<br>Editor-&gt;General-&gt;Editor tabs-&gt;Mark modified tabs with asterisk 勾选</p><h3 id="theme安装">theme安装</h3><p>安装模板下载http://phpstorm-themes.com/<br>ubuntu安装地址~/.pycharm/config/colors/</p><h2 id="快捷键">快捷键</h2><ul><li><em>Ctrl+/</em> 或 <em>Ctrl+Shift+/</em> 注释（// 或者/<em>…</em>/ ）<br></li><li><em>Shift+F6</em> 重构-重命名<br></li><li><em>Ctrl+X</em> 删除行<br></li><li><em>Ctrl+D</em> 复制行<br></li><li><em>Ctrl+G</em> 查找行<br></li><li><em>Ctrl+Shift+Up/Down</em> 代码向上/下移动。<br></li><li><em>F2</em> 或 <em>Shift+F2</em> 高亮错误或警告快速定位<br></li><li><em>Tab</em> 生成代码<br></li><li>选中文本，按<em>Ctrl+Shift+F7</em>高亮显示所有该文本，按Esc高亮消失。(因为这个功能我就可以发放心的放弃sublime了)<br></li><li><em>Ctrl+B</em>或<em>Ctrl+</em>鼠标左键单击 快速打开光标处的类或方法，（NB的功能）<br></li><li><em>Ctrl+Alt+B</em> Go to implementation(s) 跳转方法实现处<br></li><li><em>Ctrl+Shift+I</em> Open quick definition lookup 打开定义快速查找<br></li><li><em>Alt+Up/Down</em> Go to previous/next method 跳转到上一个/下一个方法<br></li><li><em>Ctrl+E</em> 最近打开的文件<br></li><li><em>Alt+F1</em> 查找代码所在位置<br></li><li><em>Ctrl+Alt+L</em> 格式化代码<br></li><li><em>Ctrl+R</em> 替换文本<br></li><li><em>Ctrl+F</em> 查找文本<br></li><li><em>Ctrl+P</em> 方法参数提示<br></li><li><em>F3</em> 查找下一个<br></li><li><em>Shift+F3</em> 查找上一个<br></li><li><em>Alt+Shift+F</em> 将当前文件加入收藏夹<br></li><li><em>Ctrl+Alt+s</em> 打开配置窗口<br></li><li><em>Ctrl+Shift+N</em> 通过文件名快速查找工程内的文件（必记）<br></li><li><em>Ctrl+Shift+Alt+N</em> 通过一个字符快速查找位置（必记）<br></li><li><em>Shift+Enter</em> 重新开始一行（无论光标在哪个位置）<br></li><li><em>Ctrl+Alt+T</em> with…（if, else, try, catch, for, etc）用 * 来围绕选中的代码行，（ * 包括 if 、 while 、 try catch 等）<br></li><li><em>Ctrl+Shift+U</em> Toggle case for word at caret or selected block 光标所在位置大小写<br></li><li><em>Ctrl+Delete</em> Delete to word end 删除文字结束<br></li><li><em>Ctrl+Backspace</em> Delete to word start 删除文字开始<br></li><li><em>Ctrl+E</em> Recent files popup 弹出最近打开的文件<br></li><li><em>F11</em> Toggle bookmark 切换标记，我觉得叫书签更好，就是sublime text 的F2<br></li><li><em>Ctrl</em> + Shift + F12 Toggle maximizing editor 切换最大化编辑器<br></li><li><em>Alt+Shift+F</em> Add to Favorites 添至收藏夹</li></ul>]]></content>
      
      
      <categories>
          
          <category> 办公 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> IDE </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Apache入门基础</title>
      <link href="/2016/11/09/Apache%E5%85%A5%E9%97%A8%E5%9F%BA%E7%A1%80/"/>
      <url>/2016/11/09/Apache%E5%85%A5%E9%97%A8%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<h2 id="apache配置">Apache配置</h2><h3 id="查看apache加载的模块">查看Apache加载的模块</h3><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ </span>apachectl -t -D DUMP_MODULES</span><br></pre></td></tr></table></figure><h3 id="禁用和启用模块">禁用和启用模块</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo a2dismod python</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo a2enmod python</span></span><br></pre></td></tr></table></figure><h3 id="查看版本号">查看版本号</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> apachectl -v</span></span><br></pre></td></tr></table></figure><h3 id="赋予权限">赋予权限</h3><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 2.2.x以下版本</span></span><br><span class="line"><span class="attribute"><span class="nomarkup">Order</span></span> deny,allow</span><br><span class="line"><span class="attribute"><span class="nomarkup">Allow</span></span> from <span class="literal">all</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.4.x以上版本</span></span><br><span class="line"><span class="attribute">Require</span> <span class="literal">all</span> granted</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Apache </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Django入门基础</title>
      <link href="/2016/11/09/Django%E5%85%A5%E9%97%A8%E5%9F%BA%E7%A1%80/"/>
      <url>/2016/11/09/Django%E5%85%A5%E9%97%A8%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<h2 id="环境安装">环境安装</h2><h3 id="python3.5">Python3.5</h3><p><a href="/2016/11/09/Python入门基础/" title="python入门基础">python入门基础</a></p><h3 id="django1.11">Django1.11</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 安装项目目录</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> ~/www/html/</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> virtualenv --no-site-packages -p /usr/bin/python3.5 CCO</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> CCO</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">source</span> ./bin/activate</span></span><br><span class="line">(CCO) $ pip3 install ipython</span><br><span class="line">(CCO) $ pip3 install Django==1.11.7</span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看django是否安装成功</span></span><br><span class="line">(CCO) $  ipython</span><br><span class="line"><span class="meta">$</span><span class="bash"> import django</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> django.VERSION <span class="comment"># 打印出django版本表示成功</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 开始创建项目</span></span><br><span class="line">(CCO) $ django-admin.py startproject CCO_WEB</span><br><span class="line"><span class="meta">#</span><span class="bash"> 创建应用</span></span><br><span class="line">(CCO) $ cd CCO_WEB</span><br><span class="line">(CCO) $ django-admin.py startapp polls</span><br></pre></td></tr></table></figure><h3 id="配置django">配置Django</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 修改文件内容</span></span><br><span class="line">(CCO) $ vim CCO_WEB/CCO_WEB/setting.py</span><br><span class="line">ALLOWED_HOSTS = ['127.0.0.1', 'localhost']  # 修改</span><br><span class="line">STATIC_URL = '/static/' # 原始</span><br><span class="line">STATIC_ROOT = os.path.join(BASE_DIR, 'static/') # 添加</span><br></pre></td></tr></table></figure><h3 id="数据库迁移">数据库迁移</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 创建数据库和超级管理员</span></span><br><span class="line">(CCO) $ ./manage.py makemigrations</span><br><span class="line">(CCO) $ ./manage.py migrate</span><br><span class="line">(CCO) $ ./manage.py createsuperuser # 创建超级管理员</span><br></pre></td></tr></table></figure><h3 id="静态文件收集">静态文件收集</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(CCO) $ ./manage.py collectstatic # 收集静态文件</span><br></pre></td></tr></table></figure><h3 id="本地开发环境">本地开发环境</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 用django自带服务器运行</span><br><span class="line">(CCO) $ sudo ufw allow 8000 # 关闭防火墙</span><br><span class="line">(CCO) $ ./manage.py runserver 0.0.0.0:8000 # 成功表示django开发环境配置完成</span><br></pre></td></tr></table></figure><h3 id="apache线上部署">Apache线上部署</h3><p>安装apache模块 <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> Python 2</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo apt-get install libapache2-mod-wsgi</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Python 3</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo apt-get install libapache2-mod-wsgi-py3</span></span><br></pre></td></tr></table></figure></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">apache虚拟主机配置</span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo vim /etc/apache2/sites-available/www.cco.com.conf</span></span><br><span class="line">&lt;VirtualHost *:80&gt;</span><br><span class="line">        ServerName www.example.com</span><br><span class="line">        ServerAdmin webmaster@localhost</span><br><span class="line">         # 这里指明静态文件存放的地方</span><br><span class="line">    Alias /static  /home/hanchang/www/html/CCO/CCO_WEB/static</span><br><span class="line">    # 给文件夹分配权限</span><br><span class="line">    &lt;Directory /home/hanchang/www/html/CCO/CCO_WEB/static&gt;</span><br><span class="line">            Require all granted</span><br><span class="line">    &lt;/Directory&gt;</span><br><span class="line">    #接下来，我们将授予访问存储Django代码的二级项目目录中的wsgi.py文件的权限。</span><br><span class="line">    &lt;Directory /home/hanchang/www/html/CCO/CCO_WEB/CCO_WEB&gt;</span><br><span class="line">    &lt;Files wsgi.py&gt;</span><br><span class="line">            Require all granted</span><br><span class="line">    &lt;/Files&gt;</span><br><span class="line">    &lt;/Directory&gt;</span><br><span class="line">        WSGIDaemonProcess CCO_WEB python-home=/home/hanchang/www/html/CCO/CCO_WEB/CCO_WEB python-path=/home/hanchang/www/html/CCO</span><br><span class="line">    WSGIProcessGroup CCO_WEB</span><br><span class="line">    WSGIScriptAlias / /home/hanchang/www/html/CCO/CCO_WEB/CCO_WEB/wsgi.py</span><br><span class="line">    ErrorLog $&#123;APACHE_LOG_DIR&#125;/error.log</span><br><span class="line">    CustomLog $&#123;APACHE_LOG_DIR&#125;/access.log combined</span><br><span class="line">&lt;/VirtualHost&gt;</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">## 线上</span></span></span><br><span class="line">sudo a2ensite www.cco.com</span><br><span class="line">sudo service apache2 restart</span><br><span class="line">http://127.0.0.1 查看</span><br></pre></td></tr></table></figure><p><a href="https://www.digitalocean.com/community/tutorials/how-to-serve-django-applications-with-apache-and-mod_wsgi-on-ubuntu-16-04" target="_blank" rel="noopener">原文查看</a></p><p>### 守护进程</p><p><a href="/2016/11/10/CentOs7.2服务器基础配置/" title="CentOs7.2服务器基础配置">CentOs7.2服务器基础配置</a> Supervisor部分</p>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Django </tag>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mysql主从复制</title>
      <link href="/2016/11/09/Mysql%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6/"/>
      <url>/2016/11/09/Mysql%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6/</url>
      
        <content type="html"><![CDATA[<h3 id="测试环境">测试环境</h3><ul><li>主服务器: 192.168.0.160 mysql 5.6.17 win2008R2<br></li><li>从服务器: 192.168.0.206 mysql 5.6.12 win2003</li></ul><h3 id="主服务器创建数据库test1-test2">主服务器创建数据库test1, test2</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">DATABASE</span> <span class="string">`test1`</span> <span class="keyword">DEFAULT</span> <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_general_ci;     </span><br><span class="line"><span class="keyword">USE</span> test1</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`test1`</span>.<span class="string">`user`</span> ( <span class="string">`id`</span> <span class="built_in">INT</span>(<span class="number">10</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> AUTO_INCREMENT , <span class="string">`name`</span> <span class="built_in">VARCHAR</span>(<span class="number">100</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> , PRIMARY <span class="keyword">KEY</span> (<span class="string">`id`</span>)) <span class="keyword">ENGINE</span> = MyISAM;  </span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`user`</span> (<span class="string">`id`</span>, <span class="string">`name`</span>) <span class="keyword">VALUES</span> (<span class="literal">NULL</span>, <span class="string">'user1'</span>), (<span class="literal">NULL</span>, <span class="string">'user2'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">DATABASE</span> <span class="string">`test2`</span> <span class="keyword">DEFAULT</span> <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_general_ci;    </span><br><span class="line"><span class="keyword">USE</span> test2</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`test2`</span>.<span class="string">`user`</span> ( <span class="string">`id`</span> <span class="built_in">INT</span>(<span class="number">10</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> AUTO_INCREMENT , <span class="string">`name`</span> <span class="built_in">VARCHAR</span>(<span class="number">100</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> , PRIMARY <span class="keyword">KEY</span> (<span class="string">`id`</span>)) <span class="keyword">ENGINE</span> = MyISAM;  </span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`user`</span> (<span class="string">`id`</span>, <span class="string">`name`</span>) <span class="keyword">VALUES</span> (<span class="literal">NULL</span>, <span class="string">'user1'</span>), (<span class="literal">NULL</span>, <span class="string">'user2'</span>)</span><br></pre></td></tr></table></figure><h3 id="将test1test2-复制到从服务器上">将test1,test2 复制到从服务器上</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">DATABASE</span> <span class="string">`test1`</span> <span class="keyword">DEFAULT</span> <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_general_ci;     </span><br><span class="line"><span class="keyword">USE</span> test1  </span><br><span class="line"><span class="keyword">set</span> <span class="keyword">names</span> utf8;  </span><br><span class="line">source c:/test1.sql;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">DATABASE</span> <span class="string">`test2`</span> <span class="keyword">DEFAULT</span> <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_general_ci;     </span><br><span class="line"><span class="keyword">USE</span> test2  </span><br><span class="line"><span class="keyword">set</span> <span class="keyword">names</span> utf8;  </span><br><span class="line">source c:/test2.sql;</span><br></pre></td></tr></table></figure><h3 id="主服务器配置">主服务器配置</h3><p>编辑配置文件my.ini <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[mysqld] </span><br><span class="line">server-id=1     # 配一个唯一的ID编号，1至32  </span><br><span class="line">log-bin=mysql-bin  # 二进制文件存放路径  </span><br><span class="line">binlog-do-db=test1  # 需要同步的数据库名  </span><br><span class="line">binlog-ignore-db=test2  # 不需要同步的数据库名</span><br></pre></td></tr></table></figure></p><p>重启mysql并重新登陆，创建授权用户 <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">grant</span> <span class="keyword">REPLICATION</span> <span class="keyword">SLAVE</span>,RELOAD,SUPER <span class="keyword">on</span> *.* <span class="keyword">to</span> <span class="keyword">slave</span>@<span class="number">192.168</span><span class="number">.0</span><span class="number">.206</span> <span class="keyword">identified</span> <span class="keyword">by</span> <span class="string">'123456'</span> ;  </span><br><span class="line"><span class="keyword">grant</span> <span class="keyword">REPLICATION</span> <span class="keyword">SLAVE</span>,RELOAD,SUPER <span class="keyword">on</span> *.* <span class="keyword">to</span> slave1@<span class="number">192.168</span><span class="number">.0</span><span class="number">.118</span> <span class="keyword">identified</span> <span class="keyword">by</span> <span class="string">'123456'</span> ; <span class="comment"># 如果是多从</span></span><br><span class="line"><span class="keyword">flush</span> <span class="keyword">privileges</span>;     </span><br><span class="line"><span class="keyword">show</span> <span class="keyword">master</span> <span class="keyword">status</span>;  <span class="comment"># 找到File 和 Position 的值记录下来</span></span><br></pre></td></tr></table></figure></p><p><img src="http://7xq3ry.com1.z0.glb.clouddn.com/20160401152254.png"></p><h3 id="从服务器配置">从服务器配置</h3><p>编辑配置文件my.ini添加 <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[mysqld]</span><br><span class="line">server-id=2     #唯一</span><br><span class="line">replicate-do-db=test1</span><br><span class="line">replicate-ignore-db=test2</span><br></pre></td></tr></table></figure></p><p>重启数据库并重新登陆 <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mysql -uroot -p  </span><br><span class="line"><span class="keyword">change</span> <span class="keyword">master</span> <span class="keyword">to</span> master_host=<span class="string">'192.168.0.160'</span>,master_user=<span class="string">'slave'</span>,master_password=<span class="string">'123456'</span>, master_log_file=<span class="string">'mysql-bin.000001'</span>,master_log_pos=<span class="number">199</span>;  </span><br><span class="line"><span class="keyword">start</span> <span class="keyword">slave</span>;</span><br><span class="line"><span class="keyword">show</span> <span class="keyword">slave</span> <span class="keyword">status</span>\G</span><br></pre></td></tr></table></figure></p><p>结果出现一下内容表示成功 <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Slave_IO_Running: Yes</span><br><span class="line">Slave_SQL_Running: Yes</span><br></pre></td></tr></table></figure></p><p><img src="http://7xq3ry.com1.z0.glb.clouddn.com/20160401152538.png"></p><p>多从，另一个从服务器配置192.168.0.118<br>编辑配置文件my.ini添加 <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[mysqld]</span><br><span class="line">server-id=3     #唯一，注意和其他的从服务器不一致</span><br><span class="line">replicate-do-db=test1</span><br><span class="line">replicate-ignore-db=test2</span><br></pre></td></tr></table></figure></p><p>重启mysql并重新登陆，创建授权用户 <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">change</span> <span class="keyword">master</span> <span class="keyword">to</span> master_host=<span class="string">'192.168.0.160'</span>,master_user=<span class="string">'slave1'</span>,master_password=<span class="string">'123456'</span>, master_log_file=<span class="string">'mysql-bin.000001'</span>,master_log_pos=<span class="number">199</span>;  </span><br><span class="line"><span class="keyword">start</span> <span class="keyword">slave</span>;</span><br><span class="line"><span class="keyword">show</span> <span class="keyword">slave</span> <span class="keyword">status</span>\G</span><br></pre></td></tr></table></figure></p><h3 id="最后测试">最后测试</h3><p>在主服务器添加表和数据，可以看到从服务器数据库已经修改。<br>重启主从数据库，依然可以正常同步。</p><h3 id="错误处理办法">错误处理办法</h3><p><font color="#d44375">连接不上master: </font></p><ol type="1"><li>密码是否正确，是否给予权限<br></li><li>防火墙是否开启3306端口 配置的时候注意锁表</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">LOCK</span> <span class="keyword">TABLES</span></span><br><span class="line"><span class="keyword">UNLOCK</span> <span class="keyword">TABLES</span>;</span><br></pre></td></tr></table></figure><p><font color="#d44375">错误提示 Got fatal error 1236 from master when reading data from binary log: 'Slave can not handle replication events with the checksum that master is configured to log; the first event 'mysql-bin.000002' at 120, the last event read from './mysql-bin.000002' at 120, the last byte read from './mysql-bin.000002' at 120 </font></p><p>由于主库是5.6, 从库是5.5.<br>5.6的版本中加入了replication event checksum，主从复制时间校验功能，所以需要把这个关掉才能正常同步到5.5的slave 修改主库 <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/my.cnf</span><br><span class="line">binlog_checksum=none</span><br></pre></td></tr></table></figure></p><p>重新配置主从即可</p>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mysql入门基础</title>
      <link href="/2016/11/09/Mysql%E5%85%A5%E9%97%A8%E5%9F%BA%E7%A1%80/"/>
      <url>/2016/11/09/Mysql%E5%85%A5%E9%97%A8%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<h2 id="安装mysql">安装mysql</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">// ubuntu16.04</span><br><span class="line">sudo apt-get install mysql-server</span><br><span class="line">sudo apt install mysql-client  # 服务器端不需要</span><br><span class="line">mysql_secure_installation</span><br></pre></td></tr></table></figure><p>查看mysql版本信息 <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql --version  </span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> show variables like <span class="string">'%version_%'</span>;</span></span><br></pre></td></tr></table></figure></p><h2 id="基本命令">基本命令</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">// 创建数据库  </span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">DATABASE</span> <span class="string">`test`</span> <span class="keyword">DEFAULT</span> <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_general_ci;  </span><br><span class="line"></span><br><span class="line">// 删除数据库  </span><br><span class="line"> <span class="keyword">DROP</span> <span class="keyword">DATABASE</span> <span class="keyword">IF</span> <span class="keyword">EXISTS</span> <span class="string">`test`</span>; </span><br><span class="line"></span><br><span class="line">// 创建表  </span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="keyword">test</span>(<span class="keyword">name</span> <span class="built_in">varchar</span>(<span class="number">32</span>) <span class="keyword">not</span> <span class="literal">null</span>,<span class="keyword">password</span> <span class="built_in">varchar</span>(<span class="number">64</span>) <span class="keyword">not</span> <span class="literal">null</span>)<span class="keyword">DEFAULT</span> <span class="keyword">charset</span>=utf8;  </span><br><span class="line"></span><br><span class="line"><span class="comment">### 重置自增字段</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> <span class="string">`tableName`</span> AUTO_INCREMENT = <span class="number">1</span>; </span><br><span class="line">或者</span><br><span class="line"><span class="keyword">truncate</span> tableName; </span><br><span class="line"></span><br><span class="line">// 删除表</span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> <span class="keyword">test</span>;</span><br><span class="line">    </span><br><span class="line">// 删除表内容，保留表结构  </span><br><span class="line">mysql&gt; TRUNCATE TABLE `tabel_name`;</span><br><span class="line">    </span><br><span class="line">// 删除表并重置主键，不会留下日志，相当于删除表并重建    </span><br><span class="line"><span class="keyword">TRUNCATE</span> <span class="keyword">TABLE</span> <span class="string">`animal_cell_attribute`</span></span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">// 导出一个数据库    </span><br><span class="line">mysqldump -u 用户名 -p 数据库名 &gt; 导出的文件名.sql   </span><br><span class="line">mysqldump -u root -p uscnerp &gt; uscnerp.sql    </span><br><span class="line">Enter password:  </span><br><span class="line">    </span><br><span class="line">// 导出一张表</span><br><span class="line">mysqldump -u 用户名 -p 数据库名 表名 &gt; 导出的文件名.sql  </span><br><span class="line">mysqldump -u root -p animal animal_service &gt; animal_service.sql</span><br><span class="line">Enter password: **********  </span><br><span class="line">    </span><br><span class="line">// 导出多个数据库</span><br><span class="line">mysqldump  -uroot -p --databases test mysql #空格分隔</span><br><span class="line">    </span><br><span class="line">// 导出到excel表格</span><br><span class="line">mysql   -uroot   -p   -e   "select   *   from   test.table2 "   &gt;   d:a.xsl</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">// 导入数据库  </span><br><span class="line"><span class="keyword">use</span> 数据库  </span><br><span class="line"><span class="keyword">set</span> <span class="keyword">names</span> utf8; （先确认编码，如果不设置可能会出现乱码，注意不是UTF-8）   </span><br><span class="line">source d:\wcnc_db.sql</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">// 查看表结构</span><br><span class="line"><span class="keyword">show</span> <span class="keyword">create</span> <span class="keyword">table</span> 表名;</span><br></pre></td></tr></table></figure><h2 id="配置用户权限">配置用户权限</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 重置root密码并查看所有用户权限</span></span><br><span class="line"><span class="keyword">use</span> mysql;</span><br><span class="line">Database changed</span><br><span class="line"><span class="keyword">UPDATE</span> <span class="keyword">user</span> <span class="keyword">SET</span> <span class="keyword">Password</span> = <span class="keyword">PASSWORD</span>(<span class="string">'newpassword'</span>) <span class="keyword">WHERE</span> <span class="keyword">user</span> = <span class="string">'root'</span>;</span><br><span class="line">Query OK, 3 rows affected (0.02 sec)</span><br><span class="line">Rows matched: 3  Changed: 3  Warnings: 0</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> Host,<span class="keyword">User</span>,<span class="keyword">Password</span> <span class="keyword">FROM</span> mysql.user;</span><br><span class="line">+<span class="comment">-----------+--------+-------------------------------------------+</span></span><br><span class="line">| Host      | User   | Password                                  |</span><br><span class="line">+<span class="comment">-----------+--------+-------------------------------------------+</span></span><br><span class="line">| localhost | root   | *2ED3112AFECE04CEE0AA42619AB00D4498BA3342 |</span><br><span class="line">| 127.0.0.1 | root   | *2ED3112AFECE04CEE0AA42619AB00D4498BA3342 |</span><br><span class="line">| ::1       | root   | *2ED3112AFECE04CEE0AA42619AB00D4498BA3342 |</span><br><span class="line">| localhost |        |                                           |</span><br><span class="line">| localhost | animal | *CC87B1E39E699B64E0B80741B5D1991BC5BE57AC |</span><br><span class="line">+<span class="comment">-----------+--------+-------------------------------------------+</span></span><br><span class="line">5 rows in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">// 查看全部用户</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> <span class="keyword">CONCAT</span>(<span class="string">'User: '''</span>,<span class="keyword">user</span>,<span class="string">'''@'''</span>,host,<span class="string">''';'</span>) <span class="keyword">AS</span> <span class="keyword">query</span> <span class="keyword">FROM</span> mysql.user;</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">// 创建用户</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">USER</span> username@localhost <span class="keyword">IDENTIFIED</span> <span class="keyword">BY</span> <span class="string">'password'</span>;</span><br><span class="line">&gt; username:用户名  </span><br><span class="line">&gt; @localhost：表示用户只能在本地访问  </span><br><span class="line">&gt; password:密码</span><br><span class="line"></span><br><span class="line">// 配置权限</span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">SELECT</span>,<span class="keyword">INSERT</span>,<span class="keyword">UPDATE</span> <span class="keyword">ON</span> database.* <span class="keyword">TO</span> username@localhost <span class="keyword">IDENTIFIED</span> <span class="keyword">BY</span> <span class="string">'password'</span>;  </span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">ALL</span> <span class="keyword">PRIVILEGES</span> <span class="keyword">ON</span> *.* <span class="keyword">TO</span> <span class="keyword">user</span>;@localhost </span><br><span class="line">// <span class="keyword">GRANT</span> 权限名称 <span class="keyword">ON</span> 数据库.数据表 <span class="keyword">TO</span> 用户名@访问地址 <span class="keyword">IDENTIFIED</span> <span class="keyword">BY</span> <span class="string">'密码'</span>;</span><br><span class="line">    </span><br><span class="line">// 刷新权限列表</span><br><span class="line"><span class="keyword">flush</span> <span class="keyword">privileges</span>;</span><br><span class="line">    </span><br><span class="line">// 配置备份用户权限</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">USER</span> <span class="string">'backuper'</span>@<span class="string">'localhost'</span> <span class="keyword">IDENTIFIED</span> <span class="keyword">BY</span> <span class="string">'PASSWORD'</span>;</span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">SELECT</span>, RELOAD, PROCESS, <span class="keyword">SHOW</span> <span class="keyword">DATABASES</span>, SUPER, <span class="keyword">LOCK</span> <span class="keyword">TABLES</span>, <span class="keyword">REPLICATION</span> <span class="keyword">CLIENT</span>, <span class="keyword">SHOW</span> <span class="keyword">VIEW</span>, <span class="keyword">EVENT</span> <span class="keyword">ON</span> *.* <span class="keyword">TO</span> <span class="string">'backuper'</span>@<span class="string">'localhost'</span>;</span><br><span class="line"><span class="keyword">FLUSH</span> <span class="keyword">PRIVILEGES</span>;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">// 开启慢查询日志</span><br><span class="line">sudo vim /etc/my.cnf</span><br><span class="line"></span><br><span class="line"><span class="comment"># slow_query_log</span></span><br><span class="line">slow_query_log=on</span><br><span class="line">slow-query-log-file=/var/<span class="built_in">log</span>/mysql/slow.log <span class="comment"># 保证此文件属于mysql用户，mysql组，并可写权限</span></span><br><span class="line">long_query_time=1 <span class="comment"># 超过1秒写入慢查询日志</span></span><br><span class="line"><span class="built_in">log</span>-queries-not-using-indexes</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">// 查看是否开启mysql慢查询日志</span><br><span class="line"><span class="keyword">show</span> <span class="keyword">variables</span> <span class="keyword">like</span> <span class="string">"slow_query_log"</span>;</span><br><span class="line"></span><br><span class="line">// 设置密码过期时间</span><br><span class="line"><span class="keyword">SET</span> <span class="keyword">GLOBAL</span> default_password_lifetime = <span class="number">0</span>;  // 全局用户永不过期</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">USER</span> <span class="string">'root'</span>@<span class="string">'localhost'</span> <span class="keyword">PASSWORD</span> <span class="keyword">EXPIRE</span> <span class="keyword">NEVER</span>;  // 单个用户用户过期</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">USER</span> <span class="string">'root'</span>@<span class="string">'localhost'</span> <span class="keyword">PASSWORD</span> <span class="keyword">EXPIRE</span> <span class="built_in">INTERVAL</span> <span class="number">90</span> <span class="keyword">DAY</span>;  // 单个用户</span><br></pre></td></tr></table></figure><h2 id="window服务器下自动备份">Window服务器下自动备份</h2><h3 id="编写脚本">编写脚本</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">rem *******************************Code Start*****************************</span><br><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line">    </span><br><span class="line"><span class="built_in">set</span> <span class="string">"Ymd=%date:~,4%%date:~5,2%%date:~8,2%"</span></span><br><span class="line">mysqldump --opt -u root --password=abcdefg database &gt; F:\FTP\BackupMysql\database_%Ymd%.sql</span><br><span class="line">@<span class="built_in">echo</span> on</span><br><span class="line">rem *******************************Code End*****************************</span><br></pre></td></tr></table></figure><h3 id="定时任务">定时任务</h3><p>注意在操作中填写脚本并在起始于写入脚本所在盘符E:<br></p>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>rsync同步web服务器</title>
      <link href="/2016/11/09/Rsync%E5%90%8C%E6%AD%A5web%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
      <url>/2016/11/09/Rsync%E5%90%8C%E6%AD%A5web%E6%9C%8D%E5%8A%A1%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="安装">安装</h2><h3 id="下载">下载</h3><p>新版已经开始收费，这里使用旧版4.0.5,百度网盘下载http://pan.baidu.com/s/1kTNyk1h</p><h3 id="服务端安装">服务端安装</h3><p><strong>WIN2008R2 ip:192.168.0.160</strong></p><p><img src="http://7xq3ry.com1.z0.glb.clouddn.com/cwrsync.png"></p><p>一路直接下一步，这里会创建一个用户，创建的默认密码可以不需要修改，直接下一步。</p><p><img src="http://7xq3ry.com1.z0.glb.clouddn.com/cwrsync1.png"></p><p>创建的用户</p><p><img src="http://7xq3ry.com1.z0.glb.clouddn.com/cwrsync2.png"></p><p>创建的服务改为自动启动</p><h3 id="配置服务端">配置服务端</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">use chroot = false</span><br><span class="line"># 不验证用户密码</span><br><span class="line">strict modes = false</span><br><span class="line">lock file = rsyncd.lock </span><br><span class="line">hosts allow = 192.168.0.206</span><br><span class="line">max connections = 5</span><br><span class="line"># 默认端口</span><br><span class="line">port = 873</span><br><span class="line"></span><br><span class="line"># 指定匿名访问</span><br><span class="line">uid = 0</span><br><span class="line">gid = 0</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">log file = rsyncd.log</span><br><span class="line"></span><br><span class="line"># Module definitions</span><br><span class="line"># Remember cygwin naming conventions : c:\work becomes /cygdrive/c/work</span><br><span class="line"></span><br><span class="line">[web]</span><br><span class="line">path = /cygdrive/C/WEB</span><br><span class="line"># 下面两行是配置用户名密码的</span><br><span class="line"># auth users = dbbackuper</span><br><span class="line"># secrets file = /cygdrive/e/Setting/Rsync/rsync_db.ps</span><br><span class="line"># 只允许客户端下载，不允许客户端上传</span><br><span class="line">read only = true</span><br><span class="line">transfer logging = yes</span><br></pre></td></tr></table></figure><p>防火墙设置允许配置的端口通过<br>查看端口配置是否错误 <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> telnet 192.168.0.160 873  </span></span><br><span class="line">@RSYNCD: 30.0</span><br></pre></td></tr></table></figure></p><p>服务器端配置测试文件目录 <img src="http://7xq3ry.com1.z0.glb.clouddn.com/cwrsync3.png"></p><p>其中targetDir为联接文件 <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">C:\&gt;mklink /J WEB\targetDir\ source\</span><br><span class="line">为 WEB\targetDir\ &lt;&lt;===&gt;&gt; source\ 创建的联接</span><br></pre></td></tr></table></figure></p><h3 id="客户端安装">客户端安装</h3><p><strong>WIN2003 ip:192.168.0.206</strong></p><h3 id="配置客户端">配置客户端</h3><p>在安装目录下使用如下命令 <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">C:\Program Files\cwRsync\bin&gt;rsync --port=873 -vzrtopg --progress --delete 192.168.0.160::web /cygdrive/C/WEB</span><br><span class="line">receiving incremental file list</span><br><span class="line">skipping non-regular file "targetDir"</span><br><span class="line">./</span><br><span class="line">TEST4/</span><br><span class="line">test3/</span><br><span class="line"></span><br><span class="line">sent 39 bytes  received 163 bytes  134.67 bytes/sec</span><br><span class="line">total size is 19  speedup is 0.09</span><br></pre></td></tr></table></figure></p><p>查看客户端文件目录 <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">test3</span><br><span class="line">TEST4</span><br></pre></td></tr></table></figure></p><p>提示skipping non-regular file 'targetDir'忽略软链接解决办法<br>参数-L:--copy-links 像对待常规文件一样处理软链结 <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">C:\Program Files\cwRsync\bin&gt;rsync --port=873 -vzrtopgL --progress --delete 192.</span><br><span class="line">168.0.160::web /cygdrive/C/WEB</span><br><span class="line">receiving incremental file list</span><br><span class="line">deleting test5/adda.txt</span><br><span class="line">deleting test5/</span><br><span class="line">./</span><br><span class="line">TEST4/</span><br><span class="line">targetDir/</span><br><span class="line">targetDir/HAFA/</span><br><span class="line">targetDir/pdf/</span><br><span class="line">targetDir/pdf/TARGE.txt</span><br><span class="line">           0 100%    0.00kB/s    0:00:00 (xfer#1, to-check=1/8)</span><br><span class="line">test3/</span><br><span class="line"></span><br><span class="line">sent 70 bytes  received 272 bytes  97.71 bytes/sec</span><br><span class="line">total size is 0  speedup is 0.00</span><br></pre></td></tr></table></figure></p><h3 id="实现客户端定时任务">实现客户端定时任务</h3><ol type="1"><li><p>要添加环境变量到系统中<br></p></li><li><p>上传脚本文件到客户端sync_client.bat <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rsync --port=873 -vzrtopgL --progress --delete 192.168.0.160::web /cygdrive/C/WEB</span><br></pre></td></tr></table></figure></p></li><li><p>在系统中添加定时任务，并指定更新时间</p></li></ol><h3 id="参数详解">参数详解</h3><p>rsync参数的具体解释如下：</p><ul><li>-v, --verbose 详细模式输出<br></li><li>-q, --quiet 精简输出模式<br></li><li>-c, --checksum 打开校验开关，强制对文件传输进行校验<br></li><li>-a, --archive 归档模式，表示以递归方式传输文件，并保持所有文件属性，等于-rlptgoD<br></li><li>-r, --recursive 对子目录以递归模式处理<br></li><li>-R, --relative 使用相对路径信息<br></li><li>-b, --backup 创建备份，也就是对于目的已经存在有同样的文件名时，将老的文件重新命名为~filename。可以使用--suffix选项来指定不同的备份文件前缀。<br></li><li>--backup-dir 将备份文件(如~filename)存放在在目录下。<br></li><li>-suffix=SUFFIX 定义备份文件前缀<br></li><li>-u, --update 仅仅进行更新，也就是跳过所有已经存在于DST，并且文件时间晚于要备份的文件。(不覆盖更新的文件)<br></li><li>-l, --links 保留软链结<br></li><li>-L, --copy-links 想对待常规文件一样处理软链结<br></li><li>--copy-unsafe-links 仅仅拷贝指向SRC路径目录树以外的链结<br></li><li>--safe-links 忽略指向SRC路径目录树以外的链结<br></li><li>-H, --hard-links 保留硬链结<br></li><li>-p, --perms 保持文件权限<br></li><li>-o, --owner 保持文件属主信息<br></li><li>-g, --group 保持文件属组信息<br></li><li>-D, --devices 保持设备文件信息<br></li><li>-t, --times 保持文件时间信息<br></li><li>-S, --sparse 对稀疏文件进行特殊处理以节省DST的空间<br></li><li>-n, --dry-run现实哪些文件将被传输<br></li><li>-W, --whole-file 拷贝文件，不进行增量检测<br></li><li>-x, --one-file-system 不要跨越文件系统边界<br></li><li>-B, --block-size=SIZE 检验算法使用的块尺寸，默认是700字节<br></li><li>-e, --rsh=COMMAND 指定使用rsh、ssh方式进行数据同步<br></li><li>--rsync-path=PATH 指定远程服务器上的rsync命令所在路径信息<br></li><li>-C, --cvs-exclude 使用和CVS一样的方法自动忽略文件，用来排除那些不希望传输的文件<br></li><li>--existing 仅仅更新那些已经存在于DST的文件，而不备份那些新创建的文件<br></li><li>--delete 删除那些DST中SRC没有的文件<br></li><li>--delete-excluded 同样删除接收端那些被该选项指定排除的文件<br></li><li>--delete-after 传输结束以后再删除<br></li><li>--ignore-errors 及时出现IO错误也进行删除<br></li><li>--max-delete=NUM 最多删除NUM个文件<br></li><li>--partial 保留那些因故没有完全传输的文件，以是加快随后的再次传输<br></li><li>--force 强制删除目录，即使不为空<br></li><li>--numeric-ids 不将数字的用户和组ID匹配为用户名和组名<br></li><li>--timeout=TIME IP超时时间，单位为秒<br></li><li>-I, --ignore-times 不跳过那些有同样的时间和长度的文件<br></li><li>--size-only 当决定是否要备份文件时，仅仅察看文件大小而不考虑文件时间<br></li><li>--modify-window=NUM 决定文件是否时间相同时使用的时间戳窗口，默认为0<br></li><li>-T --temp-dir=DIR 在DIR中创建临时文件<br></li><li>--compare-dest=DIR 同样比较DIR中的文件来决定是否需要备份<br></li><li>-P 等同于 --partial<br></li><li>--progress 显示备份过程<br></li><li>-z, --compress 对备份的文件在传输时进行压缩处理<br></li><li>--exclude=PATTERN 指定排除不需要传输的文件模式<br></li><li>--include=PATTERN 指定不排除而需要传输的文件模式<br></li><li>--exclude-from=FILE 排除FILE中指定模式的文件<br></li><li>--include-from=FILE 不排除FILE指定模式匹配的文件<br></li><li>--version 打印版本信息<br></li><li>--address 绑定到特定的地址<br></li><li>--config=FILE 指定其他的配置文件，不使用默认的rsyncd.conf文件<br></li><li>--port=PORT 指定其他的rsync服务端口<br></li><li>--blocking-io 对远程shell使用阻塞IO<br></li><li>-stats 给出某些文件的传输状态<br></li><li>--progress 在传输时现实传输过程<br></li><li>--log-format=formAT 指定日志文件格式<br></li><li>--password-file=FILE 从FILE中得到密码<br></li><li>--bwlimit=KBPS 限制I/O带宽，KBytes per second<br></li><li>-h, --help 显示帮助信息</li></ul><h2 id="错误的解决办法">错误的解决办法</h2><h3 id="rsync-不是内部或外部命令也不是可运行的程序或批处理文件"><font color="#d44375">'rsync' 不是内部或外部命令，也不是可运行的程序或批处理文件。</font></h3><p>加环境变量 path = C:\Program Files (x86)\cwRsync\bin 2.rsync: failed to connect to 192.168.1.82: Connection timed out (116) rsync error: error in socket IO (code 10) at clientserver.c(122) [Receiver=3.0.7]</p><p>网络通畅，服务器端允许访问端口 873 3.@ERROR: invalid uid nobody</p><h3 id="rsync-error-error-starting-client-server-protocol-code-5-at-main.c1506-receiver3.0.7"><font color="#d44375">rsync error: error starting client-server protocol (code 5) at main.c(1506) [Receiver=3.0.7] </font></h3><p>指定uid gid<br>uid = 0<br>gid = 0 4.@ERROR: chdir failed</p><h3 id="sync-error-error-starting-client-server-protocol-code-5-at-main.c1506-receiver3.0.7"><font color="#d44375">sync error: error starting client-server protocol (code 5) at main.c(1506) [Receiver=3.0.7] </font></h3><p>path目录配置的正确，得存在<br>解决：服务器端同步目录没有权限，cwrsync默认用户是Svcwrsync。为同步目录添加用户Svcwrsync权限。<br>也可以通过 菜单--cwRsyncServer--02. Prep a Dir for Upload 配置目录权限 除完全控制和特殊权限外的所有权限 5.@ERROR: auth failed on module test</p><h3 id="rsync-error-error-starting-client-server-protocol-code-5-at-main.c1506-receiver3.0.7-1"><font color="#d44375">rsync error: error starting client-server protocol (code 5) at main.c(1506) [Receiver=3.0.7] </font></h3><p>客户端设置<br>a.在命令上要指定好用户名<br>b.密码文件只写密码<br>rsyncd.secrets文件<br>rsyncpass<br>c.用户名密码都要正确 6.Unexpected local arg: /cygdrive/d/rsyncBackup<br>If arg is a remote file/dir, prefix it with a colon (:).</p><h3 id="rsync-error-syntax-or-usage-error-code-1-at-main.c1218-receiver3.0.7"><font color="#d44375">rsync error: syntax or usage error (code 1) at main.c(1218) [Receiver=3.0.7] </font></h3><p>不一定是这个路径有问题，可能是--password-file路径中有空格，服务器端没问题，客户端好像不行</p><h3 id="password-file-must-be-owned-by-root-when-running-as-root"><font color="#d44375">password file must be owned by root when running as root </font></h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">continuing without password file  </span><br><span class="line">Password:</span><br></pre></td></tr></table></figure><p>设置密码访问权限chown.exe可从服务器端拷贝过来<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> chmod -c 600 /cygdrive/c/etc/rsyncd.secrets  </span></span><br><span class="line"><span class="meta">$</span><span class="bash"> chown administrator /cygdrive/c/etc/rsyncd.secrets</span></span><br></pre></td></tr></table></figure></p><p>服务器端不设也可以</p><h3 id="rsync-chown-failed-invalid-argument"><font color="#d44375">rsync: chown “” failed: Invalid argument</font></h3><p>错误时，是因为参数中有o，即保留文件的owner信息，而window服务端无法完成chown操作，解决办法是去掉参数o。另外有些可能还会出现<font color="#d44375">rsync: chgrp “” failed: Invalid argument (22)</font>，原因类似，只要去掉参数中的g即可。</p>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Rsync </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu开发环境</title>
      <link href="/2016/11/09/Ubuntu%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/"/>
      <url>/2016/11/09/Ubuntu%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/</url>
      
        <content type="html"><![CDATA[<h3 id="显示电脑硬件信息">显示电脑硬件信息</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo add-apt-repository ppa:dawidd0811/neofetch</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo apt-get update</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo apt-get install neofetch</span></span><br><span class="line">neofetch</span><br></pre></td></tr></table></figure><h3 id="安装独立显卡驱动">安装独立显卡驱动</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">https://blog.csdn.net/ghw15221836342/article/details/79571559</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 驱动版本查询   https://www.nvidia.com/Download/index.aspx?lang=en-us</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 安装</span></span><br><span class="line">sudo add-apt-repository ppa:graphics-drivers/ppa  </span><br><span class="line">sudo apt-get update  </span><br><span class="line">sudo apt-get install nvidia-390 #此处要根据上面查询到的版本适当更改</span><br><span class="line">sudo apt-get install mesa-common-dev  </span><br><span class="line">sudo apt-get install freeglut3-de</span><br><span class="line"><span class="meta">#</span><span class="bash"> 测试</span></span><br><span class="line">nvidia-smi  #若出现电脑GPU列表，即安装成功</span><br><span class="line">或者</span><br><span class="line">nvidia-settings #显示你的显卡信息</span><br></pre></td></tr></table></figure><h3 id="安装代理">安装代理</h3><p><a href="/2016/11/09/S_h_a_d_o_w_s_o_c_k_s服务/" title="S_h_a_d_o_w_s_o_c_k_s服务">S_h_a_d_o_w_s_o_c_k_s服务</a></p><h3 id="配置proxychains">配置proxychains</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 安装</span></span><br><span class="line">sudo apt install proxychains</span><br><span class="line">sudo vim /etc/proxychains.conf</span><br><span class="line">~ socks5 127.0.0.1 1080  # 最后一行加入socks代理</span><br><span class="line"><span class="meta">#</span><span class="bash"> 测试</span></span><br><span class="line">proxychains wget https://www.google.com</span><br></pre></td></tr></table></figure><h3 id="下载">下载</h3><p>安装uget <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo add-apt-repository ppa:plushuang-tw/uget-stable </span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo apt-get update </span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo apt-get install uget</span></span><br></pre></td></tr></table></figure></p><p>安装aria2 <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo add-apt-repository ppa:t-tujikawa/ppa </span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo apt-get update </span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo apt-get install aria2</span></span><br></pre></td></tr></table></figure></p><p>在uget gui里编辑插件，选择aria2</p><h3 id="wine-qq现在推荐docker安装qq">wine qq（现在推荐docker安装qq）</h3><p>安装wine1.7以上版本<br>安装WineQQ7.8-20151109-Longene.deb版本<br>下载<a href="https://pan.baidu.com/s/1bpLn0vl" target="_blank" rel="noopener">网盘</a></p><p>卸载wineqq <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo dpkg -l | grep qq  <span class="comment"># 找到安装包名称   </span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo dpkg -r wine-qq7.8-longeneteam <span class="comment"># 卸载</span></span></span><br></pre></td></tr></table></figure></p><h3 id="elinks-纯文本浏览器">elinks 纯文本浏览器</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo apt-get install elinks   <span class="comment"># 安装</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> elinks www.zhuohc.com  <span class="comment"># 使用</span></span></span><br></pre></td></tr></table></figure><h3 id="unzip-zip">unzip / zip</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 解决中文乱码</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> unzip -O CP936 xxx.zip</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 解压到指定目录</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> unzip -O xxx.zip -d xxx/</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 压缩文件</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> zip -r yasuo.zip abc.txt dir1</span></span><br></pre></td></tr></table></figure><h3 id="wps-office办公">wps office办公</h3><p><em><font color="#d44375">显示字体错误 <a href="https://pan.baidu.com/s/1bpLn0vl" target="_blank" rel="noopener">下载字体</a></font></em><br>将字体复制到linux字体中 <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo cp * /usr/share/fonts</span><br></pre></td></tr></table></figure></p><p>生成字体索引信息 <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo mkfontscale</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo mkfontdir</span></span><br></pre></td></tr></table></figure></p><p>更新字体缓存 <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo fc-cache</span><br></pre></td></tr></table></figure></p><p><em><font color="#d44375">中文无法输入</font></em><br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> vi /usr/bin/wps  <span class="comment"># word文档</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line">export XMODIFIERS="@im=fcitx"  # 添加的内容  </span><br><span class="line">export QT_IM_MODULE="fcitx"     # 添加的内容    </span><br><span class="line">gOpt=</span><br><span class="line"><span class="meta">#</span><span class="bash">gOptExt=-multiply</span></span><br><span class="line">gTemplateExt=("wpt" "dot" "dotx")</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">$</span><span class="bash"> vi /usr/bin/et   <span class="comment"># excel表格</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line">export XMODIFIERS="@im=fcitx"  # 添加的内容  </span><br><span class="line">export QT_IM_MODULE="fcitx"  # 添加的内容  </span><br><span class="line">gOpt=</span><br><span class="line"><span class="meta">#</span><span class="bash">gOptExt=-multiply</span></span><br></pre></td></tr></table></figure></p><h3 id="输入法">输入法</h3><p>系统自带或者sougou输入法 ， 倬彼昊天系列皮肤</p><h3 id="截屏">截屏</h3><p>系统设置&gt;键盘&gt;自定义快捷键&gt;+&gt;<br>名称填screenshot<br>命令 <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gnome-screenshot -a</span><br></pre></td></tr></table></figure></p><p>在disabled修改快捷键</p><h3 id="美化监视工具">美化监视工具</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo apt-get install conky  </span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo add-apt-repository ppa:teejee2008/ppa</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo apt-get update</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo apt-get install conky-manager</span></span><br></pre></td></tr></table></figure><p>显示桌面会自动隐藏conky的bug解决办法:<br>编辑配置文件 <figure class="highlight elm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># own_window_<span class="keyword">type</span> normal</span><br><span class="line"><span class="title">own_window_type</span> desktop</span><br></pre></td></tr></table></figure></p><h3 id="快速搜索文件">快速搜索文件</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo add-apt-repository ppa:synapse-core/testing</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo apt-get update</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo apt-get install synapse  </span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 卸载synapse</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo apt-get remove synapse</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 移除PPA</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo apt-get install ppa-purge</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo ppa-purge ppa:synapse-core/testing</span></span><br></pre></td></tr></table></figure><h3 id="oh-my-zsh">Oh-my-zsh</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> https://github.com/robbyrussell/oh-my-zsh</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo apt-get install git</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo apt-get install zsh</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sh -c <span class="string">"<span class="variable">$(curl -fsSL https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh)</span>"</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> chsh -s /bin/zsh <span class="comment"># 更改默认bash</span></span></span><br><span class="line">//或:</span><br><span class="line"><span class="meta">$</span><span class="bash"> chsh -s `<span class="built_in">which</span> zsh`</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo reboot</span></span><br></pre></td></tr></table></figure><h3 id="terminator">Terminator</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo add-apt-repository ppa:gnome-terminator</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo apt-get update</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo apt-get install terminator</span></span><br></pre></td></tr></table></figure><h3 id="tmux">Tmux</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo apt-get install tmux</span></span><br></pre></td></tr></table></figure><h3 id="genymotion">Genymotion</h3><p>前提必须安装virtualBox<br>下载地址: https://www.genymotion.com/download/<br>需要先注册,下载后执行 <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> chmod +x genymotion-2.2.2_x64.bin</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> ./genymotion-2.2.2_x64.bin -d /home/user</span></span><br></pre></td></tr></table></figure></p><h3 id="安装系统状态指示器">安装系统状态指示器</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo add-apt-repository ppa:indicator-multiload/stable-daily</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo apt-get update</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo apt-get install indicator-multiload</span></span><br></pre></td></tr></table></figure><h3 id="albert搜索框">Albert搜索框</h3><pre><code>sudo add-apt-repository ppa:noobslab/macbuntusudo apt-get updatesudo apt-get install albert设置快捷键Ctrl+/ 样式NUMIX</code></pre>]]></content>
      
      
      <categories>
          
          <category> 办公 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Ubuntu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python入门基础</title>
      <link href="/2016/11/09/Python%E5%85%A5%E9%97%A8%E5%9F%BA%E7%A1%80/"/>
      <url>/2016/11/09/Python%E5%85%A5%E9%97%A8%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<h2 id="安装">安装</h2><h3 id="linux源码安装适合生产环境">linux源码安装（适合生产环境）</h3><p>安装python3.x.x <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 以centos系统安装python3.6.6为例</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo yum groupinstall <span class="string">"Development tools"</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo yum install zlib-devel bzip2-devel openssl-devel ncurses-devel sqlite-devel readline-devel tk-devel gdbm-devel db4-devel libpcap-devel xz-devel</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> wget https://www.python.org/ftp/python/3.6.6/Python-3.6.6.tar.xz</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> tar -xJf Python-3.6.6.tar.xz</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> Python-3.6.6</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> ./configure --prefix=/usr/<span class="built_in">local</span>/python3  <span class="comment"># 编译配置</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo make</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo make install</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 创建软链接</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> ln -s /usr/<span class="built_in">local</span>/python3/bin/python3 /usr/bin/python3</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> ln -s /usr/<span class="built_in">local</span>/python3/bin/pip3 /usr/bin/pip3</span></span><br></pre></td></tr></table></figure></p><p>安装虚拟环境 <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install python-virtualenv  # centos</span><br></pre></td></tr></table></figure></p><p>创建项目 <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> virtualenv --no-site-packages -p /usr/bin/python3 .env-project</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> source.env-project/bin/active  <span class="comment"># 进入虚拟环境</span></span></span><br><span class="line">(.env-project) deactive  # 退出虚拟环境</span><br></pre></td></tr></table></figure></p><h3 id="pyenv安装适合开发环境">pyenv安装(适合开发环境)</h3><p>安装pyenv <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -L https://raw.githubusercontent.com/pyenv/pyenv-installer/master/bin/pyenv-installer | bash</span><br></pre></td></tr></table></figure></p><p>设置环境变量 <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> vim ~/.zshrc  <span class="comment"># 具体文件看自己的终端工具</span></span></span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">export PATH=$HOME/.pyenv/bin:$PATH</span><br><span class="line">eval &quot;$(pyenv init -)&quot;</span><br><span class="line">eval &quot;$(pyenv virtualenv-init -)&quot;</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">source</span> ~/.zshrc</span></span><br></pre></td></tr></table></figure><p>检查环境</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> pyenv doctor  <span class="comment"># 如有错误，根据自己的环境解决</span></span></span><br></pre></td></tr></table></figure><p>安装python3.x.x</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> pyenv install 3.6.6</span></span><br></pre></td></tr></table></figure><p>如果pyenv下载文件缓慢，可以先下载文件到缓存中</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> ~/.pyenv/cache  <span class="comment"># 没有则创建文件</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> wget https://www.python.org/ftp/python/3.6.6/Python-3.6.6.tar.xz</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> pyenv install 3.6.6</span></span><br></pre></td></tr></table></figure><p>依次安装python3.7.3 python2.7.10</p><p>查看当前系统所有python版本</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> pyenv versions</span></span><br><span class="line">* system (set by /home/zhc/.pyenv/version)</span><br><span class="line">  2.7.10</span><br><span class="line">  3.6.6</span><br><span class="line">  3.7.3</span><br></pre></td></tr></table></figure><p>pyenv系统级别global切换版本&lt;pyenv目录级别local切换版本&lt;pyenv当前shell级别切换版本</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> pyenv global 3.6.6                                                                 </span></span><br><span class="line"><span class="meta">$</span><span class="bash"> pyenv version                                                                     </span></span><br><span class="line">3.6.6 (set by /home/zhc/.pyenv/version)                                                 </span><br><span class="line"><span class="meta">$</span><span class="bash"> pyenv global 3.7.3</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> pyenv version</span></span><br><span class="line">3.7.3 (set by /home/zhc/.pyenv/version)</span><br><span class="line"><span class="meta">$</span><span class="bash"> pyenv shell 3.6.6</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> pyenv version</span></span><br><span class="line">3.6.6 (set by PYENV_VERSION environment variable) </span><br><span class="line"><span class="meta">$</span><span class="bash"> pyenv <span class="built_in">local</span> 3.6.6  <span class="comment"># 会在当前文件夹下创建.python-version文件，存储虚拟环境名称</span></span></span><br></pre></td></tr></table></figure><p>pyenv安装虚拟环境</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> pyenv virtualenv 3.6.6 <span class="built_in">test</span>-3.6.6</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> pyenv virtualenv 3.7.3 <span class="built_in">test</span>-3.7.3</span></span><br></pre></td></tr></table></figure><p>pyenv删除虚拟环境</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> pyenv uninstall <span class="built_in">test</span>-3.6.6</span></span><br></pre></td></tr></table></figure><p>pyenv查看全部虚拟环境 <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> pyenv virtualenvs                                                                 </span></span><br><span class="line">3.6.6/envs/test-3.6.6 (created from /home/zhc/.pyenv/versions/3.6.6)                 </span><br><span class="line">3.7.3/envs/test-3.7.3 (created from /home/zhc/.pyenv/versions/3.7.3)                 </span><br><span class="line">test-3.6.6 (created from /home/zhc/.pyenv/versions/3.6.6)</span><br><span class="line">test-3.7.3 (created from /home/zhc/.pyenv/versions/3.7.3)</span><br></pre></td></tr></table></figure></p><p>切换虚拟环境</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> pyenv activate <span class="built_in">test</span>-3.6.6</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> pyenv <span class="built_in">local</span> <span class="built_in">test</span>-3.6.6</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">source</span> deactivate</span></span><br></pre></td></tr></table></figure><p>pyenv重建环境变量</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> pyenv <span class="built_in">rehash</span></span></span><br></pre></td></tr></table></figure><h2 id="特殊方法">特殊方法</h2><h3 id="获取文件修改时间">获取文件修改时间</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line">filemt= time.localtime(os.stat(filename).st_mtime)  <span class="comment">#文件修改时间</span></span><br><span class="line">filect = time.localtime(os.stat(filename).st_ctime)  <span class="comment">#文件创建</span></span><br><span class="line"><span class="keyword">print</span> time.strftime(<span class="string">"%Y-%m-%d"</span>,filemt)  </span><br><span class="line"><span class="keyword">print</span> time.strftime(<span class="string">"%Y-%m-%d"</span>,filect)</span><br></pre></td></tr></table></figure><h3 id="获取多少天以前的时间">获取多少天以前的时间</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line"><span class="comment"># 30天以前的日期</span></span><br><span class="line">date_time = (datetime.datetime.now() - datetime.timedelta(days=<span class="number">30</span>)).strftime(<span class="string">"%Y-%m-%d"</span>)</span><br><span class="line"><span class="keyword">print</span> date_time</span><br></pre></td></tr></table></figure><h3 id="去除列表重复项内容">去除列表重复项内容</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 如果列表里面内容为字典</span></span><br><span class="line">f = <span class="keyword">lambda</span> x,y:x <span class="keyword">if</span> y <span class="keyword">in</span> x <span class="keyword">else</span> x + [y]</span><br><span class="line">products = reduce(f, [[], ] + products_query)</span><br><span class="line"><span class="keyword">print</span> products</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果列表里面内容为字符串</span></span><br><span class="line">l1 = [<span class="string">'b'</span>,<span class="string">'c'</span>,<span class="string">'d'</span>,<span class="string">'b'</span>,<span class="string">'c'</span>,<span class="string">'a'</span>,<span class="string">'a'</span>]</span><br><span class="line">l2 = list(set(l1))</span><br><span class="line"><span class="keyword">print</span> l2</span><br><span class="line"><span class="comment"># 保持原来的顺序</span></span><br><span class="line">l1 = [<span class="string">'b'</span>,<span class="string">'c'</span>,<span class="string">'d'</span>,<span class="string">'b'</span>,<span class="string">'c'</span>,<span class="string">'a'</span>,<span class="string">'a'</span>]</span><br><span class="line">l2 = sorted(set(l1),key=l1.index)</span><br><span class="line"><span class="keyword">print</span> l2</span><br></pre></td></tr></table></figure><h3 id="md5hash加密">md5，hash加密</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line">data =  <span class="string">'This a md5 test!'</span></span><br><span class="line">hash_md5 = hashlib.md5(data)  <span class="comment"># md5</span></span><br><span class="line">hash_md5.hexdigest()</span><br><span class="line">hashlib.sha1(<span class="string">'This is a sha1 test!'</span>).hexdigest() <span class="comment"># sha1</span></span><br></pre></td></tr></table></figure><h3 id="打印输出对象">打印输出对象</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pprint <span class="keyword">import</span> pprint</span><br><span class="line">pprint(vars(object))</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>S_h_a_d_o_w_s_o_c_k_s服务</title>
      <link href="/2016/11/09/S_h_a_d_o_w_s_o_c_k_s%E6%9C%8D%E5%8A%A1/"/>
      <url>/2016/11/09/S_h_a_d_o_w_s_o_c_k_s%E6%9C%8D%E5%8A%A1/</url>
      
        <content type="html"><![CDATA[<h2 id="安装">安装</h2><h3 id="python版本">Python版本</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> CentOS6.5默认安装的Python版本是2.6.6，返回值为：Python 2.6.6</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> python –version</span></span><br></pre></td></tr></table></figure><h3 id="安装setuptools">安装setuptools</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 安装完毕后，easy_install命令就可以使用了。</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> yum install -y python-setuptools</span></span><br></pre></td></tr></table></figure><h3 id="安装pip">安装pip</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> easy_install pip </span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 通过easy_install安装pip是最为简单的方法。pip默认安装到/usr/bin目录下。</span></span><br></pre></td></tr></table></figure><h3 id="安装-1">安装</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> pip install shadowsocks</span></span><br></pre></td></tr></table></figure><h2 id="配置">配置</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> vi /etc/shadowsocks.json</span></span><br></pre></td></tr></table></figure><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line"><span class="attr">"server"</span>:<span class="string">"your_server_ip"</span>,</span><br><span class="line"><span class="attr">"server_port"</span>:<span class="number">8989</span>,</span><br><span class="line"><span class="attr">"local_address"</span>: <span class="string">"127.0.0.1"</span>,</span><br><span class="line"><span class="attr">"local_port"</span>:<span class="number">1080</span>,</span><br><span class="line"><span class="attr">"password"</span>:<span class="string">"yourpassword"</span>,</span><br><span class="line"><span class="attr">"timeout"</span>:<span class="number">600</span>,</span><br><span class="line"><span class="attr">"method"</span>:<span class="string">"aes-256-cfb"</span>,</span><br><span class="line"><span class="attr">"fast_open"</span>: <span class="literal">false</span>,</span><br><span class="line"><span class="attr">"workers"</span>: <span class="number">1</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>各字段的含义：</p></blockquote><ul><li>server：服务器 IP (IPv4/IPv6)，注意这也将是服务端监听的 IP 地址<br></li><li>server_port：监听的服务器端口<br></li><li>local_address：本地监听的 IP 地址<br></li><li>local_port：本地端端口<br></li><li>password：用来加密的密码<br></li><li>timeout：超时时间（秒）<br></li><li>method：加密方法，可选择 “bf-cfb”, “aes-256-cfb”, “des-cfb”, “rc4″, 等等。默认是一种不安全的加密，推荐用 “aes-256-cfb” fast-open：true 或 false。如果你的服务器 Linux 内核在3.7+，可以开启 fast-open 以降低延迟。开启方法： echo 3 &gt; /proc/sys/net/ipv4/tcp_fastopen<br></li><li>开启之后，将 fast_open 的配置设置为 true 即可。<br></li><li>works：works数量，默认为 1</li></ul><h3 id="安装m2crypto">安装M2Crypto</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 默认加密方法 table 速度很快，但很不安全。推荐使用 “aes-256-cfb” 或者 “bf-cfb”。请不要使用 “rc4″，它不安全。如果选择 “table” 之外的加密，需要安装 M2Crypto。 先安装依赖包：</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> yum install -y openssl-devel gcc swig python-devel autoconf libtool</span></span><br></pre></td></tr></table></figure><h3 id="安装setuptools-1">安装setuptools</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> wget --no-check-certificate https://bitbucket.org/pypa/setuptools/raw/bootstrap/ez_setup.py</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> python ez_setup.py install</span></span><br></pre></td></tr></table></figure><p>再通过pip安装M2Crypto： <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> pip install M2Crypto</span></span><br></pre></td></tr></table></figure></p><h3 id="安装-gevent">安装 gevent</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 安装 gevent可以提高 Shadowsocks 的性能。CentOS下安装gevent依赖libevent和greenlet。</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> yum install -y libevent</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> pip install greenlet</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> pip install gevent</span></span><br></pre></td></tr></table></figure><h3 id="服务器端启动">服务器端启动</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> ssserver -c /etc/shadowsocks.json</span></span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 如果想在后台一直运行Shadowsocks，启动命令如下：</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> nohup ssserver -c /etc/shadowsocks.json &gt; /dev/null 2&gt;&amp;1 &amp;</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 备注：关于nohup，是可以让程序在后台运行的命令。 同时可以用命令行参数覆盖 /etc/shadowsocks.json 里的设置：</span></span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sslocal -s 服务器地址 -p 服务器端口 -l 本地端端口 -k 密码 -m 加密方法</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> ssserver -p 服务器端口 -k 密码 -m 加密方法</span></span><br><span class="line">备注：sslocal是客户端程序；ssserver是服务端程序。</span><br></pre></td></tr></table></figure><h2 id="防火墙设置如有">防火墙设置（如有）</h2><p>编辑防火墙配置文件/etc/sysconfig/iptables，将服务器端口（server_port）放行。<br>新增一条防火墙规则： <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> iptables -A INPUT -m state --state NEW -m tcp -p tcp --dport 8989 -j ACCEPT</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> service iptables save</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> service iptables restart</span></span><br></pre></td></tr></table></figure></p><h2 id="配置多个用户">配置多个用户</h2><div class="sourceCode" id="cb1"><pre class="sourceCode json"><code class="sourceCode json"><span id="cb1-1"><a href="#cb1-1"></a><span class="fu">{</span></span><span id="cb1-2"><a href="#cb1-2"></a><span class="dt">&quot;timeout&quot;</span><span class="fu">:</span> <span class="dv">600</span><span class="fu">,</span></span><span id="cb1-3"><a href="#cb1-3"></a><span class="dt">&quot;method&quot;</span><span class="fu">:</span> <span class="st">&quot;aes-256-cfb&quot;</span><span class="fu">,</span></span><span id="cb1-4"><a href="#cb1-4"></a><span class="dt">&quot;port_password&quot;</span><span class="fu">:</span> </span><span id="cb1-5"><a href="#cb1-5"></a><span class="fu">{</span></span><span id="cb1-6"><a href="#cb1-6"></a><span class="dt">&quot;40001&quot;</span><span class="fu">:</span> <span class="st">&quot;password1&quot;</span><span class="fu">,</span></span><span id="cb1-7"><a href="#cb1-7"></a><span class="dt">&quot;40002&quot;</span><span class="fu">:</span> <span class="st">&quot;password2&quot;</span><span class="fu">,</span></span><span id="cb1-8"><a href="#cb1-8"></a><span class="dt">&quot;40003&quot;</span><span class="fu">:</span> <span class="st">&quot;password3&quot;</span></span><span id="cb1-9"><a href="#cb1-9"></a><span class="fu">},</span></span><span id="cb1-10"><a href="#cb1-10"></a><span class="dt">&quot;_comment&quot;</span><span class="fu">:</span></span><span id="cb1-11"><a href="#cb1-11"></a><span class="fu">{</span></span><span id="cb1-12"><a href="#cb1-12"></a><span class="dt">&quot;40001&quot;</span><span class="fu">:</span> <span class="st">&quot;xiaoming&quot;</span><span class="fu">,</span></span><span id="cb1-13"><a href="#cb1-13"></a><span class="dt">&quot;40002&quot;</span><span class="fu">:</span> <span class="st">&quot;lilei&quot;</span><span class="fu">,</span></span><span id="cb1-14"><a href="#cb1-14"></a><span class="dt">&quot;40003&quot;</span><span class="fu">:</span> <span class="st">&quot;mike&quot;</span></span><span id="cb1-15"><a href="#cb1-15"></a><span class="fu">}</span></span><span id="cb1-16"><a href="#cb1-16"></a><span class="fu">}</span></span></code></pre></div>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python将Office Word转为Html并提取相关图片信息</title>
      <link href="/2016/11/09/Python%E5%B0%86Office%20Word%E8%BD%AC%E4%B8%BAHtml%E5%B9%B6%E6%8F%90%E5%8F%96%E7%9B%B8%E5%85%B3%E5%9B%BE%E7%89%87%E4%BF%A1%E6%81%AF/"/>
      <url>/2016/11/09/Python%E5%B0%86Office%20Word%E8%BD%AC%E4%B8%BAHtml%E5%B9%B6%E6%8F%90%E5%8F%96%E7%9B%B8%E5%85%B3%E5%9B%BE%E7%89%87%E4%BF%A1%E6%81%AF/</url>
      
        <content type="html"><![CDATA[<h2 id="思路1">思路1</h2><blockquote><p>More exactly, a .docx document is a Zip archive in OpenXML format: you have first to uncompress it. I downloaded a sample (Google: some search term filetype:docx) and after unzipping I found some folders. The word folder contains the document itself, in file document.xml.</p></blockquote><p>于是使用unzip模块 <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> zipfile</span><br></pre></td></tr></table></figure></p><p>但是报错 <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">BadZipfile: File is not a zip file</span><br></pre></td></tr></table></figure></p><p>检查发现office word文件结尾为.doc, 于是使用7-zip进行提取发现确实报错.</p><p>尝试用本机office2013打开并另存为word文档.docx, 再次使用7-zip进行提取，成功，会生成以下一个文件夹</p><ul><li>_rels文件夹<br></li><li>docProps文件夹<br></li><li>word文件夹<br></li><li>[Content_Types].xml文件</li></ul><p>其中\word\media文件夹下就有我需要的图片信息<br>既然需要更改文件后缀，那么就有另一个思路。</p><h2 id="思路2">思路2</h2><blockquote><p>通过win32com.clientm将文件改为html文件，会生成类似的文件夹</p></blockquote><p>核心代码 <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- encoding: utf8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> win32com</span><br><span class="line"><span class="keyword">from</span> win32com.client <span class="keyword">import</span> constants</span><br><span class="line"></span><br><span class="line"><span class="comment"># 打开初始化word文档</span></span><br><span class="line">w = win32com.client.Dispatch(<span class="string">'Word.Application'</span>)</span><br><span class="line">w.Visible = <span class="number">0</span></span><br><span class="line">w.DisplayAlerts = <span class="number">0</span></span><br><span class="line">doc = w.Documents.Open(source_file)  <span class="comment"># 打开文件</span></span><br><span class="line">doc.SaveAs(target_fold + <span class="string">'/'</span> + file_number + <span class="string">'.htm'</span>, <span class="number">8</span>)  <span class="comment"># 更名为htm文件</span></span><br><span class="line">doc.Close()</span><br><span class="line">w.Quit()</span><br></pre></td></tr></table></figure></p><p>另存为其他规格只需要将参数8修改即可</p><ul><li>wdFormatDocument = 0<br></li><li>wdFormatDocument97 = 0<br></li><li>wdFormatDocumentDefault = 16<br></li><li>wdFormatDOSText = 4<br></li><li>wdFormatDOSTextLineBreaks = 5<br></li><li>wdFormatEncodedText = 7<br></li><li>wdFormatFilteredHTML = 10<br></li><li>wdFormatFlatXML = 19<br></li><li>wdFormatFlatXMLMacroEnabled = 20<br></li><li>wdFormatFlatXMLTemplate = 21<br></li><li>wdFormatFlatXMLTemplateMacroEnabled = 22<br></li><li>wdFormatHTML = 8<br></li><li>wdFormatPDF = 17<br></li><li>wdFormatRTF = 6<br></li><li>wdFormatTemplate = 1<br></li><li>wdFormatTemplate97 = 1<br></li><li>wdFormatText = 2<br></li><li>wdFormatTextLineBreaks = 3<br></li><li>wdFormatUnicodeText = 7<br></li><li>wdFormatWebArchive = 9<br></li><li>wdFormatXML = 11<br></li><li>wdFormatXMLDocument = 12<br></li><li>wdFormatXMLDocumentMacroEnabled = 13<br></li><li>wdFormatXMLTemplate = 14<br></li><li>wdFormatXMLTemplateMacroEnabled = 15<br></li><li>wdFormatXPS = 18</li></ul><p>最后脚本 <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- encoding: utf8 -*-</span></span><br><span class="line"><span class="keyword">import</span> win32com</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> xlrd</span><br><span class="line"><span class="keyword">import</span> shutil</span><br><span class="line"><span class="keyword">from</span> win32com.client <span class="keyword">import</span> constants</span><br><span class="line"></span><br><span class="line"><span class="comment"># 从excel表格中导入数据并组成字典</span></span><br><span class="line">XlsFile = <span class="string">'default.xlsx'</span>                  <span class="comment"># 需要的数据</span></span><br><span class="line">data = xlrd.open_workbook(XlsFile)</span><br><span class="line">table = data.sheets()[<span class="number">0</span>]</span><br><span class="line">nrows = table.nrows</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取文件名列表</span></span><br><span class="line">number_list = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, nrows):</span><br><span class="line">    number_list.append(table.row_values(i)[<span class="number">0</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 打开初始化word文档</span></span><br><span class="line">w = win32com.client.Dispatch(<span class="string">'Word.Application'</span>)</span><br><span class="line">w.Visible = <span class="number">0</span></span><br><span class="line">w.DisplayAlerts = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 遍历文件夹并将文件剪贴到新的文件夹中</span></span><br><span class="line">source_fold = os.path.split(os.path.realpath(__file__))[<span class="number">0</span>] + <span class="string">'/'</span> + <span class="string">'WordFile'</span></span><br><span class="line">target_fold = os.path.split(os.path.realpath(__file__))[<span class="number">0</span>] + <span class="string">'/'</span> + <span class="string">'NewFile'</span></span><br><span class="line">img_fold = os.path.split(os.path.realpath(__file__))[<span class="number">0</span>] + <span class="string">'/'</span> + <span class="string">'Img'</span></span><br><span class="line">word_list = os.listdir(source_fold)</span><br><span class="line"><span class="keyword">for</span> file_name <span class="keyword">in</span> word_list:</span><br><span class="line">    <span class="comment"># 根据货号在列表中查找</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        file_number = file_name[<span class="number">0</span>:<span class="number">10</span>]</span><br><span class="line">        <span class="keyword">if</span> file_number <span class="keyword">in</span> number_list:</span><br><span class="line">            print(file_name + <span class="string">'是需要的文件.'</span>)</span><br><span class="line">            source_file = source_fold + <span class="string">'/'</span> + file_name</span><br><span class="line">            doc = w.Documents.Open(source_file)  <span class="comment"># 打开文件</span></span><br><span class="line">            doc.SaveAs(target_fold + <span class="string">'/'</span> + file_number + <span class="string">'.htm'</span>, <span class="number">8</span>)  <span class="comment"># 更名为htm文件</span></span><br><span class="line">            doc.Close()</span><br><span class="line">            od_img = target_fold + <span class="string">'/'</span> + file_number + <span class="string">'.files'</span> + <span class="string">'/'</span> + <span class="string">'image003.jpg'</span></span><br><span class="line">            shutil.copyfile(od_img, img_fold + <span class="string">'/'</span> + file_number + <span class="string">'.jpg'</span>)  <span class="comment"># 复制新的文件</span></span><br><span class="line">            number_list.remove(file_number)  <span class="comment"># 从excel列表中删除此元素防止重复选取</span></span><br><span class="line">    <span class="keyword">except</span> Exception, e:</span><br><span class="line">        print(file_name)</span><br><span class="line">        <span class="keyword">print</span> e</span><br><span class="line">w.Quit()</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    f = open(<span class="string">"php.json"</span>, <span class="string">"w"</span>)</span><br><span class="line">    <span class="keyword">print</span> &gt;&gt;f, number_list  <span class="comment"># 最后将剩下的元素打印到文件中</span></span><br><span class="line"><span class="keyword">except</span> Exception, e:</span><br><span class="line">    <span class="keyword">print</span> <span class="string">'写入php.json失败'</span></span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python从Excel导出数据并批量替换word文档内容</title>
      <link href="/2016/11/09/Python%E4%BB%8EExcel%E5%AF%BC%E5%87%BA%E6%95%B0%E6%8D%AE%E5%B9%B6%E6%89%B9%E9%87%8F%E6%9B%BF%E6%8D%A2word%E6%96%87%E6%A1%A3%E5%86%85%E5%AE%B9/"/>
      <url>/2016/11/09/Python%E4%BB%8EExcel%E5%AF%BC%E5%87%BA%E6%95%B0%E6%8D%AE%E5%B9%B6%E6%89%B9%E9%87%8F%E6%9B%BF%E6%8D%A2word%E6%96%87%E6%A1%A3%E5%86%85%E5%AE%B9/</url>
      
        <content type="html"><![CDATA[<h3 id="代码">代码</h3><p>第一个是操作word，第二个是操作excel <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> win32com.client <span class="keyword">import</span> constants, Dispatch</span><br><span class="line"><span class="keyword">import</span> pythoncom</span><br><span class="line">wdStory = <span class="number">6</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">WordDocument</span><span class="params">(object)</span>:</span></span><br><span class="line">  <span class="string">"""</span></span><br><span class="line"><span class="string">  Some convenience methods for Word documents accessed</span></span><br><span class="line"><span class="string">  through COM.</span></span><br><span class="line"><span class="string">  """</span></span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, visible=False)</span>:</span></span><br><span class="line">    self.app = Dispatch(<span class="string">"Word.Application"</span>)</span><br><span class="line">    self.app.Visible = visible</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">new</span><span class="params">(self, filename=None)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    Create a new Word document. If 'filename' specified,</span></span><br><span class="line"><span class="string">    use the file as a template.</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    self.app.Documents.Add(filename)</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">open</span><span class="params">(self, filename)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    Open an existing Word document for editing.</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    self.app.Documents.Open(filename)</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">save</span><span class="params">(self, filename=None)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    Save the active document. If 'filename' is given,</span></span><br><span class="line"><span class="string">    do a Save As.</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    <span class="keyword">if</span> filename:</span><br><span class="line">      self.app.ActiveDocument.SaveAs(filename)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">      self.app.ActiveDocument.Save()</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">save_as</span><span class="params">(self, filename)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> self.save(filename)</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">print_out</span><span class="params">(self)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    Print the active document.</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    self.app.Application.PrintOut()</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">close</span><span class="params">(self)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    Close the active document.</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    self.app.ActiveDocument.Close()</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">quit</span><span class="params">(self)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    Quit Word.</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    <span class="keyword">return</span> self.app.Quit()</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">find_and_replace</span><span class="params">(self, find_str, replace_str)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    Find all occurances of 'find_str' and replace with 'replace_str'</span></span><br><span class="line"><span class="string">    in the active document.</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    self.app.Selection.HomeKey(Unit=wdStory)</span><br><span class="line">    find = self.app.Selection.Find</span><br><span class="line">    find.Text = find_str</span><br><span class="line">    <span class="keyword">while</span> self.app.Selection.Find.Execute():</span><br><span class="line">      self.app.Selection.TypeText(Text=replace_str)</span><br></pre></td></tr></table></figure></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> win32com.client <span class="keyword">import</span> constants, Dispatch</span><br><span class="line"><span class="keyword">import</span> pythoncom</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line">borderTop = <span class="number">3</span></span><br><span class="line">borderBottom = <span class="number">4</span></span><br><span class="line">borderLeft = <span class="number">1</span></span><br><span class="line">borderRight = <span class="number">2</span></span><br><span class="line">borderSolid = <span class="number">1</span></span><br><span class="line">borderDashed = <span class="number">2</span></span><br><span class="line">borderDotted = <span class="number">3</span></span><br><span class="line">colorBlack = <span class="number">1</span></span><br><span class="line">directionUp = <span class="number">-4162</span></span><br><span class="line">directionDown = <span class="number">-4121</span></span><br><span class="line">directionLeft = <span class="number">-4131</span></span><br><span class="line">directionRight = <span class="number">-4152</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ExcelDocument</span><span class="params">(object)</span>:</span></span><br><span class="line">  <span class="string">"""</span></span><br><span class="line"><span class="string">  Some convenience methods for Excel documents accessed</span></span><br><span class="line"><span class="string">  through COM.</span></span><br><span class="line"><span class="string">  """</span></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, visible=False)</span>:</span></span><br><span class="line">    self.app = Dispatch(<span class="string">"Excel.Application"</span>)</span><br><span class="line">    self.app.Visible = visible</span><br><span class="line">    self.sheet = <span class="number">1</span></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">new</span><span class="params">(self, filename=None)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    Create a new Excel workbook. If 'filename' specified,</span></span><br><span class="line"><span class="string">    use the file as a template.</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    self.app.Workbooks.Add(filename)</span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">open</span><span class="params">(self, filename)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    Open an existing Excel workbook for editing.</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    self.app.Workbooks.Open(filename)</span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">set_sheet</span><span class="params">(self, sheet)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    Set the active worksheet.</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    self.sheet = sheet</span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">get_range</span><span class="params">(self, range)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    Get a range object for the specified range or single cell.</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    <span class="keyword">return</span> self.app.ActiveWorkbook.Sheets(self.sheet).Range(range)</span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">set_value</span><span class="params">(self, cell, value=<span class="string">''</span>)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    Set the value of 'cell' to 'value'.</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    self.get_range(cell).Value = value</span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">get_value</span><span class="params">(self, cell)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    Get the value of 'cell'.</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    value = self.get_range(cell).Value</span><br><span class="line">    <span class="keyword">if</span> isinstance(value, tuple):</span><br><span class="line">      value = [v[<span class="number">0</span>] <span class="keyword">for</span> v <span class="keyword">in</span> value]</span><br><span class="line">    <span class="keyword">return</span> value</span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">set_border</span><span class="params">(self, range, side, line_style=borderSolid, color=colorBlack)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    Set a border on the specified range of cells or single cell.</span></span><br><span class="line"><span class="string">    'range' = range of cells or single cell</span></span><br><span class="line"><span class="string">    'side' = one of borderTop, borderBottom, borderLeft, borderRight</span></span><br><span class="line"><span class="string">    'line_style' = one of borderSolid, borderDashed, borderDotted, others?</span></span><br><span class="line"><span class="string">    'color' = one of colorBlack, others?</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    range = self.get_range(range).Borders(side)</span><br><span class="line">    range.LineStyle = line_style</span><br><span class="line">    range.Color = color</span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">sort</span><span class="params">(self, range, key_cell)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    Sort the specified 'range' of the activeworksheet by the</span></span><br><span class="line"><span class="string">    specified 'key_cell'.</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    range.Sort(Key1=self.get_range(key_cell), Order1=<span class="number">1</span>, Header=<span class="number">0</span>, OrderCustom=<span class="number">1</span>, MatchCase=<span class="literal">False</span>, Orientation=<span class="number">1</span>)</span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">hide_row</span><span class="params">(self, row, hide=True)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    Hide the specified 'row'.</span></span><br><span class="line"><span class="string">    Specify hide=False to show the row.</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    self.get_range(<span class="string">'a%s'</span> % row).EntireRow.Hidden = hide</span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">hide_column</span><span class="params">(self, column, hide=True)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    Hide the specified 'column'.</span></span><br><span class="line"><span class="string">    Specify hide=False to show the column.</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    self.get_range(<span class="string">'%s1'</span> % column).EntireColumn.Hidden = hide</span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">delete_row</span><span class="params">(self, row, shift=directionUp)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    Delete the entire 'row'.</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    self.get_range(<span class="string">'a%s'</span> % row).EntireRow.Delete(Shift=shift)</span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">delete_column</span><span class="params">(self, column, shift=directionLeft)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    Delete the entire 'column'.</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    self.get_range(<span class="string">'%s1'</span> % column).EntireColumn.Delete(Shift=shift)</span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">fit_column</span><span class="params">(self, column)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    Resize the specified 'column' to fit all its contents.</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    self.get_range(<span class="string">'%s1'</span> % column).EntireColumn.AutoFit()</span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">save</span><span class="params">(self)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    Save the active workbook.</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    self.app.ActiveWorkbook.Save()</span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">save_as</span><span class="params">(self, filename, delete_existing=False)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    Save the active workbook as a different filename.</span></span><br><span class="line"><span class="string">    If 'delete_existing' is specified and the file already</span></span><br><span class="line"><span class="string">    exists, it will be deleted before saving.</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    <span class="keyword">if</span> delete_existing <span class="keyword">and</span> os.path.exists(filename):</span><br><span class="line">      os.remove(filename)</span><br><span class="line">    self.app.ActiveWorkbook.SaveAs(filename)</span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">print_out</span><span class="params">(self)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    Print the active workbook.</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    self.app.Application.PrintOut()</span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">close</span><span class="params">(self)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    Close the active workbook.</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    self.app.ActiveWorkbook.Close()</span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">quit</span><span class="params">(self)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    Quit Excel.</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    <span class="keyword">return</span> self.app.Quit()</span><br></pre></td></tr></table></figure><h3 id="基本使用方法">基本使用方法</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- encoding: utf8 -*-</span></span><br><span class="line"><span class="comment"># 配置项</span></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> shutil</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> win32com</span><br><span class="line"><span class="keyword">from</span> win32com.client <span class="keyword">import</span> constants</span><br><span class="line"><span class="keyword">import</span> xlrd</span><br><span class="line">XlsFile = <span class="string">'default.xls'</span>                  <span class="comment"># 需要的数据</span></span><br><span class="line">OldStrs = [<span class="string">'#CatalogNumber#'</span>,</span><br><span class="line">           <span class="string">'#ProductName#'</span>,</span><br><span class="line">           <span class="string">'#OSpecies#'</span>,</span><br><span class="line">           <span class="string">'#Short#'</span>,</span><br><span class="line">           <span class="string">'#Organism#'</span>,</span><br><span class="line">           <span class="string">'#Fragment#'</span>,</span><br><span class="line">           <span class="string">'#PROTEIN#'</span>,</span><br><span class="line">           <span class="string">'#Tag#'</span></span><br><span class="line">           ]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 确认模板类型</span></span><br><span class="line">DefaultFile = raw_input(<span class="string">'Want to use ihc.jpg,input \'Y\',or input \'N\':\n'</span>)</span><br><span class="line"><span class="keyword">if</span> DefaultFile == <span class="string">'N'</span>:</span><br><span class="line">    DocFile = os.path.abspath(<span class="string">'default_noihc.doc'</span>)</span><br><span class="line">    <span class="keyword">print</span> DocFile</span><br><span class="line"><span class="keyword">elif</span> DefaultFile == <span class="string">'Y'</span>:</span><br><span class="line">    DocFile = os.path.abspath(<span class="string">'default.doc'</span>)</span><br><span class="line">    <span class="keyword">print</span> DocFile</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="keyword">raise</span></span><br><span class="line">filepath = <span class="string">'D:/Py/CreateAntibodyWord/NewFile'</span>    <span class="comment"># 生成文件目录</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取括号内容的正则表达式</span></span><br><span class="line">patt = re.compile(<span class="string">r"\((.*?)\)"</span>, re.I | re.X)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 打开初始化word文档</span></span><br><span class="line">w = win32com.client.Dispatch(<span class="string">'Word.Application'</span>)</span><br><span class="line">w.Visible = <span class="number">0</span></span><br><span class="line">w.DisplayAlerts = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 从excel表格中导入数据</span></span><br><span class="line"></span><br><span class="line">data = xlrd.open_workbook(XlsFile) </span><br><span class="line">table = data.sheets()[<span class="number">0</span>]</span><br><span class="line">nrows = table.nrows</span><br><span class="line"></span><br><span class="line"><span class="comment"># 循环表格中的内容</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, nrows):</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="comment"># 获取新的数据</span></span><br><span class="line">        CatalogNumber = table.row_values(i)[<span class="number">0</span>]</span><br><span class="line">        ProductName = table.row_values(i)[<span class="number">1</span>]</span><br><span class="line">        OrganismSpecies = table.row_values(i)[<span class="number">2</span>]</span><br><span class="line">        Tag = table.row_values(i)[<span class="number">3</span>]</span><br><span class="line">        Fragment = table.row_values(i)[<span class="number">4</span>]</span><br><span class="line">        Short = patt.findall(ProductName)[<span class="number">0</span>]</span><br><span class="line">        <span class="comment"># 获取对应蛋白的货号</span></span><br><span class="line">        ProteinNumber = re.sub(<span class="string">r'^PA'</span>, <span class="string">r'RP'</span>, CatalogNumber)</span><br><span class="line">        <span class="comment"># Ge多物种没有缩写，用General替代</span></span><br><span class="line">        Organism = patt.findall(OrganismSpecies)</span><br><span class="line">        <span class="keyword">if</span> len(Organism) &gt; <span class="number">0</span>:</span><br><span class="line">            Organism = Organism[<span class="number">0</span>]</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            Organism = <span class="string">'General'</span></span><br><span class="line">        <span class="comment"># 没有氨基酸片段信息的用原始值替代</span></span><br><span class="line">        Fragment = patt.findall(Fragment)</span><br><span class="line">        <span class="keyword">if</span> len(Fragment) &gt; <span class="number">0</span>:</span><br><span class="line">            Fragment = Fragment[<span class="number">0</span>]</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            Fragment = <span class="string">'#Fragment#'</span></span><br><span class="line">        NewStrs = [CatalogNumber,</span><br><span class="line">                   ProductName,</span><br><span class="line">                   OrganismSpecies,</span><br><span class="line">                   Short,</span><br><span class="line">                   Organism,</span><br><span class="line">                   Fragment,</span><br><span class="line">                   ProteinNumber,</span><br><span class="line">                   Tag</span><br><span class="line">                   ]</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 打开复制的文件</span></span><br><span class="line">        NewFileName = CatalogNumber + <span class="string">'-e.doc'</span>                                        <span class="comment"># 命名新的文件</span></span><br><span class="line">        shutil.copyfile(DocFile, filepath + <span class="string">'/'</span> + NewFileName)                        <span class="comment"># 复制新的文件</span></span><br><span class="line">        CopyFile = os.path.abspath(filepath + <span class="string">'/'</span> + NewFileName)                      <span class="comment"># 新的文件目录</span></span><br><span class="line">        doc = w.Documents.Open(FileName=CopyFile)                                     <span class="comment"># 打开文件</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 文本框处理</span></span><br><span class="line">        canvas = doc.Shapes[<span class="number">2</span>]</span><br><span class="line">        canvas.TextFrame.TextRange.Find.Execute(OldStrs[<span class="number">3</span>], <span class="literal">False</span>, <span class="literal">False</span>, <span class="literal">False</span>, <span class="literal">False</span>, <span class="literal">False</span>, <span class="literal">True</span>, <span class="number">1</span>, <span class="literal">True</span>, NewStrs[<span class="number">3</span>], <span class="number">2</span>)</span><br><span class="line">        canvas.TextFrame.TextRange.Find.Execute(OldStrs[<span class="number">4</span>], <span class="literal">False</span>, <span class="literal">False</span>, <span class="literal">False</span>, <span class="literal">False</span>, <span class="literal">False</span>, <span class="literal">True</span>, <span class="number">1</span>, <span class="literal">True</span>, NewStrs[<span class="number">4</span>], <span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 正文文字处理</span></span><br><span class="line">        w.Selection.Find.ClearFormatting()</span><br><span class="line">        w.Selection.Find.Replacement.ClearFormatting()</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> range(len(NewStrs)):</span><br><span class="line">            w.Selection.Find.Execute(OldStrs[j], <span class="literal">False</span>, <span class="literal">False</span>, <span class="literal">False</span>, <span class="literal">False</span>, <span class="literal">False</span>, <span class="literal">True</span>, <span class="number">1</span>, <span class="literal">True</span>, NewStrs[j], <span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 获取属性信息并修改,参考https://msdn.microsoft.com/en-us/library/microsoft.office.tools.excel.workbook.builtindocumentproperties(v=vs.120).aspx?cs-save-lang=1&amp;cs-lang=vb#code-snippet-1</span></span><br><span class="line">        doc.BuiltInDocumentProperties(<span class="string">'Title'</span>).Value = ProductName</span><br><span class="line">        doc.BuiltInDocumentProperties(<span class="string">'Subject'</span>).Value = <span class="string">'Instruction manual (Catalog No.'</span> + CatalogNumber + <span class="string">')'</span></span><br><span class="line">        doc.BuiltInDocumentProperties(<span class="string">'Keywords'</span>).Value = ProductName</span><br><span class="line">        doc.BuiltInDocumentProperties(<span class="string">'Category'</span>).Value = OrganismSpecies</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 保存文件并关闭</span></span><br><span class="line">        doc.Save()</span><br><span class="line">        doc.Close()</span><br><span class="line">        <span class="keyword">print</span> CatalogNumber + <span class="string">' create word success!'</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 捕获异常并写入log文件中</span></span><br><span class="line">    <span class="keyword">except</span> Exception, e:</span><br><span class="line">        <span class="keyword">print</span> CatalogNumber + <span class="string">' create word error!'</span></span><br><span class="line">        <span class="keyword">print</span> e</span><br><span class="line">        errorfile = open(filepath + <span class="string">'/errorlog.txt'</span>, <span class="string">'a'</span>)</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            errorfile.write(CatalogNumber + <span class="string">' create word error! '</span> + time.strftime(<span class="string">'%Y-%m-%d %H:%M:%S'</span>) + <span class="string">'\n'</span>)</span><br><span class="line">        <span class="keyword">except</span> Exception, e:</span><br><span class="line">            doc.Close()</span><br><span class="line">            w.Quit()</span><br><span class="line">            <span class="keyword">raise</span> e</span><br><span class="line">        <span class="keyword">finally</span>:</span><br><span class="line">            errorfile.close()</span><br><span class="line">w.Quit()</span><br></pre></td></tr></table></figure><h3 id="替换word文档属性">替换Word文档属性</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">doc.BuiltInDocumentProperties(<span class="string">'Title'</span>).Value = ProductName</span><br><span class="line">doc.BuiltInDocumentProperties(<span class="string">'Subject'</span>).Value = <span class="string">'Instruction manual (Catalog No.'</span> + CatalogNumber + <span class="string">')'</span></span><br><span class="line">doc.BuiltInDocumentProperties(<span class="string">'Keywords'</span>).Value = ProductName</span><br><span class="line">doc.BuiltInDocumentProperties(<span class="string">'Category'</span>).Value = Ospecies</span><br></pre></td></tr></table></figure><p>参考<a href="http://stackoverflow.com/questions/3022898/python-win32com-automating-word-how-to-replace-text-in-a-text-box" target="_blank" rel="noopener">微软官方说明</a></p><h3 id="替换word长文本">替换Word长文本</h3><p>使用以下语句替换长文本会报错"字符串过长" <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">w.Selection.Find.Execute(OldStrs[j], <span class="literal">False</span>, <span class="literal">False</span>, <span class="literal">False</span>, <span class="literal">False</span>, <span class="literal">False</span>, <span class="literal">True</span>, <span class="number">1</span>, <span class="literal">True</span>, NewStrs[j], <span class="number">2</span>)</span><br></pre></td></tr></table></figure></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">find = w.Selection.Find</span><br><span class="line">find.Text = <span class="string">'#SEQUENCE#'</span></span><br><span class="line"><span class="keyword">while</span> w.Selection.Find.Execute():</span><br><span class="line">    w.Selection.TypeText(Text=SEQUENCE)</span><br></pre></td></tr></table></figure><h3 id="替换word文本框内容">替换Word文本框内容</h3><p>参考以下代码 <a href="http://stackoverflow.com/questions/3022898/python-win32com-automating-word-how-to-replace-text-in-a-text-box" target="_blank" rel="noopener">http://stackoverflow.com/</a> <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> win32com.client</span><br><span class="line"></span><br><span class="line">word = win32com.client.Dispatch(<span class="string">"Word.Application"</span>)</span><br><span class="line">canvas = word.ActiveDocument.Shapes[<span class="number">0</span>]</span><br><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> canvas.CanvasItems:</span><br><span class="line">    <span class="keyword">print</span> item.TextFrame.TextRange.Text</span><br></pre></td></tr></table></figure></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">find = shp.TextFrame.TextRange.Find</span><br><span class="line">find.Text = source</span><br><span class="line">find.Replacement.Text = target</span><br><span class="line">find.Execute(Replace=<span class="number">1</span>, Forward=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Excel </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>局域网部分电脑不能连接网络,局域网共享文件夹,打印机等情况</title>
      <link href="/2016/11/09/%E5%B1%80%E5%9F%9F%E7%BD%91%E9%83%A8%E5%88%86%E7%94%B5%E8%84%91%E4%B8%8D%E8%83%BD%E8%BF%9E%E6%8E%A5%E7%BD%91%E7%BB%9C,%E5%B1%80%E5%9F%9F%E7%BD%91%E5%85%B1%E4%BA%AB%E6%96%87%E4%BB%B6%E5%A4%B9,%E6%89%93%E5%8D%B0%E6%9C%BA%E7%AD%89%E6%83%85%E5%86%B5/"/>
      <url>/2016/11/09/%E5%B1%80%E5%9F%9F%E7%BD%91%E9%83%A8%E5%88%86%E7%94%B5%E8%84%91%E4%B8%8D%E8%83%BD%E8%BF%9E%E6%8E%A5%E7%BD%91%E7%BB%9C,%E5%B1%80%E5%9F%9F%E7%BD%91%E5%85%B1%E4%BA%AB%E6%96%87%E4%BB%B6%E5%A4%B9,%E6%89%93%E5%8D%B0%E6%9C%BA%E7%AD%89%E6%83%85%E5%86%B5/</url>
      
        <content type="html"><![CDATA[<h3 id="问题反应">问题反应</h3><p>今天公司出现网络故障，有2个部门全部不能连接网络。</p><h3 id="正常问题">正常问题</h3><blockquote><p>一台电脑不能上网，找该台电脑的问题<br>一部门电脑不能上网，找该部门交换机<br>多部门电脑不能上网，找主交换机问题<br>全部不能上网，拿电脑直连路由</p></blockquote><h3 id="问题分析">问题分析</h3><p>公司主交换机A<br>部门分交换机B<br>测试电脑C<br>部门不能上网故障，正常情况应该是A模块出现问题。于是重启A，仍然有一个部门故障。<br>重启B，不能解决问题。<br>将C与B直连的线路连接到C，C正常。<br>A,B问题都排除，那么问题在哪？<br>继续尝试，B上只连接C，正常。B上连接该部门全部电脑，故障。<br>找到那条会导致故障的线路，换掉网线，OK.<br>确认问题原因居然是<strong><em>网线！</em></strong></p><h3 id="结论">结论</h3><p>子交换机上的网线问题会影响主交换。</p><h3 id="共享打印机安装出现0x00000709">共享打印机安装出现0x00000709</h3><p>解决办法：重启打印机服务器的Print Spooler服务，重启本地计算机</p><h3 id="账号密码问题">账号密码问题</h3><p>局域网有xp电脑可以正常访问共享电脑，排序账号密码问题。</p><h3 id="共享设置问题">共享设置问题</h3><p>xp系统访问正常，win7系统访问显示“帐号密码错误”。于是想到共享设置问题。</p><blockquote><p>开始=&gt;<br>运行=&gt;<br>gpedit.msc=&gt;<br>本地计算机策略=&gt;<br>计算机配置=&gt;<br>Windows设置=&gt;<br>安全设置=&gt;<br>本地策略=&gt;<br>安全选项=&gt;<br>网络安全：LAN管理器身份验证级别=&gt;<br>发送LM &amp; NTLM响应</p></blockquote><p>但是之前win7是可以正常访问的，所以该项设置是正确的。</p><h3 id="时间设置问题">时间设置问题</h3><p>于是询问是什么时候不能访问的，告之电脑蓝屏重启后。那么原因自然是蓝屏导致共享电脑设置的时间出现错误。</p><blockquote><p>如果win7的系统时间和访问的共享文件夹的创建时间间隔太长的话，会出现此现象。这是win7的安全机制造成的。<br>将共享电脑时间设置为当前时间即可</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows常用软件</title>
      <link href="/2016/11/08/Windows%E5%B8%B8%E7%94%A8%E8%BD%AF%E4%BB%B6/"/>
      <url>/2016/11/08/Windows%E5%B8%B8%E7%94%A8%E8%BD%AF%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<h3 id="压缩软件7-zip">压缩软件7-zip</h3><p>终端命令(需要将安装目录添加到环境变量)</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">7z a file.zip filefold #添加文件压缩  </span><br><span class="line">7z e file.zip filefold #释放文件解压</span><br></pre></td></tr></table></figure><h3 id="电脑清理ccleaner">电脑清理ccleaner</h3><p>电脑清理工具：清理注册表，系统垃圾文件 下载地址 <a href="http://pan.baidu.com/s/1c0G34re" target="_blank" rel="noopener">http://pan.baidu.com/s/1c0G34re</a></p><h3 id="卸载软件total-uninstall">卸载软件Total Uninstall</h3><p>电脑清理工具：卸载软件<br>破解版v6.16.0下载地址<a href="http://pan.baidu.com/s/1mgwAta4" target="_blank" rel="noopener">http://pan.baidu.com/s/1mgwAta4</a></p><h3 id="驱动管理工具driverdownloader">驱动管理工具DriverDownloader</h3><p>下载地址 <a href="http://pan.baidu.com/s/1qW9tPF2" target="_blank" rel="noopener">http://pan.baidu.com/s/1qW9tPF2</a><br>需要使用代理更新驱动，在Settings设置(前提是设置了代理上网)</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">proxy 127.0.0.1  </span><br><span class="line">port 1080</span><br></pre></td></tr></table></figure><p><em>如果提示its usage limit 将1009改成逐渐+1，改成1010，1011等等等等</em></p><h3 id="下载工具idminternet-download-manager6.25版">下载工具IDM(Internet Download Manager)6.25版</h3><p>下载地址<br><a href="http://www.internetdownloadmanager.com/download.html" target="_blank" rel="noopener">官网</a><br><a href="http://pan.baidu.com/s/1c0Be5Bq" target="_blank" rel="noopener">官网下载版</a><br><a href="http://pan.baidu.com/s/1eQfmv8e" target="_blank" rel="noopener">破解版</a></p><h3 id="终端管理工具cmder">终端管理工具Cmder</h3><p>下载地址<a href="http://cmder.net/" target="_blank" rel="noopener">官方</a></p><h3 id="文件图片批量处理软件">文件图片批量处理软件</h3><p>Bulk Rename Utility<br>下载地址<a href="http://www.bulkrenameutility.co.uk/Main_Intro.php" target="_blank" rel="noopener">官方</a><a href="http://pan.baidu.com/s/1sjpaa1R" target="_blank" rel="noopener">云盘</a></p><h3 id="文件资源管理器total-commander">文件资源管理器Total Commander</h3><p><a href="http://pan.baidu.com/s/1dEvQm5b" target="_blank" rel="noopener">下载</a></p><p>快捷键</p><ul><li>F3——查看文件<br></li><li>F4——编辑文件<br></li><li>F5——拷贝文件<br></li><li>F6——重命名、移动文件<br></li><li>F7——新建文件夹<br></li><li>F8——删除文件、文件夹<br></li><li>F10——菜单条激活开关<br></li><li>ALT<br></li><li>Alt+F1——改变左边窗口的驱动器<br></li><li>Alt+F2——改变右边窗口的驱动器<br></li><li>Alt+Shift+F3——使用内部查看程序浏览文件<br></li><li>Alt+F5——压缩文件/文件夹<br></li><li>Alt+Shift+F5——压缩文件/文件夹，并删除原文件/文件夹<br></li><li>Alt+F7——查找文件/文件夹<br></li><li>Alt+F9——文件解压缩<br></li><li>Alt+left/right——切换至上次进入的前一个/后一个文件夹<br></li><li>Alt+down——显示历史访问地址列表<br></li><li>SHIFT<br></li><li>Shift+F4——用外部编辑器（UltraEdit）创建新文件<br></li><li>Shift+F5——复制（重命名）文件/文件夹到当前文件夹<br></li><li>Shift+Ctrl+F5——创建所选对象的快捷方式<br></li><li>Shift+F6——重命名文件/文件夹<br></li><li>Shift+ESC——Total Commander最小化<br></li><li>NUM<br></li><li>NUM + ——选择属性相同的一组文件<br></li><li>NUM — ——清除所选文件中属性相同的一组文件<br></li><li>NUM * ——反向选择<br></li><li>NUM / ——恢复选择<br></li><li>CTRL+NUM + ——全部选择<br></li><li>CTRL+NUM - ——清除全部选择<br></li><li>Alt+NUM + ——选择与当前光标选中的文件扩展名相同的一组文件<br></li><li>CTRL<br></li><li>Ctrl+PgUP——回上一级目录<br></li><li>Ctrl+left/right——在左边/右边文件窗口中显示当前文件夹列表<br></li><li>CTRL+/——返回根目录<br></li><li>CTRL+SHIFT+F1——缩略图视图（图片预览）<br></li><li>CTRL+F2——显示文件/文件夹详细资料<br></li><li>CTRL+F3——以名称排序<br></li><li>CTRL+F4——以扩展名排序<br></li><li>CTRL+F5——以文件的创建时间排序<br></li><li>CTRL+F6——以文件的大小排序<br></li><li>CTRL+F8——显示目录结构<br></li><li>CTRL+F9——打印当前光标处的文件<br></li><li>CTRL+F10——显示所有文件<br></li><li>CTRL+F11——显示所有可执行文件/隐藏非执行文件<br></li><li>CTRL+ENTER——将当前文件名复制到TC的命令行<br></li><li>CTRL+SHIFT+ENTER——将当前完整路径及文件名复制到TC的命令行<br></li><li>CTRL+D——打开常用文件夹列表（可作书签用）<br></li><li>CTRL+F——连接到FTP服务器<br></li><li>CTRL+SHIFT+F——断开与FTP服务器的连接<br></li><li>CTRL+Q——打开/关闭快速查看<br></li><li>CTRL+U——切换左右文件窗口显示内容<br></li><li>CTRL+W——关闭当前目录标签<br></li><li>CTRL+SHIFT+W——关闭所有目录标签<br></li><li>CTRL+Y——清空命令行输入框并置光标于命令行<br></li><li>ESC——清空命令行输入框并置光标于文件窗口<br></li><li>INSERT——选择文件/目录<br></li><li>SPACE——选择文件/目录<br></li><li>SHIFT+ENTER——<br></li><li>1.当命令行输入框有字符串命令：运行命令行的字符串命令<br></li><li>2.当光标位于压缩文件用相应的压缩工具打开压缩文件<br></li><li>3.位于压缩文件内：将所选中的文件解到临时文件目录，并试图将其做压缩文件的解压处理<br></li><li>ALT+ENTER——显示所选文件属性<br></li><li>Total Commander常用快捷键<br></li><li>显示编辑文件：<br></li><li>F3：这个恐怕是使用程度最高的快捷键了，专门用来查看文件。需要说明的是，默认安装的TC 5.5版只能查看文本及一些关联的影像文件，图片只支持BMP等很少的种类。如需要查看更多类型的文件，还需要安装插件。<br></li><li>Ctrl + Q：快速预览。<br></li><li>F4：主要用来编辑文本文件。可以设置外部程序来编辑文本(我设置的是Editplus)。<br></li><li>Shift + F4： 新建文本文件，调用记事本编辑（自定义编辑器）。<br></li><li>Ctrl + Z： 编辑文件/文件夹的说明。<br></li><li>Ctlt + Enter：查看文件或文件夹属性。<br></li><li>空格键：选择或取消选择文件，如在文件夹按下，则计算该文件夹占用空间。<br></li><li>Shift + 空格： 选中光标所在，不计算文件夹的容量。<br></li><li>Alt + Shift + Enter：计算当前窗格下所有文件夹的占用空间，设置后再点击顶栏的“大小”可使文件夹参与排序，迅速找到占用空间最大的文件夹。<br></li><li>Ctrl+Shift+Enter获取光标所在处文件/文件夹的绝对路径并显示在命令行里。 操作复制文件<br></li><li>F5：复制文件，这个也是最常用的快捷键之一。TC分为左、右两个窗口，我们把光标选中的文件拷贝到另一个窗口。另外，TC也支持以鼠标拖拽方式复制文件，两者哪个更方便完全由你的个人喜好决定。<br></li><li>Shift + F5： 同目录复制<br></li><li>F6：移动文件，将光标选中的文件移动到另一个窗口。<br></li><li>shift+Ins TC中的块拷贝<br></li><li>SHIFT + F6 重命名文件（F2修改版）<br></li><li>Ctrl + M： 批量更改文件名。<br></li><li>空格 选择文件/文件夹(如同 INSERT)。如果光标处文件夹还未选中，按空格键后，计算其占用空间（含子文件夹）并用字节数代替 （详细资料显示方式下）。通过 '配置' - '选项' - '操作' - '用空格键选择' 可禁用该特性。 右键长按 在NC风格下这是调用 Windows 风格下的右键菜单<br></li><li>Shift + F10——显示关联试菜单，类似于鼠标右键的效果<br></li><li>Shift + F10——显示关联试菜单，类似于鼠标右键的效果<br></li><li>新建<br></li><li>SHIFT + F4 新建文本文件，加载到编辑器(自定义）<br></li><li>F7：新建一个或多层文件夹。可以像DOS那样新建多层的目录，比如c:/file/a/b/c 删除<br></li><li>F8 / Del：删除文件。与Windows一样，按住Shift + Delete，则直接删除而不放到回收站中。<br></li><li>搜索定位<br></li><li>Alt + Ctrl + 任意字母 或 Alt+任意字母 或 任意字母 ：快速定位文件 [菜单：配置--选项--快速搜索 中设置]<br></li><li>Alt + F7：搜索。有了TC之后，我再没用过Windows系统自带的搜索。TC的搜索简单，而且速度快，功能全，非常好用。<br></li><li>Ctrl + D：常用文件夹列表。按下会弹出浮动窗口，能够快速跳转到设定好的文件夹中。(非常好用）<br></li><li>ctrl + s: 快速搜索只显示所选文件<br></li><li>Alt + ↓：历史文件夹列表，可以快速回溯到你曾经到过的某个文件夹。<br></li><li>Alt + ← 或 →：快速后退或前进历史目录。<br></li><li>Tab： 左右窗口间切换。<br></li><li>Alt + Tab： 窗口标签间切换。<br></li><li>空格键：选择或取消选择文件，如在文件夹按下，则计算该文件夹占用空间。<br></li><li>_(小键盘星号键)：反向选择。<br></li><li>+(小键盘加号键)：选择全部或指定类型的文件。<br></li><li>-(小键盘加号键)：取消选择全部或指定类型的文件。<br></li><li>Ctrl + A：全选当前窗口所有文件。与Windows资源管理器不同，按下此快捷键并不选中文件夹。<br></li><li>Shift + ↓ 和 Shift + ↑：选择或取消选择文件或文件夹。<br></li><li>Ctrl+↑： 在当前窗口的新标签中打开光标处文件夹<br></li><li>Ctrl+↓： 在对面窗口的新标签中打开光标处文件夹<br></li><li>Ctrl + ←/→：如果光标在窗格顶部，将左/右窗格的显示内容调整为一样的；如果光标所在处是一个文件夹，在左/右窗格打开此文件夹；如果光标所在处是一个压缩文件，在左/右窗格打开此文件。<br></li><li>Ctrl + num_ 锁定/解锁当前标签。<br></li><li>ALT+F1 改变左侧窗口的驱动器<br></li><li>ALT+F2 改变右侧窗口的驱动器<br></li><li>压缩文件<br></li><li>Alt + F5：压缩选中的文件。按下回车，生成后的压缩包将会出现另一个目的窗口中。<br></li><li>Alt + F6 解压缩文件<br></li><li>显示方式<br></li><li>Ctrl + B： 显示当前文件夹及子文件夹下的所有文件。<br></li><li>Ctrl + R： 刷新<br></li><li>Ctrl + F1-8、10-12 不同方式在窗口显示文件列表</li></ul><h3 id="翻译软件-灵格斯">翻译软件 灵格斯</h3><p><a href="http://www.lingoes.cn/" target="_blank" rel="noopener">http://www.lingoes.cn/</a></p><h3 id="coreldrawx7">CorelDRAWX7</h3><p><a href="http://pan.baidu.com/s/1ntVwlgH" target="_blank" rel="noopener">百度网盘</a></p><h3 id="xmind7">XMIND7</h3><p><a href="http://pan.baidu.com/s/1i3OdeVr" target="_blank" rel="noopener">百度网盘</a></p>]]></content>
      
      
      <categories>
          
          <category> 办公 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>硬链接软链接方式</title>
      <link href="/2016/11/08/%E7%A1%AC%E9%93%BE%E6%8E%A5%E8%BD%AF%E9%93%BE%E6%8E%A5%E6%96%B9%E5%BC%8F/"/>
      <url>/2016/11/08/%E7%A1%AC%E9%93%BE%E6%8E%A5%E8%BD%AF%E9%93%BE%E6%8E%A5%E6%96%B9%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<h3 id="硬链结和符号链接的区别">硬链结和符号链接的区别</h3><p>硬连接记录的是目标的 inode,符号连接记录的是目标的 path。<br>软连接就像是快捷方式,而硬连接就像是备份!符号连接可以做跨分区的 link；而 硬连接由于 inode 的缘故，只能在本分区中做 link.所以,符号连接的使用频率要高的多。</p><h3 id="软链接文件">软链接文件</h3><p>软链接又叫符号链接，这个文件包含了另一个文件的路径名。可以是任意文件或目录，可以链接不同文件系统的文件。和win下的快捷方式差不多。链接文件甚至可以链接不存在的文件，这就产生一般称之为"断链"的问题(或曰“现象")，链接文件甚至可以循环链接自己。类似于编程语言中的递归。 命令格式：</p><pre><code>ln [-s] source_path target_path </code></pre><h3 id="硬链接文件">硬链接文件</h3><p>info ln 命令告诉您，硬链接是已存在文件的另一个名字，硬连接的命令是</p><pre><code>ln -d existfile newfile </code></pre><p>硬链接文件有两个限制 1、不允许给目录创建硬链接；<br>2、只有在同一文件系统中的文件之间才能创建链接。<br>对硬链接文件进行读写和删除操作时候，结果和软链接相同。但如果我们删除硬链接文件的源文件，硬链接文件仍然存在，而且保留了愿有的内容。这时，系统就“忘记”了它曾经是硬链接文件。而把他当成一个普通文件。修改其中一个，与其连接的文件同时被修改</p><h3 id="windows-下创建硬链接只能适用于-ntfs-文件系统">Windows 下创建硬链接，只能适用于 NTFS 文件系统</h3><pre><code>fsutil hardlink create NewFileName ExistingFileName</code></pre><h3 id="windows-下创建软链接">Windows 下创建软链接</h3><p>NTFS只支持对目录的软链接，微软把它称作 junction。但是对于文件的软链接，微软也有提供解决方案，那就是快捷方式(Shortcut，.lnk 文件)。不过软链接和快捷方式不是一个层次上的东西，前者是底层文件系统的功能，后者是应用层的功能。Windows 下目录的快捷方式用 dir 看起来是个文件。<br>命令方式</p><pre><code>junction  LinkDirectory ExistingDirectory</code></pre><p>例如</p><pre><code>junction d:\link c:\winnt</code></pre><p>将为c:\winnt 建立一个链接目录 d:\link，C和D分区都要是 NTFS 格式，在资源管理器和 dir 列示中 d:\link 都以目录的面目存在的。d:\link 就像是 c:\winnt 的一个引用一般，删除 d:\link 目录中的内容也就是删除了 c:\winnt 中的内容，但删除 d:\link 本身是不会影响到 c:\winnt 的。</p><h3 id="win7可以使用mklink命令">win7可以使用mklink命令</h3><pre><code>λ mklink /?创建符号链接。MKLINK [[/D] | [/H] | [/J]] Link Target        /D      创建目录符号链接。默认为文件                符号链接。        /H      创建硬链接而非符号链接。        /J      创建目录联接。        Link    指定新的符号链接名称。        Target  指定新链接引用的路径                (相对或绝对)。</code></pre><p>其中\D \J区别如下</p><pre><code>E:\λ mkdir SourceDirE:\λ mklink /D DTargetDir\ SourceDir\为 DTargetDir\ &lt;&lt;===&gt;&gt; SourceDir\ 创建的符号链接E:\λ mklink /J JTargetDir\ SourceDir\为 JTargetDir\ &lt;&lt;===&gt;&gt; SourceDir\ 创建的联接</code></pre><p><img src="http://7xq3ry.com1.z0.glb.clouddn.com/20160127111417.png"> <img src="http://7xq3ry.com1.z0.glb.clouddn.com/20160127111459.png"> SourceDir,JTargetDir,DTargetDir 3个文件夹内部修改/增加/删除都会互相影响。<br>复制JTargetDir, 不会出现新的目录，文件夹文件内部复制 <img src="http://7xq3ry.com1.z0.glb.clouddn.com/20160127112544.png"> 这样复制会影响DTargetDir和SourceDir，慎用！ 复制DTargetDir文件夹会生成一个全新的文件夹，不会被其他文件夹影响，也不能影响其他文件夹。 复制JTargetDir的父级目录不会影响该目录，复制生成的目录下JTargetDir目录会变成独立的文件夹且文件夹内为空 <img src="http://7xq3ry.com1.z0.glb.clouddn.com/20160127132448.png"> ![][0.048387699760496616] [0.048387699760496616]: http://7xq3ry.com1.z0.glb.clouddn.com/20160127132633.png 删除JTargetDir,DTargetDir均不影响SourceDir<br>删除SorceDir,会使得JTargetDir和DTargetDir失效 使用mklink /D时需要保证源目录和目标目录在同一个目录下，否则创建成功但不能正常访问</p><h3 id="linux服务器的软硬件链接">linux服务器的软硬件链接</h3><p>软链接可以跨文件系统，硬链接不可以</p><pre><code>ln source target # 硬链接ln -s source target # 软链接</code></pre><p>软链接如果跨文件夹，必须使用绝对路径,否则会出现软链接无法访问的情况</p><pre><code>ln -s /var/www/html/Upload/product/manual/en/ /var/www/html/manual</code></pre>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Php将pdf转为jpg，png图片</title>
      <link href="/2016/11/08/Php%E5%B0%86pdf%E8%BD%AC%E4%B8%BAjpg%EF%BC%8Cpng%E5%9B%BE%E7%89%87/"/>
      <url>/2016/11/08/Php%E5%B0%86pdf%E8%BD%AC%E4%B8%BAjpg%EF%BC%8Cpng%E5%9B%BE%E7%89%87/</url>
      
        <content type="html"><![CDATA[<h2 id="环境">环境</h2><p>WINDOW,PHP5.2</p><h3 id="安装">安装</h3><p>安装ImageMagick并添加环境变量 <a href="http://www.imagemagick.org/script/index.php" target="_blank" rel="noopener">官网</a><br>安装php扩展php_imagick.dll,并在php.ini开启 <a href="https://pecl.php.net/package/imagick" target="_blank" rel="noopener">官网</a><br>查看是否载入扩展 <figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">phpinfo();</span><br></pre></td></tr></table></figure></p><p>安装Ghostscript并添加环境变量 <a href="http://www.ghostscript.com/download/" target="_blank" rel="noopener">官网</a></p><h3 id="下载地址">下载地址</h3><p><a href="http://pan.baidu.com/s/1kTOkhFL" target="_blank" rel="noopener">百度网盘</a></p><h3 id="测试是否可以正常运行">测试是否可以正常运行</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> convert.exe SEZ588Hu.pdf SEZ588Hu.png</span></span><br></pre></td></tr></table></figure><h3 id="php代码">php代码</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="comment">// 输出到文件</span></span><br><span class="line">    $im = <span class="keyword">new</span> imagick(<span class="string">'A.pdf[0]'</span>);</span><br><span class="line">    $im-&gt;setImageFormat(<span class="string">'jpg'</span>);</span><br><span class="line">    $im-&gt;writeImages(<span class="string">'A.jpg'</span>, <span class="keyword">true</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="comment">// 输出到浏览器 </span></span><br><span class="line">    $im = <span class="keyword">new</span> imagick(<span class="string">'file.pdf[0]'</span>);</span><br><span class="line">    $im-&gt;setImageFormat(<span class="string">'jpg'</span>);</span><br><span class="line">    header(<span class="string">'Content-Type: image/jpeg'</span>);</span><br><span class="line">    <span class="keyword">echo</span> $im;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Php </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Oracle VirtualBox入门基础</title>
      <link href="/2016/11/08/Oracle%20VirtualBox%E5%85%A5%E9%97%A8%E5%9F%BA%E7%A1%80/"/>
      <url>/2016/11/08/Oracle%20VirtualBox%E5%85%A5%E9%97%A8%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<h3 id="安装和主机共享">安装和主机共享</h3><ul><li>点击设备，安装增强功能</li></ul><h3 id="共享剪贴板">共享剪贴板</h3><ul><li>点击设备，共享剪贴板，双向</li></ul><h3 id="快捷键">快捷键</h3><ul><li>显示客户机菜单 右Ctrl+C 全屏快捷键 右Ctrl+F</li></ul><h3 id="中网络连接形式以下内容来自网络">4中网络连接形式(以下内容来自网络)</h3><p><strong>第一种 NAT模式</strong><br>解释： NAT模式是最简单的实现虚拟机上网的方式，你可以这样理解：Vhost访问网络的所有数据都是由主机提供的，vhost并不真实存在于网络中，主机与网络中的任何机器都不能查看和访问到Vhost的存在。<br>虚拟机与主机关系：<br>只能单向访问，虚拟机可以通过网络访问到主机，主机无法通过网络访问到虚拟机。<br>虚拟机与网络中其他主机的关系：<br>只能单向访问，虚拟机可以访问到网络中其他主机，其他主机不能通过网络访问到虚拟机。<br>虚拟机与虚拟机之间的关系：<br>相互不能访问，虚拟机与虚拟机各自完全独立，相互间无法通过网络访问彼此。<br>IP:10.0.2.15<br>网关：10.0.2.2<br>DNS：10.0.2.3<br>一台虚拟机的多个网卡可以被设定使用 NAT， 第一个网卡连接了到专用网 10.0.2.0，第二个网卡连接到专用网络 10.0.3.0，等等。默认得到的客户端ip（IP Address）是10.0.2.15，网关（Gateway）是10.0.2.2，域名服务器（DNS）是10.0.2.3，可以手动参考这个进行修改。<br>NAT方案优缺点：<br>笔记本已插网线时： 虚拟机可以访问主机，虚拟机可以访问互联网，在做了端口映射后（最后有说明），主机可以访问虚拟机上的服务（如数据库）。<br>笔记本没插网线时： 主机的“本地连接”有红叉的，虚拟机可以访问主机，虚拟机不可以访问互联网，在做了端口映射后，主机可以访问虚拟机上的服务（如数据库）。</p><p><strong>第二种 Bridged Adapter模式</strong><br>解释：<br>网桥模式是我最喜欢的用的一种模式，同时，模拟度也是相当完美。你可以这样理解，它是通过主机网卡，架设了一条桥，直接连入到网络中了。因此，它使得虚拟机能被分配到一个网络中独立的IP，所有网络功能完全和在网络中的真实机器一样。<br>虚拟机与主机关系：<br>可以相互访问，因为虚拟机在真实网络段中有独立IP，主机与虚拟机处于同一网络段中，彼此可以通过各自IP相互访问。<br>虚拟机于网络中其他主机关系：<br>可以相互访问，同样因为虚拟机在真实网络段中有独立IP，虚拟机与所有网络其他主机处于同一网络段中，彼此可以通过各自IP相互访问。<br>虚拟机于虚拟机关系：<br>可以相互访问，原因同上。<br>IP：一般是DHCP分配的，与主机的“本地连接”的IP 是同一网段的。虚拟机就能与主机互相通信。<br>笔记本已插网线时：（若网络中有DHCP服务器）主机与虚拟机会通过DHCP分别得到一个IP，这两个IP在同一网段。 主机与虚拟机可以ping通，虚拟机可以上互联网。<br>笔记本没插网线时：主机与虚拟机不能通信。主机的“本地连接”有红叉，就不能手工指定IP。虚拟机也不能通过DHCP得到IP地址，手工指定IP后，也无法与主机通信，因为主机无IP。<br>这时主机的VirtualBox Host-Only Network 网卡是有ip的，192.168.56.1。虚拟机就算手工指定了IP 192.168.56.*，也ping不能主机。</p><p><strong>第三种 Internal模式</strong><br>解释：<br>内网模式，顾名思义就是内部网络模式，虚拟机与外网完全断开，只实现虚拟机于虚拟机之间的内部网络模式。<br>虚拟机与主机关系：<br>不能相互访问，彼此不属于同一个网络，无法相互访问。<br>虚拟机与网络中其他主机关系：<br>不能相互访问，理由同上。<br>虚拟机与虚拟机关系：<br>可以相互访问，前提是在设置网络时，两台虚拟机设置同一网络名称。如上配置图中，名称为intnet。<br>IP: VirtualBox的DHCP服务器会为它分配IP ，一般得到的是192.168.56.101，因为是从101起分的，也可手工指定192.168.56.*。<br>笔记本已插网线时：虚拟机可以与主机的VirtualBox Host-Only Network 网卡通信<br>这种方案不受主机本地连接（网卡）是否有红叉的影响。</p><p><strong>第四种 Host-only Adapter模式</strong><br>解释：<br>主机模式，这是一种比较复杂的模式，需要有比较扎实的网络基础知识才能玩转。可以说前面几种模式所实现的功能，在这种模式下，通过虚拟机及网卡的设置都可以被实现。<br>我们可以理解为Vbox在主机中模拟出一张专供虚拟机使用的网卡，所有虚拟机都是连接到该网卡上的，我们可以通过设置这张网卡来实现上网及其他很多功能，比如（网卡共享、网卡桥接等）。<br>虚拟机与主机关系<br>默认不能相互访问，双方不属于同一IP段，host-only网卡默认IP段为192.168.56.X 子网掩码为255.255.255.0，后面的虚拟机被分配到的也都是这个网段。通过网卡共享、网卡桥接等，可以实现虚拟机于主机相互访问。<br>虚拟机与网络主机关系<br>默认不能相互访问，原因同上，通过设置，可以实现相互访问。<br>虚拟机与虚拟机关系<br>默认可以相互访问，都是同处于一个网段。<br>虚拟机访问主机 用的是主机的VirtualBox Host-Only Network网卡的IP：192.168.56.1 ，不管主机“本地连接”有无红叉，永远通。<br>主机访问虚拟机，用是的虚拟机的网卡3的IP： 192.168.56.101 ，不管主机“本地连接”有无红叉，永远通。<br>虚拟机访问互联网，用的是自己的网卡2， 这时主机要能通过“本地连接”有线上网，（无线网卡不行） 通过对以上几种网络模式的了解，我们就可以灵活运用，模拟组建出我们所想要的任何一种网络环境了。<br>比如我想模拟出来一个一台主机，监控一个局域网上网情况的网络环境。<br>首先我开启了两台虚拟机vhost1与vhost2，当然如果硬件允许，我同样可以再增加vhost3、vhost4…<br>所有的vhost我都设置成internat内网模式，网络名称为intnal，网关为192.168.56.100，意思就是通过 192.168.56.100网卡上网。其中有一台vhost1我设置为双网卡，一张为内网模式（192.168.56.100），一张为网桥模式 （192.168.1.101）。两张网卡设置双网卡共享上网<br>虚拟机之间为局域网，其中有一台虚拟机vhost1通过与外网相连，所有局域网中的虚拟机又通过vhost1来实现上外网。这样vhost1就可以监控整个虚拟机局域网上网情况了。</p><h3 id="xp下全屏">xp下全屏</h3><p>安装增强包后再全局设置里设置成本机的分辨率 <img src="http://7xq3ry.com1.z0.glb.clouddn.com/20160119172333.png"></p><h3 id="ubuntu全屏">Ubuntu全屏</h3><p>首先，安装增强包，点击Run Software <img src="http://7xq3ry.com1.z0.glb.clouddn.com/20160114170837.png"> 重启虚拟机<br>点击设备-&gt;分配光驱-&gt;移除虚拟盘<br>点击 右Ctrl+F全屏快捷键</p><h3 id="ubuntu设置桥接网卡">Ubuntu设置桥接网卡</h3><p>在设置-&gt;网络-&gt;连接方式-&gt;桥接网卡 <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo vim /etc/network/interfaces</span></span><br></pre></td></tr></table></figure></p><p>修改配置文件,对应的信息要和主机的一致，保证虚拟机和主机在同一IP段 <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> The primary network interface</span></span><br><span class="line">auto eth0</span><br><span class="line">iface eth0 inet static</span><br><span class="line">address 192.168.2.1</span><br><span class="line">gateway 192.168.2.254</span><br><span class="line">netmask 255.255.255.0</span><br><span class="line"><span class="meta">#</span><span class="bash">network 192.168.2.0</span></span><br><span class="line"><span class="meta">#</span><span class="bash">broadcast 192.168.2.255</span></span><br></pre></td></tr></table></figure></p><p>重启 <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo /etc/init.d/networking restart</span></span><br></pre></td></tr></table></figure></p><p>在主机中设置上级路由器，放行虚拟机的MAC地址保证虚拟机可以访问外网。</p>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
</search>
