<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Wellread</title>
  
  <subtitle>饱读诗书</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.zhuohc.com/"/>
  <updated>2019-07-24T06:18:15.997Z</updated>
  <id>http://www.zhuohc.com/</id>
  
  <author>
    <name>www.zhuohc.om</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>minicat-manjaro-18.0.4-dev</title>
    <link href="http://www.zhuohc.com/2019/07/24/minicat-manjaro-18-0-4-dev/"/>
    <id>http://www.zhuohc.com/2019/07/24/minicat-manjaro-18-0-4-dev/</id>
    <published>2019-07-24T06:11:44.000Z</published>
    <updated>2019-07-24T06:18:15.997Z</updated>
    
    <content type="html"><![CDATA[<h4 id="添加中科大源"><a href="#添加中科大源" class="headerlink" title="添加中科大源"></a>添加中科大源</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo vi /etc/pacman.conf</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 在文件末尾添加</span><br><span class="line">[archlinuxcn]</span><br><span class="line">SigLevel = Optional TrustedOnly</span><br><span class="line">Server = https://mirrors.ustc.edu.cn/archlinuxcn/$arch</span><br></pre></td></tr></table></figure><h4 id="导入GPG-Key"><a href="#导入GPG-Key" class="headerlink" title="导入GPG Key"></a>导入GPG Key</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo pacman -Syy &amp;&amp; sudo pacman -S archlinuxcn-keyring</span><br></pre></td></tr></table></figure><h4 id="安装基本开发编译软件"><a href="#安装基本开发编译软件" class="headerlink" title="安装基本开发编译软件"></a>安装基本开发编译软件</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -S --needed base-devel</span><br></pre></td></tr></table></figure><h4 id="安装git"><a href="#安装git" class="headerlink" title="安装git"></a>安装git</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo pacman -S git</span><br></pre></td></tr></table></figure><h4 id="安装chrome"><a href="#安装chrome" class="headerlink" title="安装chrome"></a>安装chrome</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo pacman -S google-chrome</span><br></pre></td></tr></table></figure><h4 id="安装搜狗拼音输入法"><a href="#安装搜狗拼音输入法" class="headerlink" title="安装搜狗拼音输入法"></a>安装搜狗拼音输入法</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ sudo pacman -S fcitx-im #默认全部安装</span><br><span class="line">$ sudo pacman -S fcitx-configtool</span><br><span class="line">$ sudo pacman -S fcitx-sogoupinyin</span><br></pre></td></tr></table></figure><h4 id="编辑输入法配置文件"><a href="#编辑输入法配置文件" class="headerlink" title="编辑输入法配置文件"></a>编辑输入法配置文件</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ sudo nano ~/.xprofile</span><br><span class="line"></span><br><span class="line">export GTK_IM_MODULE=fcitx</span><br><span class="line">export QT_IM_MODULE=fcitx</span><br><span class="line">export XMODIFIERS=&quot;@im=fcitx&quot;</span><br><span class="line"># 重启后输入法就可以正常使用。</span><br></pre></td></tr></table></figure><h4 id="安装vim"><a href="#安装vim" class="headerlink" title="安装vim"></a>安装vim</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo pacman -S vim</span><br></pre></td></tr></table></figure><p>安装vim基础配置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ curl https://raw.githubusercontent.com/wklken/vim-for-server/master/vimrc &gt; ~/.vimrc</span><br></pre></td></tr></table></figure><h4 id="安装tmux和-tmux"><a href="#安装tmux和-tmux" class="headerlink" title="安装tmux和.tmux"></a>安装tmux和.tmux</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ sudo pacman -S tmux</span><br><span class="line">$ cd ~</span><br><span class="line">$ git clone https://github.com/gpakosz/.tmux.git</span><br><span class="line">$ ln -s -f .tmux/.tmux.conf</span><br><span class="line">$ cp .tmux/.tmux.conf.local .</span><br></pre></td></tr></table></figure><h4 id="安装zsh和oh-my-zsh"><a href="#安装zsh和oh-my-zsh" class="headerlink" title="安装zsh和oh-my-zsh"></a>安装zsh和oh-my-zsh</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ sudo pacman -S zsh</span><br><span class="line">$ sh -c &quot;$(curl -fsSL https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh)&quot;</span><br></pre></td></tr></table></figure><h4 id="安装yaourt"><a href="#安装yaourt" class="headerlink" title="安装yaourt"></a>安装yaourt</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ sudo pacman -S --needed base-devel git wget yajl</span><br><span class="line">$ cd /tmp</span><br><span class="line">$ git clone https://aur.archlinux.org/package-query.git</span><br><span class="line">$ cd package-query/</span><br><span class="line">$ makepkg -si &amp;&amp; cd /tmp/</span><br><span class="line">$ git clone https://aur.archlinux.org/yaourt.git</span><br><span class="line">$ cd yaourt/</span><br><span class="line">$ makepkg -si</span><br></pre></td></tr></table></figure><h4 id="安装shadowsocks"><a href="#安装shadowsocks" class="headerlink" title="安装shadowsocks"></a>安装shadowsocks</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ git clone https://aur.archlinux.org/shadowsocks-qt5-git.git</span><br><span class="line">$ cd shadowsocks-qt5-git</span><br><span class="line">$ less PKGBUILD  # 查看</span><br><span class="line">$ makepkg -si  # 安装</span><br></pre></td></tr></table></figure><h4 id="设置ssh连接不断开"><a href="#设置ssh连接不断开" class="headerlink" title="设置ssh连接不断开"></a>设置ssh连接不断开</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># vim ~/.ssh/config</span><br><span class="line">Host *</span><br><span class="line">    ServerAliveInterval 60</span><br></pre></td></tr></table></figure><h4 id="安装jetbrain全家桶"><a href="#安装jetbrain全家桶" class="headerlink" title="安装jetbrain全家桶"></a>安装jetbrain全家桶</h4><p><a href="http://idea.lanyus.com/" target="_blank" rel="noopener">jetbrain激活参考地址</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ sudo vim /etc/hosts</span><br><span class="line"># 添加以下两行代码</span><br><span class="line">0.0.0.0 account.jetbrains.com</span><br><span class="line">0.0.0.0 www.jetbrains.com</span><br></pre></td></tr></table></figure><h4 id="安装python开发环境"><a href="#安装python开发环境" class="headerlink" title="安装python开发环境"></a>安装python开发环境</h4><p><a href="https://github.com/zhcshine/wellread/blob/master/python/environment.md" target="_blank" rel="noopener">python开发环境</a></p><a href="/2016/11/09/python入门基础/" title="python开发环境">python开发环境</a><h4 id="安装rabbitmq"><a href="#安装rabbitmq" class="headerlink" title="安装rabbitmq"></a>安装rabbitmq</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ sudo pacman -S rabbitmq rabbitmqadmin</span><br><span class="line">$ sudo systemctl enable rabbitmq.service  # 开机启动</span><br><span class="line">$ sudo systemctl start rabbitmq.service  # 启动</span><br><span class="line">$ rabbitmq-plugins enable rabbitmq_management  # 开启web界面</span><br></pre></td></tr></table></figure><h4 id="安装redis"><a href="#安装redis" class="headerlink" title="安装redis"></a>安装redis</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ sudo pacman -S redis</span><br><span class="line">$ sudo systemctl enable redis.service  # 开机启动</span><br><span class="line">$ sudo systemctl start redis.service  # 启动</span><br></pre></td></tr></table></figure><p>设置密码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ sudo vim /etc/redis.conf</span><br><span class="line">redispassword password</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;添加中科大源&quot;&gt;&lt;a href=&quot;#添加中科大源&quot; class=&quot;headerlink&quot; title=&quot;添加中科大源&quot;&gt;&lt;/a&gt;添加中科大源&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gut
      
    
    </summary>
    
    
      <category term="linux" scheme="http://www.zhuohc.com/tags/linux/"/>
    
      <category term="manjaro" scheme="http://www.zhuohc.com/tags/manjaro/"/>
    
  </entry>
  
  <entry>
    <title>c开发gtk+入门基础</title>
    <link href="http://www.zhuohc.com/2019/07/24/c%E5%BC%80%E5%8F%91gtk+-%E5%85%A5%E9%97%A8%E5%9F%BA%E7%A1%80/"/>
    <id>http://www.zhuohc.com/2019/07/24/c开发gtk+-入门基础/</id>
    <published>2019-07-24T05:58:51.000Z</published>
    <updated>2019-07-24T06:05:15.217Z</updated>
    
    <content type="html"><![CDATA[<h4 id="gdk-介绍"><a href="#gdk-介绍" class="headerlink" title="gdk+介绍"></a>gdk+介绍</h4><blockquote><p>gtk+是c语言编写的用于开发图形界面程序的函数库。gtk+来源于gimp（gnu image minipulation program），gtk+在gdk（gimp drawing kit）基础上创建，并进行封装。</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;gdk-介绍&quot;&gt;&lt;a href=&quot;#gdk-介绍&quot; class=&quot;headerlink&quot; title=&quot;gdk+介绍&quot;&gt;&lt;/a&gt;gdk+介绍&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;gtk+是c语言编写的用于开发图形界面程序的函数库。gtk+来源于gimp（gnu
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>ffmpeg录制基础</title>
    <link href="http://www.zhuohc.com/2019/07/24/ffmpeg%E5%BD%95%E5%88%B6%E5%9F%BA%E7%A1%80/"/>
    <id>http://www.zhuohc.com/2019/07/24/ffmpeg录制基础/</id>
    <published>2019-07-24T01:21:02.000Z</published>
    <updated>2019-07-24T01:55:00.296Z</updated>
    
    <content type="html"><![CDATA[<h4 id="ffmpeg录制功能"><a href="#ffmpeg录制功能" class="headerlink" title="ffmpeg录制功能"></a>ffmpeg录制功能</h4><blockquote><p>ffmpeg第一步：录制音视频</p></blockquote><h4 id="录制设备查询"><a href="#录制设备查询" class="headerlink" title="录制设备查询"></a>录制设备查询</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">➜  $ ffmpeg -hide_banner -devices</span><br><span class="line">Devices:</span><br><span class="line"> D. = Demuxing supported</span><br><span class="line"> .E = Muxing supported</span><br><span class="line"> --</span><br><span class="line"> DE alsa            ALSA audio output</span><br><span class="line"> DE fbdev           Linux framebuffer</span><br><span class="line"> D  iec61883        libiec61883 (new DV1394) A/V input device</span><br><span class="line"> D  jack            JACK Audio Connection Kit</span><br><span class="line"> D  kmsgrab         KMS screen capture</span><br><span class="line"> D  lavfi           Libavfilter virtual input device</span><br><span class="line"> DE oss             OSS (Open Sound System) playback</span><br><span class="line"> DE pulse           Pulse audio output</span><br><span class="line">  E sdl,sdl2        SDL2 output device</span><br><span class="line"> DE video4linux2,v4l2 Video4Linux2 output device</span><br><span class="line"> D  x11grab         X11 screen capture, using XCB</span><br><span class="line">  E xv              XV (XVideo) output device</span><br></pre></td></tr></table></figure><p>D：输入设备</p><p>E：输出设备 </p><p><a href="https://ffmpeg.org/ffmpeg-devices.html#Input-Devices" target="_blank" rel="noopener">ffmpeg输入设备列表</a></p><blockquote><p>alsa</p><blockquote><p>音频</p><p>ALSA是Advanced Linux Sound Architecture的缩写，高级Linux声音架构的简称,它在Linux操作系统上提供了音频和MIDI（Musical Instrument Digital Interface，音乐设备数字化接口）的支持，需要安装libasound库</p></blockquote><p>android_camera</p><blockquote><p>音视频</p><p>Android相机输入设备。 此输入设备使用Android Camera2 NDK API，该API可在API级别为24+的设备上使用。在配置期间自动检测android_camera的可用性。 该设备允许从Android设备上的所有摄像头进行捕获，这些摄像头集成在Camera2 NDK API中。 可用的摄像机在内部枚举，可以使用camera_index参数进行选择。输入文件字符串被丢弃。 通常，后置摄像头的索引为0，而前置摄像头的索引为1。</p></blockquote><p>avfoundation</p><blockquote><p>音视频</p><p>苹果设备</p></blockquote><p>bktr</p><blockquote><p>BSD 视频输入设备</p></blockquote><p>decklink</p><blockquote><p>BlackMagic Decklink是一款影像采集编辑产品，接口类型PCI-33/66、PCI-X 133&amp;100MHz 。</p></blockquote><p>dshow</p><blockquote><p>Windows DirectShow input device.</p></blockquote><p>fbdev</p><blockquote><p>Linux framebuffer（Linux帧缓冲）输入设备，只能录制终端的视频</p><p>Linux framebuffer是一种独立于硬件的图像抽象层，它用于在计算机屏幕上显示图像,通常是在控制台（环境）。它可以通过一个文件设备节点访问，通常为：<code>/dev/fb0</code></p></blockquote><p>gdigrab</p><blockquote><p>Win32 GDI 屏幕截取设备</p><p>这个设备允许你截取显示在Windows（系统）上的屏幕区域。</p></blockquote><p>iec61883</p><blockquote><p>使用<code>iec61883</code>的FireWire（火线） DV/HDV输入设备。</p><p>要允许这个输入设备，需要<code>libiec61883</code>, <code>libraw1394</code> 和 <code>libavc1394</code>被安装到系统中。此外还要在编译时配置<code>--enable-libiec61883</code>以支持。</p></blockquote><p>jack</p><blockquote><p>JACK输入设备。</p><p>为了能使用JACK设备，需要系统上存在<code>libjack</code></p></blockquote><p>kmsgrab</p><p>lavfi</p><blockquote><p><code>Libavfilter</code>输入虚拟设备</p><p>这个输入设备可以从<code>libavfilter</code>滤镜链图的一个开放输出端口读取数据。</p><p>对于每个滤镜链图开放输出端口，这个输入设备将创建一个对应的流映射到这个端口进行输出。当前只支持视频数据。滤镜链图是通过选项<code>graph</code>描述的。</p></blockquote><p>libcdio</p><blockquote><p>基于<code>libcdio</code>的音乐CD输入设备。</p><p>需要系统中有<code>libcdio</code>才能启用，且编译时需要用<code>--enable-libcdio</code>配置选项允许。</p></blockquote><p>libdc1394</p><blockquote><p>IIDC1394输入设备，其基于<code>libdc1394</code>和<code>libraw1394</code></p><p>编译允许需要配置<code>--enable-libdc1394</code></p></blockquote><p>openal</p><blockquote><p>这个OpenAL输入设备支持在所有实现了<code>OpenAL 1.1</code>的系统上进行音频捕获。</p><p>要编译使用它需要系统包含<code>OpenAL</code>头和<code>libraries</code>库，并且设置编译选项<code>--enable-openal</code></p></blockquote><p>oss</p><p>pulse</p><blockquote><p>PulseAudio（脉冲音频）输入设备</p><p>要使用须编译配置设置<code>--enable-libpulse</code></p></blockquote><p>sndio</p><blockquote><p>sndio输入设备。</p><p>要使用它需要系统安装并配置有<code>libsndio</code>库</p></blockquote><p>video4linux2, v4l2</p><blockquote><p>Video4Linux2 输入视频设备</p><p>“v4l2”是”video4linux2”的别名</p><p>编译需要<code>v4l-utiles</code>支持（<code>--enable-libv4l2</code>编译选项被配置），也可用于<code>-use_libv4l2</code>输入设备选项。</p><p>捕获的设备名是一个文件设备节点，通常Linux系统在设备（例如USB摄像头）插入到系统时自动创建这样的节点，会被命名为<code>/dev/videoN</code>，<code>N</code>是设备索引序号</p><p>Video4Linux设备通常只支持有限的分辨率（<code>width x height</code>）和帧率,通过<code>-list_formats all</code>选项来获取支持情况。一些设备，例如电视卡可以支持1个或者多个标准，它支持的标准可以通过<code>-list_standards all</code>来了解。</p><p>时间戳时基单位为1microsecond。根据内核版本和配置，时间戳可以基于实时间（real time clock——绝对时间，一种起源于Unix的表示方式）或者单调时钟（monotonic clock——通常源自启动时间，不受NTP或者手动改变）。<code>-timestamps abs</code>或者<code>-ts abs</code>选择启用实时间。</p></blockquote><p>vfwcap</p><blockquote><p>vfw（Video for Windows）捕获输入端</p><p>文件名必须是捕获设备索引，范围0-9可以用<code>list</code>作为文件名，将输出一个设备列表。任何数字外其它文件名被视作设备索引0。</p></blockquote><p>x11grab</p><blockquote><p>X11 视频输入设备</p><p>使用需要<code>libxcb</code>库，它会在编译时自动检测。</p></blockquote></blockquote><h5 id="fbdev：-linux终端录制设备"><a href="#fbdev：-linux终端录制设备" class="headerlink" title="fbdev： linux终端录制设备"></a>fbdev： linux终端录制设备</h5><p>查看使用指定采集设备参数</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> ffmpeg -hide_banner -h demuxer=fbdev</span><br><span class="line">Demuxer fbdev [Linux framebuffer]:</span><br><span class="line">fbdev indev AVOptions:</span><br><span class="line">  -framerate         &lt;video_rate&gt; .D.......  (default "25")</span><br><span class="line"><span class="meta">#</span> framerate 帧数 默认25帧</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> sudo ffmpeg -framerate 30  -f fbdev -i /dev/fb0 output.mp4</span><br></pre></td></tr></table></figure><h5 id="v412：linux摄像头录制设备"><a href="#v412：linux摄像头录制设备" class="headerlink" title="v412：linux摄像头录制设备"></a>v412：linux摄像头录制设备</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> ffmpeg -hide_banner -h demuxer=Video4Linux2</span><br></pre></td></tr></table></figure><table><thead><tr><th>参数</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>-standard</td><td>字符串</td><td>设置tv标准</td></tr><tr><td>-channel</td><td>整数</td><td>设置tv通道</td></tr><tr><td>-video_size</td><td>图像大小</td><td>设置采集视频频帧大小</td></tr><tr><td>-pixel_format</td><td>字符串</td><td>设置采集视频的分辨率</td></tr><tr><td>-input_format</td><td>字符串</td><td>设置采集视频的分辨率</td></tr><tr><td>-framerate</td><td>字符串</td><td>设置采集视频帧率</td></tr><tr><td>-list_formats</td><td>整数</td><td>列举输入视频信号的信息</td></tr><tr><td>-list_standards</td><td>整数</td><td>列举标准信息</td></tr><tr><td>-timestamps</td><td>整数</td><td>设置时间戳</td></tr><tr><td>-ts</td><td>整数</td><td>设置模拟器分析帧使用的时间戳</td></tr><tr><td>-use_libv4l2</td><td>布尔</td><td>使用第三方库libv412选项</td></tr></tbody></table><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> ffmpeg -hide_banner -f Video4Linux2 -list_formats all -i /dev/video0</span><br><span class="line"><span class="meta">#</span> /dev/video0根据自己的摄像头来设置</span><br></pre></td></tr></table></figure><h5 id="x11grab：linux桌面录制设备"><a href="#x11grab：linux桌面录制设备" class="headerlink" title="x11grab：linux桌面录制设备"></a>x11grab：linux桌面录制设备</h5><p><a href="https://trac.ffmpeg.org/wiki/Capture/Desktop" target="_blank" rel="noopener">桌面录制方法</a></p><p>linux环境下如果此方法报错</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Cannot open display :0.0, error 1.</span><br><span class="line">:0.0: Input/output error</span><br></pre></td></tr></table></figure><p>则需要查看$DISPLAY， 在Linux/Unix类操作系统上, DISPLAY用来设置将图形显示到何处. 直接登陆图形界面或者登陆命令行界面后使用startx启动图形, DISPLAY环境变量将自动设置为:0:0</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> echo $DISPLAY</span><br><span class="line">:1</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> ffmpeg -video_size 1024x768 -framerate 25 -f x11grab -i :1+100,200 output.mp4</span><br></pre></td></tr></table></figure><blockquote><p>video_size 字符串 输入采集视频的分辨率</p><p>framerate 字符串 输入采集的视频帧率</p><p>-f 指定输入设备</p><p>-i 指定输入内容（此处为显示器）+100, 200 代表从100, 200处位移<br>使用pulse录制音频</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> pactl list sources  # 查看全部输入设备</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> ffmpeg -f pulse -i default pulse.wav</span><br></pre></td></tr></table></figure><p>同时录制视频和音频</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> ffmpeg -video_size 1366x768 -framerate 25 -f x11grab -i :1 -f pulse -ac 2 -i 1 output.mkv</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> ffmpeg -video_size 1024x768 -framerate 25 -f x11grab -i :1+100,200 -f alsa -ac 2 -i hw:0 output.mkv</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;ffmpeg录制功能&quot;&gt;&lt;a href=&quot;#ffmpeg录制功能&quot; class=&quot;headerlink&quot; title=&quot;ffmpeg录制功能&quot;&gt;&lt;/a&gt;ffmpeg录制功能&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;ffmpeg第一步：录制音视频&lt;/p&gt;
&lt;/blo
      
    
    </summary>
    
    
      <category term="ffmpeg" scheme="http://www.zhuohc.com/tags/ffmpeg/"/>
    
  </entry>
  
  <entry>
    <title>ffmpeg封装与解封装基础</title>
    <link href="http://www.zhuohc.com/2019/07/24/ffmpeg%E5%B0%81%E8%A3%85%E4%B8%8E%E8%A7%A3%E5%B0%81%E8%A3%85%E5%9F%BA%E7%A1%80/"/>
    <id>http://www.zhuohc.com/2019/07/24/ffmpeg封装与解封装基础/</id>
    <published>2019-07-24T01:20:23.000Z</published>
    <updated>2019-07-24T01:20:47.723Z</updated>
    
    <content type="html"><![CDATA[<h4 id="ffmpeg封装与解封装"><a href="#ffmpeg封装与解封装" class="headerlink" title="ffmpeg封装与解封装"></a>ffmpeg封装与解封装</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ffmpeg -i input.mkv -vcodec copy -acodec copy output.mp4</span><br></pre></td></tr></table></figure><blockquote><p>-i 输入文件</p><p>-vcodec copy 视频编码处理方式</p><p>-acodec copy 音频编码处理方式</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ ffmpeg -i input.mp4 -vn -acodec copy output.aac  # 抽出音频</span><br><span class="line">$ ffmpeg -i input.mp4 -vcodec copy -an output.h264  # 抽出视频</span><br></pre></td></tr></table></figure><h5 id="提取YUV数据"><a href="#提取YUV数据" class="headerlink" title="提取YUV数据"></a>提取YUV数据</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ffmpeg -i input.mp4 -an -c:v rawvideo -pix_fmt yuv420p out.yuv</span><br></pre></td></tr></table></figure><blockquote><p>-i 输入设备</p><p>-an 不需要音频</p><p>-c:v 使用rawvideo对视频进行编码</p><p>-pix_fmt 像素格式</p></blockquote><p>播放源文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ffplay -video_size 1366x768 out.yuv</span><br></pre></td></tr></table></figure><blockquote><p>-video_size 指定像素</p></blockquote><h5 id="提取PCM数据"><a href="#提取PCM数据" class="headerlink" title="提取PCM数据"></a>提取PCM数据</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ffmpeg -i input.mp4 -vn -ar 44100 -ac 2 -f s16le out.pcm</span><br></pre></td></tr></table></figure><blockquote><p>-i 输入设备</p><p>-vn 不需要视频</p><p>-ar 44100 -a 音频 read 音频采样率44.1k</p><p>-ac 2 -a 音频 c2 channel 2 双声道</p><p>-f 数据存储格式 s16le   s: 有符号的 </p></blockquote><p>播放源文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ffplay -ar 44100 -ac 2 -f s16le out.pcm</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;ffmpeg封装与解封装&quot;&gt;&lt;a href=&quot;#ffmpeg封装与解封装&quot; class=&quot;headerlink&quot; title=&quot;ffmpeg封装与解封装&quot;&gt;&lt;/a&gt;ffmpeg封装与解封装&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;
      
    
    </summary>
    
    
      <category term="ffmpeg" scheme="http://www.zhuohc.com/tags/ffmpeg/"/>
    
  </entry>
  
  <entry>
    <title>ffmpeg直播基础</title>
    <link href="http://www.zhuohc.com/2019/07/24/ffmpeg%E7%9B%B4%E6%92%AD%E5%9F%BA%E7%A1%80/"/>
    <id>http://www.zhuohc.com/2019/07/24/ffmpeg直播基础/</id>
    <published>2019-07-24T01:19:22.000Z</published>
    <updated>2019-07-24T01:19:56.380Z</updated>
    
    <content type="html"><![CDATA[<h5 id="直播推流"><a href="#直播推流" class="headerlink" title="直播推流"></a>直播推流</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ffmpeg -re -i out.mp4 -c copy -f flv rtmp://server/live/streamName</span><br></pre></td></tr></table></figure><blockquote><p>-re 保持本地视频和流媒体服务器帧率一致</p><p>-c 不做操作，直接复制</p><p>-f 格式</p></blockquote><h5 id="直播拉流"><a href="#直播拉流" class="headerlink" title="直播拉流"></a>直播拉流</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ffmpeg -i rmtp://server/live/streamName -c copy dump.flv</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h5 id=&quot;直播推流&quot;&gt;&lt;a href=&quot;#直播推流&quot; class=&quot;headerlink&quot; title=&quot;直播推流&quot;&gt;&lt;/a&gt;直播推流&lt;/h5&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pr
      
    
    </summary>
    
    
      <category term="ffmpeg" scheme="http://www.zhuohc.com/tags/ffmpeg/"/>
    
  </entry>
  
  <entry>
    <title>ffmpeg滤镜基础</title>
    <link href="http://www.zhuohc.com/2019/07/24/ffmpeg%E6%BB%A4%E9%95%9C%E5%9F%BA%E7%A1%80/"/>
    <id>http://www.zhuohc.com/2019/07/24/ffmpeg滤镜基础/</id>
    <published>2019-07-24T01:18:29.000Z</published>
    <updated>2019-07-24T01:19:04.270Z</updated>
    
    <content type="html"><![CDATA[<h5 id="裁剪滤镜"><a href="#裁剪滤镜" class="headerlink" title="裁剪滤镜"></a>裁剪滤镜</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ffmpeg -i output.mkv -vf crop=in_w-400:in_h-200 -c:v libx264 -c:a copy output.mp4</span><br></pre></td></tr></table></figure><blockquote><p>-i 输入</p><p>-vf -v 视频 f 滤镜 crop 裁剪滤镜</p><p>-c:v</p><p>-c:a copy 音频直接复制</p></blockquote><h5 id="视频裁剪"><a href="#视频裁剪" class="headerlink" title="视频裁剪"></a>视频裁剪</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ffmpeg -i output.mkv -ss 00:00:00 -t 10 output.mp4</span><br></pre></td></tr></table></figure><blockquote><p>-ss 开始时间(时:分:秒)</p><p>-t 时常(秒)</p></blockquote><h5 id="视频合并"><a href="#视频合并" class="headerlink" title="视频合并"></a>视频合并</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ffmpeg -f concat -i inputs.txt output.mp4</span><br></pre></td></tr></table></figure><blockquote><p>-f  concat 拼接</p><p>-i 输入文件 inputs.txt 记录全部等待拼接的文件</p><p>inputs.txt每一行为“file filename”</p><pre><code>&gt; file &apos;out1.mp4&apos;&gt;&gt; file &apos;out2.mp4&apos;</code></pre><p>output.mp4 输出文件</p></blockquote><h5 id="视频转图片"><a href="#视频转图片" class="headerlink" title="视频转图片"></a>视频转图片</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ffmpeg -i output.mp4 -r 1 -f image2 image-%3d.jpeg</span><br></pre></td></tr></table></figure><blockquote><p>-i 输入文件</p><p>-r 1, r 帧率， 1 每秒一张图片</p><p>-f image2, 转成image2格式</p><p>image-%3d.jpeg 输出文件</p></blockquote><h5 id="图片转视频"><a href="#图片转视频" class="headerlink" title="图片转视频"></a>图片转视频</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ffmpeg -i image-%3d.jpeg output.mp4</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h5 id=&quot;裁剪滤镜&quot;&gt;&lt;a href=&quot;#裁剪滤镜&quot; class=&quot;headerlink&quot; title=&quot;裁剪滤镜&quot;&gt;&lt;/a&gt;裁剪滤镜&lt;/h5&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pr
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>ffmpeg命令基础</title>
    <link href="http://www.zhuohc.com/2019/07/24/ffmpeg%E5%91%BD%E4%BB%A4%E5%9F%BA%E7%A1%80/"/>
    <id>http://www.zhuohc.com/2019/07/24/ffmpeg命令基础/</id>
    <published>2019-07-24T01:16:46.000Z</published>
    <updated>2019-07-24T01:19:04.256Z</updated>
    
    <content type="html"><![CDATA[<h4 id="ffmpeg基本流程"><a href="#ffmpeg基本流程" class="headerlink" title="ffmpeg基本流程"></a>ffmpeg基本流程</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">文件-&gt;音视频流: demuxer解封装</span><br><span class="line">音视频流-&gt;数据包: decoder解码</span><br><span class="line">数据包-&gt;音视频流: encoder编码</span><br><span class="line">音视频流-&gt;文件: muxer封装</span><br></pre></td></tr></table></figure><h4 id="ffmpeg基本定义"><a href="#ffmpeg基本定义" class="headerlink" title="ffmpeg基本定义"></a>ffmpeg基本定义</h4><ol><li>文件：也叫容器Container，比如mp4文件、flv文件等，容器的类型决定了信息被存放在文件中的位置。</li><li>音视频流： </li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;ffmpeg基本流程&quot;&gt;&lt;a href=&quot;#ffmpeg基本流程&quot; class=&quot;headerlink&quot; title=&quot;ffmpeg基本流程&quot;&gt;&lt;/a&gt;ffmpeg基本流程&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;t
      
    
    </summary>
    
    
      <category term="ffmpeg" scheme="http://www.zhuohc.com/tags/ffmpeg/"/>
    
  </entry>
  
  <entry>
    <title>ffmpeg视频基础</title>
    <link href="http://www.zhuohc.com/2019/07/24/ffmpeg%E8%A7%86%E9%A2%91%E5%9F%BA%E7%A1%80/"/>
    <id>http://www.zhuohc.com/2019/07/24/ffmpeg视频基础/</id>
    <published>2019-07-24T01:15:39.000Z</published>
    <updated>2019-07-24T01:16:41.880Z</updated>
    
    <content type="html"><![CDATA[<h4 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h4><p>H264基本概念</p><blockquote><p>I帧： 关键帧、采用帧内压缩技术<br>P帧：向前参考帧，采用帧内压缩技术<br>B帧：双向参考帧，采用帧内压缩技术</p></blockquote><p>GOF:</p><blockquote><p>一组帧group of frame</p></blockquote><p>SPS:</p><blockquote><p>Sequence parameter set: 序列参数集：存放一组帧的存放帧数，参考帧数目，解码图像尺寸等</p></blockquote><p>PPS：</p><blockquote><p>picture parameter set: 图像参数集：存放熵编码模式选择标识、片组数目等</p></blockquote><h4 id="视频编解码器"><a href="#视频编解码器" class="headerlink" title="视频编解码器"></a>视频编解码器</h4><blockquote><p>x264：最流行的<br>x265：耗性能<br>openH264：支持svc视频技术<br>vp8: x264<br>vp9: x265</p></blockquote><h4 id="H264压缩技术"><a href="#H264压缩技术" class="headerlink" title="H264压缩技术"></a>H264压缩技术</h4><blockquote><p>帧内压缩：解决空域数据冗余技术</p><p>帧间压缩：解决时域数据冗余技术</p><p>整数离散余弦变换(DCT)：将空间上的相关性变为频域上无关的数据然后进行量化</p><p>CABAC压缩</p></blockquote><p><img src="https://zhuohc-com.oss-cn-hangzhou.aliyuncs.com/H264%E7%BB%93%E6%9E%84%E5%9B%BE.png" alt="H264结构图"></p><h4 id="H264编码分层"><a href="#H264编码分层" class="headerlink" title="H264编码分层"></a>H264编码分层</h4><blockquote><p>NAL层：network abstraction layer 视频数据网络抽象层<br>VCL层：video coding layer 视频数据编码层</p></blockquote><h4 id="码流"><a href="#码流" class="headerlink" title="码流"></a>码流</h4><p>SODB</p><blockquote><p>string of data bits 原始数据比特流，它是由vcl层产生的</p></blockquote><p>RBSP</p><blockquote><p>在SODB最后一位补1，不按字节对其则补0</p></blockquote><p>EBSP</p><blockquote></blockquote><p>NALU</p><blockquote><p>NAL HEADER + EBSP</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;基本概念&quot;&gt;&lt;a href=&quot;#基本概念&quot; class=&quot;headerlink&quot; title=&quot;基本概念&quot;&gt;&lt;/a&gt;基本概念&lt;/h4&gt;&lt;p&gt;H264基本概念&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I帧： 关键帧、采用帧内压缩技术&lt;br&gt;P帧：向前参考帧，采用帧内
      
    
    </summary>
    
    
      <category term="ffmpeg" scheme="http://www.zhuohc.com/tags/ffmpeg/"/>
    
  </entry>
  
  <entry>
    <title>ffmpeg音频基础</title>
    <link href="http://www.zhuohc.com/2019/07/24/ffmpeg%E9%9F%B3%E9%A2%91%E5%9F%BA%E7%A1%80/"/>
    <id>http://www.zhuohc.com/2019/07/24/ffmpeg音频基础/</id>
    <published>2019-07-24T01:11:21.000Z</published>
    <updated>2019-07-24T01:15:09.376Z</updated>
    
    <content type="html"><![CDATA[<p>2# 音频知识（未完工）</p><h4 id="声音的本质"><a href="#声音的本质" class="headerlink" title="声音的本质"></a>声音的本质</h4><blockquote><p>声音其实是一种能量波，因此也有频率和振幅的特征，频率对应于时间轴线，振幅对应于电平轴线。波是无限光滑的，弦线可以看成由无数点组成，由于存储空间是相对有限的，数字编码过程中，必须对弦线的点进行采样。</p></blockquote><h4 id="声音三要素"><a href="#声音三要素" class="headerlink" title="声音三要素"></a><a href="https://baike.baidu.com/item/%E5%A3%B0%E9%9F%B3%E5%90%AC%E8%A7%89" target="_blank" rel="noopener">声音三要素</a></h4><ol><li><p>音高/音调/音频： 客观上音高大小主要取决于声波基频的高低，频率高则音调高，反之则低，单位用赫兹(Hz）表示。儿童(高音区)-&gt;女生(高音区)-&gt;男生（低音区）</p></li><li><p>音量/响度/声强：常说的声音大小，主要取决于声波振幅的大小。</p></li><li><p>音色/音品：和材质相关（比如钢琴等），本质是谐波。</p></li></ol><p><img src="https://zhuohc-com.oss-cn-hangzhou.aliyuncs.com/%E9%9F%B3%E9%87%8F%E5%92%8C%E5%A3%B0%E8%B0%83.png" alt="音量和声调"></p><p>心理声学</p><blockquote><p>人类的听觉范围：20Hz-20kHz</p></blockquote><h4 id="音频量化过程"><a href="#音频量化过程" class="headerlink" title="音频量化过程"></a>音频量化过程</h4><p><img src="https://zhuohc-com.oss-cn-hangzhou.aliyuncs.com/%E9%9F%B3%E9%A2%91%E9%87%8F%E5%8C%96%E8%BF%87%E7%A8%8B.png" alt="音频量化过程"></p><ol><li>按横轴时间进行切割</li><li>按纵轴振幅(决定音量)进行切割</li><li>编码转成数字信号</li></ol><blockquote><p>采样大小：一个采样用多个bit存放，常用16位(2<sup>16</sup>=65535)，振幅<br>采样率：采样频率8k、16k、32k、44.1k、48k等 <a href="https://baike.baidu.com/item/音频采样率" target="_blank" rel="noopener">采样率概念</a><br>声道数：单声道、双声道、多声道</p></blockquote><p>码率计算</p><blockquote><p>音频流的码率=采样率×采样大小×声道数<br>例如：采样率44.1kHz、采样大小为16bit、双声道的pcm编码wav文件，码率=44.1k×16×2=1411.2kb/s</p></blockquote><h4 id="音频压缩技术"><a href="#音频压缩技术" class="headerlink" title="音频压缩技术"></a>音频压缩技术</h4><ol><li>消除音频冗余数据</li></ol><blockquote><p>删除人耳听觉范围外的音频信号：</p><blockquote><p>20Hz-20kHz</p></blockquote><p>被掩避掉的音频信号： </p><blockquote><p>频域遮蔽：</p><p>时域遮蔽：</p></blockquote></blockquote><ol start="2"><li>哈夫曼无损编码</li></ol><h4 id="音频编解码器"><a href="#音频编解码器" class="headerlink" title="音频编解码器"></a>音频编解码器</h4><p>常见的编解码器</p><blockquote><p>OPUS： 开源、rmtp协议不支持<br>AAC：收费、适合实时互动项目。<br>Vorbis：开源<br>Speex：开源、优势：还支持一些回音消除、降噪等处理办法<br>iLBC<br>AMR<br>G.711：与固定电话就行融合</p></blockquote><p>性能对比：</p><blockquote><p>OPUS &gt; AAC(常用) &gt; Vorbis<br>AAC： advanced audio coding<br>常见规格： AAC LC（低复杂度，码流128k）、AAC HE V1（）、 AAC HE V2<br>AAC LC + SBR = AAC HE V1<br>AAC HE V1 + PS = AAC HE V2</p></blockquote><p><img src="https://zhuohc-com.oss-cn-hangzhou.aliyuncs.com/aac%E8%A7%84%E6%A0%BC.png" alt="aac规格"></p><p>AAC格式：</p><blockquote><p>ADIF<br>ADTS</p></blockquote><p>AAC编码库：</p><blockquote><p>libfdk_aac(常用) &gt; ffmpeg aac &gt; libfaac &gt; libvo_aacenc</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;2# 音频知识（未完工）&lt;/p&gt;
&lt;h4 id=&quot;声音的本质&quot;&gt;&lt;a href=&quot;#声音的本质&quot; class=&quot;headerlink&quot; title=&quot;声音的本质&quot;&gt;&lt;/a&gt;声音的本质&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;声音其实是一种能量波，因此也有频率和振幅的特征，频
      
    
    </summary>
    
    
      <category term="ffmpeg" scheme="http://www.zhuohc.com/tags/ffmpeg/"/>
    
  </entry>
  
  <entry>
    <title>zabbix入门基础</title>
    <link href="http://www.zhuohc.com/2018/11/16/zabbix%E5%85%A5%E9%97%A8%E5%9F%BA%E7%A1%80/"/>
    <id>http://www.zhuohc.com/2018/11/16/zabbix入门基础/</id>
    <published>2018-11-16T09:40:04.000Z</published>
    <updated>2019-07-24T01:36:10.136Z</updated>
    
    <content type="html"><![CDATA[<h4 id="安装服务器端"><a href="#安装服务器端" class="headerlink" title="安装服务器端"></a>安装服务器端</h4><p><a href="https://www.zabbix.com/download" target="_blank" rel="noopener">官方</a> 1. 根据实际情况选择数据库 2. 根据实际情况选择操作系统</p><h4 id="汉化"><a href="#汉化" class="headerlink" title="汉化"></a>汉化</h4><p><img src="/wp-content/uploads/2018/11/2018-11-16-17-36-53%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE.png" alt> 错误提示</p><blockquote><p>You are not able to choose some of the languages, because locales for them are not installed on the web server.</p></blockquote><pre><code># 选中zh-CN UTF-8sudo dpkg-reconfigure localessudo service apache2 restart</code></pre><h4 id="安装客户端"><a href="#安装客户端" class="headerlink" title="安装客户端"></a>安装客户端</h4><p><a href="https://www.zabbix.com/documentation/3.2/manual/installation/install_from_packages/agent_installation" target="_blank" rel="noopener">官方</a> <a href="https://tecadmin.net/install-zabbix-agent-on-centos-rhel/" target="_blank" rel="noopener">参考</a></p><h4 id="设置邮件报警"><a href="#设置邮件报警" class="headerlink" title="设置邮件报警"></a>设置邮件报警</h4><p>Media types <img src="/wp-content/uploads/2018/11/zabbix-email.png" alt> <img src="/wp-content/uploads/2018/11/zabbix-email-1.png" alt></p><h4 id="交换分区错误问题"><a href="#交换分区错误问题" class="headerlink" title="交换分区错误问题"></a>交换分区错误问题</h4><pre><code>Lack of free swap space</code></pre><p>现在的云主机默认没有交换分区 Configuration-&gt;Templates-&gt;Template OS Linux-&gt;Triggers-&gt;Lack of free swap space on {HOST.NAME}-&gt;Expression</p><pre><code>{Template OS Linux:system.swap.size[,pfree].last(0)}&lt;50改成{Template OS Linux:system.swap.size[,pfree].last(0)}&lt;50 and {Template OS Linux:system.swap.size[,free].last(0)}&lt;&gt;0</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;安装服务器端&quot;&gt;&lt;a href=&quot;#安装服务器端&quot; class=&quot;headerlink&quot; title=&quot;安装服务器端&quot;&gt;&lt;/a&gt;安装服务器端&lt;/h4&gt;&lt;p&gt;&lt;a href=&quot;https://www.zabbix.com/download&quot; target=&quot;_bla
      
    
    </summary>
    
      <category term="后端" scheme="http://www.zhuohc.com/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
  </entry>
  
  <entry>
    <title>centos7.2安装使用openResty</title>
    <link href="http://www.zhuohc.com/2018/11/14/centos7.2%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8openResty/"/>
    <id>http://www.zhuohc.com/2018/11/14/centos7.2安装使用openResty/</id>
    <published>2018-11-14T10:35:08.000Z</published>
    <updated>2019-07-23T05:51:43.850Z</updated>
    
    <content type="html"><![CDATA[<pre><code># 安装sudo yum install pcre-devel openssl-devel gcc curlwget https://openresty.org/download/openresty-1.13.6.2.tar.gztar -xzvf openresty-1.13.6.2.tar.gzcd openresty-1.13.6.2# 默认安装到/usr/local/openresty, 可以指定./configure --prefix=/your/path/openresty设置# 默认安装的组件https://openresty.org/cn/components.html./configure --with-luajit \            --without-http_redis2_module \            --with-http_iconv_module \            --with-http_postgres_modulemake &amp;&amp; sudo make install# 创建软链接ln -s /usr/local/openresty/nginx/sbin/nginx /usr/local/nginx# 启动/重启/停止nginx nginx -s reloadnginx -s stop</code></pre><h4 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h4><ul><li>openResty的nginx和普通nginx配置一致</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;pre&gt;&lt;code&gt;# 安装
sudo yum install pcre-devel openssl-devel gcc curl
wget https://openresty.org/download/openresty-1.13.6.2.tar.gz
tar -xzvf o
      
    
    </summary>
    
      <category term="运维" scheme="http://www.zhuohc.com/categories/%E8%BF%90%E7%BB%B4/"/>
    
    
  </entry>
  
  <entry>
    <title>linux环境nginx/php-fpm权限问题</title>
    <link href="http://www.zhuohc.com/2018/11/10/linux%E7%8E%AF%E5%A2%83nginx-php-fpm%E6%9D%83%E9%99%90%E9%97%AE%E9%A2%98/"/>
    <id>http://www.zhuohc.com/2018/11/10/linux环境nginx-php-fpm权限问题/</id>
    <published>2018-11-10T05:10:28.000Z</published>
    <updated>2019-07-24T01:36:23.340Z</updated>
    
    <content type="html"><![CDATA[<h4 id="当前用户hanchang-nginx用户nginx"><a href="#当前用户hanchang-nginx用户nginx" class="headerlink" title="当前用户hanchang, nginx用户nginx"></a>当前用户hanchang, nginx用户nginx</h4><pre><code>vim /etc/nginx/nginx.confuser hanchang;vim /etc/php-fpm.d/www.conf user = hanchanggroup = nginxlisten.owner = hanchanglisten.group = nginxlisten.mode = 0660</code></pre><h4 id="划重点-将当前用户加入nginx用户组"><a href="#划重点-将当前用户加入nginx用户组" class="headerlink" title="划重点 将当前用户加入nginx用户组"></a>划重点 将当前用户加入nginx用户组</h4><pre><code>sudo usermod -a -G nginx hanchang</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;当前用户hanchang-nginx用户nginx&quot;&gt;&lt;a href=&quot;#当前用户hanchang-nginx用户nginx&quot; class=&quot;headerlink&quot; title=&quot;当前用户hanchang, nginx用户nginx&quot;&gt;&lt;/a&gt;当前用户hancha
      
    
    </summary>
    
      <category term="运维" scheme="http://www.zhuohc.com/categories/%E8%BF%90%E7%BB%B4/"/>
    
    
  </entry>
  
  <entry>
    <title>ubuntu16.04安装及使用SVN</title>
    <link href="http://www.zhuohc.com/2018/10/09/ubuntu16.04%E5%AE%89%E8%A3%85%E5%8F%8A%E4%BD%BF%E7%94%A8SVN/"/>
    <id>http://www.zhuohc.com/2018/10/09/ubuntu16.04安装及使用SVN/</id>
    <published>2018-10-09T10:21:49.000Z</published>
    <updated>2019-07-23T05:51:43.850Z</updated>
    
    <content type="html"><![CDATA[<h4 id="服务器端安装"><a href="#服务器端安装" class="headerlink" title="服务器端安装"></a>服务器端安装</h4><p><a href="https://help.ubuntu.com/lts/serverguide/subversion.html.en/" target="_blank" rel="noopener">官方推荐</a></p><pre><code># 安装包sudo apt install subversion apache2 libapache2-svn# 创建目录及两个svn项目mkdir svnsvnadmin create svn/doneself-appsvnadmin create svn/doneself-web# 多个项目公用一个权限文件cp -rf svn/doneself/conf/passwd snv/cp -rf svn/doneself/conf/authz snv/# 编辑每个项目的配置文件vim svn/doneself/conf/svnserve.conf[general]   # 匿名用户没有权限anon-access = none# 验证用户写权限auth-access = write# 账号密码文件路径password-db = ../../passwd # 权限文件路径authz-db = ../../authz# 编写账号密码文件vim svn/passwd[users] ui = ui  # 注意空格# 编写组和权限文件vim svn/[groups]ui = ui  [doneself-app:/]  ui = wr</code></pre><h4 id="启动svn服务器"><a href="#启动svn服务器" class="headerlink" title="启动svn服务器"></a>启动svn服务器</h4><pre><code># 启动,默认端口号3690sudo svnserve -d -r /home/svn# 结束sudo pkill svnserve</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;服务器端安装&quot;&gt;&lt;a href=&quot;#服务器端安装&quot; class=&quot;headerlink&quot; title=&quot;服务器端安装&quot;&gt;&lt;/a&gt;服务器端安装&lt;/h4&gt;&lt;p&gt;&lt;a href=&quot;https://help.ubuntu.com/lts/serverguide/subve
      
    
    </summary>
    
      <category term="办公" scheme="http://www.zhuohc.com/categories/%E5%8A%9E%E5%85%AC/"/>
    
      <category term="后端" scheme="http://www.zhuohc.com/categories/%E5%8A%9E%E5%85%AC/%E5%90%8E%E7%AB%AF/"/>
    
      <category term="运维" scheme="http://www.zhuohc.com/categories/%E5%8A%9E%E5%85%AC/%E5%90%8E%E7%AB%AF/%E8%BF%90%E7%BB%B4/"/>
    
    
  </entry>
  
  <entry>
    <title>vue.js</title>
    <link href="http://www.zhuohc.com/2018/09/26/vuejs/"/>
    <id>http://www.zhuohc.com/2018/09/26/vuejs/</id>
    <published>2018-09-26T09:32:56.000Z</published>
    <updated>2019-07-23T05:51:43.850Z</updated>
    
    <content type="html"><![CDATA[<h4 id="安装nodejs"><a href="#安装nodejs" class="headerlink" title="安装nodejs"></a>安装nodejs</h4><pre><code># 安装nodejs# https://nodejs.org/en/download/package-manager/#debian-and-ubuntu-based-linux-distributionscurl -sL https://deb.nodesource.com/setup_8.x | sudo -E bash -sudo apt-get install -y nodejs# 安装cnpmsudo npm install -g cnpm</code></pre><h4 id="安装vue-cli"><a href="#安装vue-cli" class="headerlink" title="安装vue-cli"></a>安装vue-cli</h4><pre><code>sudo cnpm install -g vue-cli</code></pre><h4 id="创建项目"><a href="#创建项目" class="headerlink" title="创建项目"></a>创建项目</h4><pre><code>vue init webpack your-project cnpm install npm run dev  # 启动项目</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;安装nodejs&quot;&gt;&lt;a href=&quot;#安装nodejs&quot; class=&quot;headerlink&quot; title=&quot;安装nodejs&quot;&gt;&lt;/a&gt;安装nodejs&lt;/h4&gt;&lt;pre&gt;&lt;code&gt;# 安装nodejs
# https://nodejs.org/en/dow
      
    
    </summary>
    
      <category term="前端" scheme="http://www.zhuohc.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
  </entry>
  
  <entry>
    <title>centos7.2安装及使用docker</title>
    <link href="http://www.zhuohc.com/2018/09/08/centos7.2%E5%AE%89%E8%A3%85%E5%8F%8A%E4%BD%BF%E7%94%A8docker/"/>
    <id>http://www.zhuohc.com/2018/09/08/centos7.2安装及使用docker/</id>
    <published>2018-09-08T06:52:53.000Z</published>
    <updated>2019-07-23T05:51:43.850Z</updated>
    
    <content type="html"><![CDATA[<pre><code># https://docs.docker.com/install/linux/docker-ce/centos/#install-docker-ce# 卸载旧版本$ sudo yum remove docker docker-client docker-client-latest docker-common docker-latest docker-latest-logrotate docker-logrotate docker-selinux docker-engine-selinux docker-engine# 安装依赖包$ sudo yum install -y yum-utils device-mapper-persistent-data lvm2# 安装源$ sudo yum-config-manager  --add-repo https://download.docker.com/linux/centos/docker-ce.repo# 安装$ sudo yum install docker-ce# 启动$ sudo systemctl start docker$ sudo systemctl enable docker# 测试$ sudo docker run hello-world# 加入用户组(记得退出重新登录) https://docs.docker.com/install/linux/linux-postinstall/#manage-docker-as-a-non-root-user# 安装docker-compose$ sudo yum install epel-release$ sudo yum install python-pip$ sudo pip install docker-compose# 换源https://lug.ustc.edu.cn/wiki/mirrors/help/docker</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;pre&gt;&lt;code&gt;# https://docs.docker.com/install/linux/docker-ce/centos/#install-docker-ce
# 卸载旧版本
$ sudo yum remove docker docker-client docker
      
    
    </summary>
    
      <category term="后端" scheme="http://www.zhuohc.com/categories/%E5%90%8E%E7%AB%AF/"/>
    
      <category term="运维" scheme="http://www.zhuohc.com/categories/%E5%90%8E%E7%AB%AF/%E8%BF%90%E7%BB%B4/"/>
    
    
  </entry>
  
  <entry>
    <title>centos7.2安装使用sentry</title>
    <link href="http://www.zhuohc.com/2018/09/08/centos7.2%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8sentry/"/>
    <id>http://www.zhuohc.com/2018/09/08/centos7.2安装使用sentry/</id>
    <published>2018-09-08T06:48:41.000Z</published>
    <updated>2019-07-23T05:51:43.850Z</updated>
    
    <content type="html"><![CDATA[<pre><code># 先安装docker  https://docs.docker.com/install/linux/docker-ce/centos/#install-docker-ce# 后安装sentry   https://github.com/getsentry/onpremise$ mkdir sentry$ cd sentry$ mkdir -p data/{sentry,postgres}$ git clone https://github.com/getsentry/onpremise$ cd onpremise$ docker-compose run --rm web config generate-secret-key # 创建一个secret key并配置到docker-compose.yml中的SENTRY_SECRET_KEY.$ docker-compose run --rm web upgrade # 创建数据库$ docker-compose up -d  # 后台执行</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;pre&gt;&lt;code&gt;# 先安装docker  https://docs.docker.com/install/linux/docker-ce/centos/#install-docker-ce
# 后安装sentry   https://github.com/getsentry
      
    
    </summary>
    
      <category term="运维" scheme="http://www.zhuohc.com/categories/%E8%BF%90%E7%BB%B4/"/>
    
    
  </entry>
  
  <entry>
    <title>centos7.2使用rabbitMQ</title>
    <link href="http://www.zhuohc.com/2018/09/08/centos7.2%E4%BD%BF%E7%94%A8rabbitMQ/"/>
    <id>http://www.zhuohc.com/2018/09/08/centos7.2使用rabbitMQ/</id>
    <published>2018-09-08T06:45:54.000Z</published>
    <updated>2019-07-23T05:51:43.850Z</updated>
    
    <content type="html"><![CDATA[<pre><code># 安装 Erlangyum -y install epel-releaseyum -y updateyum -y install erlang socat# 查看是否安装成功erl -version# 安装rabbitMQwget https://www.rabbitmq.com/releases/rabbitmq-server/v3.6.10/rabbitmq-server-3.6.10-1.el7.noarch.rpmrpm --import https://www.rabbitmq.com/rabbitmq-release-signing-key.ascrpm -Uvh rabbitmq-server-3.6.10-1.el7.noarch.rpm# 启用,开机启动,状态systemctl start rabbitmq-serversystemctl enable rabbitmq-serversystemctl status rabbitmq-server# 启动图形界面管理rabbitmq-plugins enable rabbitmq_managementchown -R rabbitmq:rabbitmq /var/lib/rabbitmq/rabbitmqctl add_user admin StrongPassword  # 踩坑:密码不要以&apos;;&apos;结尾rabbitmqctl set_user_tags admin administratorrabbitmqctl set_permissions -p / admin &quot;.*&quot; &quot;.*&quot; &quot;.*&quot;# 自定义配置文件cd /etc/rabbitmqtouch rabbitmq.conf# 访问图形界面http://Your_Server_IP:15672/# api文档http://Your_Server_IP:15672/api</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;pre&gt;&lt;code&gt;# 安装 Erlang
yum -y install epel-release
yum -y update
yum -y install erlang socat


# 查看是否安装成功
erl -version


# 安装rabbitMQ
wget h
      
    
    </summary>
    
      <category term="后端" scheme="http://www.zhuohc.com/categories/%E5%90%8E%E7%AB%AF/"/>
    
      <category term="运维" scheme="http://www.zhuohc.com/categories/%E5%90%8E%E7%AB%AF/%E8%BF%90%E7%BB%B4/"/>
    
    
  </entry>
  
  <entry>
    <title>postgresql入门基础</title>
    <link href="http://www.zhuohc.com/2018/08/07/postgresql%E5%85%A5%E9%97%A8%E5%9F%BA%E7%A1%80/"/>
    <id>http://www.zhuohc.com/2018/08/07/postgresql入门基础/</id>
    <published>2018-08-07T05:55:57.000Z</published>
    <updated>2019-07-24T01:32:26.156Z</updated>
    
    <content type="html"><![CDATA[<h4 id="manjaro安装"><a href="#manjaro安装" class="headerlink" title="manjaro安装"></a>manjaro安装</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ git clone https://aur.archlinux.org/postgresql-9.6.git</span><br><span class="line">$ cd postgresql-9.6-git</span><br><span class="line">$ less PKGBUILD  # 查看</span><br><span class="line">$ makepkg -si  # 安装</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 初始化数据</span><br><span class="line">$ sudo su postgres -l </span><br><span class="line">$ initdb --locale $LANG -E UTF8 -D &apos;/var/lib/postgres/data/&apos;</span><br><span class="line">$ exit</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 启动及开机启动</span><br><span class="line">sudo systemctl start postgresql.service </span><br><span class="line">sudo systemctl enable postgresql.service</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 登录</span><br><span class="line">$ sudo su postgres -l</span><br><span class="line">$ psql</span><br></pre></td></tr></table></figure><h4 id="安装postgis"><a href="#安装postgis" class="headerlink" title="安装postgis"></a>安装postgis</h4><p>1, 安装proj4.9</p><p>下载源码 <a href="https://proj.org/download.html" target="_blank" rel="noopener">地址</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">tar xfz proj-4.9.3.tar.gz</span><br><span class="line">cd proj-4.9.3</span><br><span class="line">./configure</span><br><span class="line">make</span><br><span class="line">sudo make install</span><br><span class="line"># 安装postgis时，如果没有找到库则需要复制动态库</span><br><span class="line">sudo ln -s /usr/local/lib/libproj.so.12 /usr/lib/libproj.so.12</span><br></pre></td></tr></table></figure><p>2, 安装postgis2.5.2</p><p>下载源码 <a href="https://postgis.net/source/" target="_blank" rel="noopener">地址</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">wget http://download.osgeo.org/postgis/source/postgis-2.5.2.tar.gz</span><br><span class="line">tar xfz postgis-2.5.2.tar.gz</span><br><span class="line">cd postgis-2.5.2</span><br><span class="line">./configure</span><br><span class="line">make</span><br><span class="line">sudo make install</span><br><span class="line">sudo ldconfig</span><br><span class="line">sudo make comments-install</span><br></pre></td></tr></table></figure><h4 id="ubuntu-centos安装"><a href="#ubuntu-centos安装" class="headerlink" title="ubuntu/centos安装"></a>ubuntu/centos安装</h4><p><a href="https://www.postgresql.org/download/linux/ubuntu/" target="_blank" rel="noopener">ubuntu安装</a> <a href="https://www.postgresql.org/download/linux/redhat/" target="_blank" rel="noopener">centos安装</a> centos7.2 安装postgresql9.6</p><pre><code># 添加RPMyum install https://download.postgresql.org/pub/repos/yum/9.6/redhat/rhel-7-x86_64/pgdg-centos96-9.6-3.noarch.rpm# 安装PostgreSQL 9.6# postgresql96-server 数据库核心服务端# postgresql96-contrib 附加第三方扩展# postgresql96-devel C语言开发Header头文件和库yum install postgresql96-server postgresql96-contrib postgresql96-devel# 验证是否安装成功rpm -aq| grep postgres# 设置目录（可省略）cd /mntsudo mkdir vdb1sudo chown -R postgres:postgres vdb1sudo chmod 700 vdb1vi /usr/lib/systemd/system/postgresql-9.6.serviceEnvironment=PGDATA=/mnt/vdb1/ 修改为自己的新的数据路径# 初始化数据库sudo /usr/pgsql-9.6/bin/postgresql96-setup initdb# 开启服务sudo service postgresql-9.6 start 或者 systemctl start postgresql-9.6.service# 开机启动sudo sudo chkconfig postgresql-9.6 on 或者 systemctl enable postgresql-9.6.service# 配置文件 /var/lib/pgsql/9.6/data/postgresql.conf 通用设置 /var/lib/pgsql/9.6/data/pg_hba.conf  控制访问安全 /var/lib/pgsql/9.6/data/pg_ident.conf 配合pg_hba.conf使用  sudo su postgrespsql # 进入命令行模式# 修改密码ALTER USER postgres WITH PASSWORD &apos;密码&apos;; # 创建用户CREATE USER userdoneself WITH PASSWORD &apos;密码passworddoneself&apos;;# 创建数据库create --encoding=UTF8 database dbdoneself owner userdoneself;# 赋予权限grant all privileges on database dbdoneself to userdoneself;\q# 安装postgresql时，系统会自动创建postgres用户# 开启远程访问vi /var/lib/pgsql/9.6/data/postgresql.conf 或者  vi /mnt/vdb1/postgresql.conf(创建了目录)修改#listen_addresses = &apos;localhost&apos; 为  listen_addresses=&apos;*&apos;# 连接数据库先配置登录权限vim pg_hba.conf# 是否远程登录 数据库 用户名 ip地段 方式# 允许doneself用户远程访问host doneself doneself 127.0.0.1/32 md5# 允许管理员密码登录local all postgres  md5# 如果不知道怎么配置， 将全部登录方式改成md5# 查看版本/usr/pgsql-9.6/bin/psql --version</code></pre><h4 id="安装postgis2"><a href="#安装postgis2" class="headerlink" title="安装postgis2"></a>安装postgis2</h4><p>centos7.2</p><pre><code>sudo yum install postgis2_96  # 96和安装的postgresql一致sudo yum install ogr_fdw96  # 安装ogrfdwsudo yum install pgrouting_96 # 安装pgrouting# 用管理员登录postgerysql&gt;-- Enable PostGIS (includes raster)CREATE EXTENSION postgis;-- Enable TopologyCREATE EXTENSION postgis_topology;-- Enable PostGIS Advanced 3D-- and other geoprocessing algorithms-- sfcgal not available with all distributionsCREATE EXTENSION postgis_sfcgal;-- fuzzy matching needed for TigerCREATE EXTENSION fuzzystrmatch;-- rule based standardizerCREATE EXTENSION address_standardizer;-- example rule data setCREATE EXTENSION address_standardizer_data_us;-- Enable US Tiger GeocoderCREATE EXTENSION postgis_tiger_geocoder;# 验证是否安装成功#postgres=&gt; postgis_full_version();</code></pre><h4 id="安装postgresql中文全文搜索zhparser"><a href="#安装postgresql中文全文搜索zhparser" class="headerlink" title="安装postgresql中文全文搜索zhparser"></a>安装postgresql中文全文搜索zhparser</h4><p>centos7.2</p><pre><code> yum install bzip2  # 安装解压包 # 安装SCWS中文分词 https://github.com/hightman/scws wget http://www.xunsearch.com/scws/down/scws-1.2.3.tar.bz2 tar -jxvf scws-1.2.3.tar.bz2  cd scws-1.2.3 ./configure make install # 测试 scws &apos;请问怎么自己动手做西红柿蛋炒饭&apos; -c utf-8 # 安装zhparser git clone https://github.com/amutu/zhparser.git cd zhparserexport PATH=$PATH:/usr/pgsql-9.6/bin/cmake &amp;&amp; make install# 登录（第一次登录）&gt; sudo su - postgres# 修改可以md5登录后&gt; &gt; psql -U user -D database -W&gt;  输入口令# 创建用户user=&gt;  CREATE USER dbuser WITH PASSWORD &apos;password&apos;;# 修改密码user=&gt;  ALTER USER dbuser WITH PASSWORD &apos;newpassword&apos;;# 赋予权限user=&gt;  GRANT ALL PRIVILEGES ON DATABASE exampledb to dbuser;# 允许用户创建数据库user=&gt; ALTER USER doneself CREATEDB;# 设置为超级管理员user=&gt; ALTER ROLE doneself SUPERUSER;# 创建数据库user=&gt;  Create database exampledb owner=dbuser  template= template1  ENCODING = &apos;UTF8&apos;;# 选择数据库user=&gt; \c database# 查看当前数据库所有表user=&gt;  \dtuser=&gt;  \d 数据库 —— 得到所有表的名字user=&gt;  \d 表名 —— 得到表结构</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;manjaro安装&quot;&gt;&lt;a href=&quot;#manjaro安装&quot; class=&quot;headerlink&quot; title=&quot;manjaro安装&quot;&gt;&lt;/a&gt;manjaro安装&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;t
      
    
    </summary>
    
      <category term="后端" scheme="http://www.zhuohc.com/categories/%E5%90%8E%E7%AB%AF/"/>
    
      <category term="运维" scheme="http://www.zhuohc.com/categories/%E5%90%8E%E7%AB%AF/%E8%BF%90%E7%BB%B4/"/>
    
    
  </entry>
  
  <entry>
    <title>java入门基础</title>
    <link href="http://www.zhuohc.com/2018/01/31/java%E5%85%A5%E9%97%A8%E5%9F%BA%E7%A1%80/"/>
    <id>http://www.zhuohc.com/2018/01/31/java入门基础/</id>
    <published>2018-01-31T01:44:05.000Z</published>
    <updated>2019-07-24T01:26:48.603Z</updated>
    
    <content type="html"><![CDATA[<h3 id="linux安装java开发环境"><a href="#linux安装java开发环境" class="headerlink" title="linux安装java开发环境"></a>linux安装java开发环境</h3><pre><code>[root@localhost ~]# mkdir /usr/java[root@localhost ~]# cd /usr/java# 从官方网站下载javaLTS版本源码并复制到当前目录# 下载地址: https://www.oracle.com/technetwork/java/javase/downloads/index.html[root@localhost ~]# tar -zxvf jdk-11.0.3_linux-x64_bin.tar.gz &amp;&amp; rm  jdk-11.0.3_linux-x64_bin.tar.gz# 设置环境变量vi /etc/profile#set java environmentJAVA_HOME=/usr/java/jdk-11.0.3JRE_HOME=/usr/java/jdk-11.0.3/jreCLASS_PATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar:$JRE_HOME/libPATH=$PATH:$JAVA_HOME/bin:$JRE_HOME/binexport JAVA_HOME JRE_HOME CLASS_PATH PATH# 验证[root@localhost ~]# which java/usr/java/jdk-11.0.3/bin/java[root@localhost ~]# java -versionjava version &quot;11.0.3&quot; 2019-04-16 LTSJava(TM) SE Runtime Environment 18.9 (build 11.0.3+12-LTS)                                           Java HotSpot(TM) 64-Bit Server VM 18.9 (build 11.0.3+12-LTS, mixed mode)</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;linux安装java开发环境&quot;&gt;&lt;a href=&quot;#linux安装java开发环境&quot; class=&quot;headerlink&quot; title=&quot;linux安装java开发环境&quot;&gt;&lt;/a&gt;linux安装java开发环境&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;[root@loca
      
    
    </summary>
    
      <category term="前端" scheme="http://www.zhuohc.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
  </entry>
  
  <entry>
    <title>微信本地开发及线上环境搭建</title>
    <link href="http://www.zhuohc.com/2018/01/29/%E5%BE%AE%E4%BF%A1%E6%9C%AC%E5%9C%B0%E5%BC%80%E5%8F%91%E5%8F%8A%E7%BA%BF%E4%B8%8A%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    <id>http://www.zhuohc.com/2018/01/29/微信本地开发及线上环境搭建/</id>
    <published>2018-01-29T09:25:48.000Z</published>
    <updated>2019-07-23T05:51:43.847Z</updated>
    
    <content type="html"><![CDATA[<h4 id="微信开发者中心"><a href="#微信开发者中心" class="headerlink" title="微信开发者中心"></a>微信开发者中心</h4><p><a href="https://open.weixin.qq.com" target="_blank" rel="noopener">https://open.weixin.qq.com</a> 1. 注册线上账号，开发者资质认证 2. 注册本地账号，开发者资质认证</p><h4 id="网站应用"><a href="#网站应用" class="headerlink" title="网站应用"></a>网站应用</h4><ol><li>添加相关信息，并盖章认证，添加授权回调域example.com</li><li>认证通过后获取AppId, AppSecret</li></ol><h4 id="公众号应用"><a href="#公众号应用" class="headerlink" title="公众号应用"></a>公众号应用</h4><h4 id="本地环境配置"><a href="#本地环境配置" class="headerlink" title="本地环境配置"></a>本地环境配置</h4><ol><li>将回调的url <a href="http://www.example.com" target="_blank" rel="noopener">www.example.com</a> 添加到host文件中</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;微信开发者中心&quot;&gt;&lt;a href=&quot;#微信开发者中心&quot; class=&quot;headerlink&quot; title=&quot;微信开发者中心&quot;&gt;&lt;/a&gt;微信开发者中心&lt;/h4&gt;&lt;p&gt;&lt;a href=&quot;https://open.weixin.qq.com&quot; target=&quot;_blan
      
    
    </summary>
    
      <category term="后端" scheme="http://www.zhuohc.com/categories/%E5%90%8E%E7%AB%AF/"/>
    
      <category term="运维" scheme="http://www.zhuohc.com/categories/%E5%90%8E%E7%AB%AF/%E8%BF%90%E7%BB%B4/"/>
    
    
      <category term="微信" scheme="http://www.zhuohc.com/tags/%E5%BE%AE%E4%BF%A1/"/>
    
  </entry>
  
</feed>
